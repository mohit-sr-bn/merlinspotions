{"version":3,"sources":["webpack:///./app/containers/login/selectors.js","webpack:///./app/containers/login/partials/common.jsx","webpack:///./app/containers/login/partials/signin-form.jsx","webpack:///./app/containers/login/partials/signin-panel.jsx","webpack:///./app/components/extra-field/index.jsx","webpack:///./app/containers/login/partials/register-form.jsx","webpack:///./app/containers/login/partials/register-panel.jsx","webpack:///./app/containers/login/container.jsx"],"names":["getLogin","createSelector","getUi","_ref","login","isSigninLoaded","createGetSelector","isRegisterLoaded","getPageMeta","LoginFieldLabel","label","forgotPassword","react_default","a","createElement","link_default","className","href","propTypes","PropTypes","shape","string","title","oneOfType","node","LoginField","_ref2","type","name","tooltip","analyticsName","isPassword","field_row_default","redux_form_min","common_LoginFieldLabel","component","Field","password_input_default","isText","buttonTextHide","buttonTextShow","data-analytics-name","isRequired","object","bool","SignInForm","props","classCallCheck_default","this","_this","possibleConstructorReturn_default","__proto__","Object","getPrototypeOf","call","onSubmit","bind","values","submitForm","_props","error","submitting","handleSubmit","isFormLoaded","id","SIGN_IN_FORM_NAME","UI_NAME","noValidate","field_set_default","common_LoginField","email","password","button_default","disabled","React","Component","func","ReduxSignInForm","reduxForm","form","mapStateToProps","createPropsSelector","mapDispatchToProps","submitSignInForm","connect","SignInPanel","signin_form","ExtraField","extraFields","classes","classNames","field","find","console","log","options","Children","map","value","index","key","code","arrayOf","oneOf","RegisterForm","toggleWhatIsInThese","state","whatIsInThese","currentState","setState","tabIndexWhatIsThese","whatsInTheseClasses","u-visually-hidden","LabelButton","data","input","text","extends_default","htmlFor","icon_default","REGISTER_FORM_NAME","register","extra_field","firstName","lastName","field_default","innerClassName","onClick","tabIndex","confirmPassword","ReduxRegisterForm","initialValues","getRegisterUserEnhancementInitialValues","getRegisterUserEnhancementFields","submitRegisterForm","RegisterPanel","register_form","Login","onChangeTab","navigateToSection","router","routes","SECTION_FOR_INDEX","routeName","route","pageMeta","isRunningInAstro","SIGN_IN_SECTION","signin_panel","REGISTER_SECTION","register_panel","page_meta","tabs","activeIndex","INDEX_FOR_SECTION","onChange","SECTION_NAMES","IntegrationManager","account","array","initAction","initialize","template","withRouter"],"mappings":"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","file":"login.js","sourcesContent":["/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport {createSelector} from 'reselect'\nimport {createGetSelector} from 'reselect-immutable-helpers'\nimport {getUi} from '../../store/selectors'\n\nexport const getLogin = createSelector(getUi, ({login}) => login)\n\nexport const isSigninLoaded = createGetSelector(getLogin, 'signinSection')\nexport const isRegisterLoaded = createGetSelector(getLogin, 'registerSection')\nexport const getPageMeta = createGetSelector(getLogin, 'pageMeta')\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Field as ReduxFormField} from 'redux-form'\n\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\nimport PasswordInput from 'progressive-web-sdk/dist/components/password-input'\nimport Link from 'progressive-web-sdk/dist/components/link'\n\nexport const LoginFieldLabel = ({label, forgotPassword}) => (\n    <span>\n        {label}\n\n        {forgotPassword &&\n            <Link className=\"u-float-end u-text-weight-regular\" href={forgotPassword.href}>\n                Forgot Your Password?\n            </Link>\n        }\n    </span>\n)\n\nLoginFieldLabel.propTypes = {\n    forgotPassword: PropTypes.shape({\n        href: PropTypes.string,\n        title: PropTypes.string\n    }),\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n}\n\nexport const LoginField = ({label, type, forgotPassword, name, tooltip, analyticsName, isPassword}) => (\n    <FieldRow>\n        <ReduxFormField\n            name={name}\n            label={<LoginFieldLabel label={label} forgotPassword={forgotPassword} />}\n            component={Field}\n            >\n            {isPassword ?\n                <PasswordInput isText buttonTextHide=\"Hide\" buttonTextShow=\"Show\" analyticsName={analyticsName} />\n            :\n                <input type={type} data-analytics-name={analyticsName} />\n            }\n        </ReduxFormField>\n\n        {tooltip}\n    </FieldRow>\n)\n\nLoginField.propTypes = {\n    analyticsName: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    forgotPassword: PropTypes.object,\n    isPassword: PropTypes.bool,\n    tooltip: PropTypes.node\n}\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {reduxForm} from 'redux-form'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport {connect} from 'react-redux'\nimport {isSigninLoaded} from '../selectors'\nimport {submitSignInForm} from '../actions'\n\nimport Button from 'progressive-web-sdk/dist/components/button'\nimport FieldSet from 'progressive-web-sdk/dist/components/field-set'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\n\nimport {LoginField} from './common'\n\nconst FORGOT_PASSWORD_PATH = '/customer/account/forgotpassword'\n\nimport {SIGN_IN_FORM_NAME} from '../../../store/form/constants'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nclass SignInForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onSubmit(values) {\n        return this.props.submitForm(values)\n    }\n\n    render() {\n        const {\n            error,\n            submitting,\n            handleSubmit,\n            isFormLoaded\n        } = this.props\n\n        return (\n            <form id={SIGN_IN_FORM_NAME} data-analytics-name={UI_NAME.login} noValidate={true} onSubmit={handleSubmit(this.onSubmit)}>\n                {error &&\n                    <div className=\"u-margin-bottom-md u-color-error\">\n                        {error}\n                    </div>\n                }\n\n                <FieldSet className=\"t-login__signin-fieldset\">\n                    <LoginField\n                        label=\"Email\"\n                        name=\"username\"\n                        type=\"email\"\n                        analyticsName={UI_NAME.email}\n                        />\n\n                    <LoginField\n                        label=\"Password\"\n                        name=\"password\"\n                        type=\"password\"\n                        forgotPassword={{href: FORGOT_PASSWORD_PATH}}\n                        analyticsName={UI_NAME.password}\n                        isPassword\n                        />\n                    <FieldRow>\n                        <Button\n                            className=\"pw--primary u-width-full\"\n                            type=\"submit\"\n                            disabled={submitting || !isFormLoaded}\n                            data-analytics-name={UI_NAME.login}\n                        >\n                            <span className=\"u-text-uppercase\">Login</span>\n                        </Button>\n                    </FieldRow>\n                </FieldSet>\n            </form>\n        )\n    }\n}\n\nSignInForm.propTypes = {\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func,\n    isFormLoaded: PropTypes.bool,\n    submitForm: PropTypes.func,\n    submitting: PropTypes.bool,\n}\n\n\nconst ReduxSignInForm = reduxForm({\n    form: SIGN_IN_FORM_NAME\n})(SignInForm)\n\nconst mapStateToProps = createPropsSelector({\n    isFormLoaded: isSigninLoaded\n})\n\nconst mapDispatchToProps = {\n    submitForm: submitSignInForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxSignInForm)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\n\nimport SignInForm from './signin-form'\n\nconst SignInPanel = () => (\n    <div className=\"t-login__signin-panel\">\n        <div className=\"u-padding-start-md u-padding-end-md u-padding-top-lg u-padding-bottom-lg\">\n            <p>\n                If you have an account, sign in with your email address.\n            </p>\n        </div>\n\n        <div className=\"u-padding-start-md u-padding-end-md u-padding-bottom-lg\">\n            <SignInForm />\n        </div>\n    </div>\n)\n\nexport default SignInPanel\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Field as ReduxFormField} from 'redux-form'\nimport classNames from 'classnames'\n\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\n\n/**\n * This component is used to add extra form fields programmatically to the scaffold\n */\nconst ExtraField = ({extraFields, name, className}) => {\n    const classes = classNames('c-extra-field', className)\n\n    const field = extraFields.find((field) => field.name === name)\n\n    // Skip rendering the field if the requested name doesn't exist\n    if (!field) {\n        console.log(`Extra field '${name}' doesn't exist. Will not render <ExtraField /> for it.`)\n        return null\n    }\n\n    const {type, label, analyticsName, options} = field\n    let Children\n\n    if (type === 'select') {\n        Children = (\n            <select className=\"pw--has-select\" data-analytics-name={analyticsName}>\n                {options.map((value, index) =>\n                    <option key={index} value={value.code}>{value.name}</option>\n                )}\n            </select>\n        )\n    } else {\n        Children = <input type={type} data-analytics-name={analyticsName} />\n    }\n\n    return (<FieldRow>\n        <ReduxFormField\n            name={name}\n            label={label}\n            component={Field}\n            className={classes}\n            >\n            {Children}\n        </ReduxFormField>\n    </FieldRow>)\n}\n\nExtraField.propTypes = {\n    extraFields: PropTypes.arrayOf(PropTypes.shape({\n        analyticsName: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['select', 'input']).isRequired,\n        options: PropTypes.arrayOf(PropTypes.shape({\n            code: PropTypes.string,\n            name: PropTypes.string\n        }))\n    })).isRequired,\n    name: PropTypes.string.isRequired,\n    className: PropTypes.string,\n}\n\nexport default ExtraField\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Field as ReduxFormField, reduxForm} from 'redux-form'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport {connect} from 'react-redux'\nimport classNames from 'classnames'\nimport {isRegisterLoaded} from '../selectors'\nimport {submitRegisterForm} from '../actions'\n\nimport Button from 'progressive-web-sdk/dist/components/button'\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldSet from 'progressive-web-sdk/dist/components/field-set'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\nimport Icon from 'progressive-web-sdk/dist/components/icon'\nimport Link from 'progressive-web-sdk/dist/components/link'\n\nimport {LoginField} from './common'\nimport ExtraField from '../../../components/extra-field'\n\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\nimport {REGISTER_FORM_NAME} from '../../../store/form/constants'\n\nimport {\n    getRegisterUserEnhancementInitialValues,\n    getRegisterUserEnhancementFields\n} from 'mobify-integration-manager/dist/connectors/hybris/selectors'\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.toggleWhatIsInThese = this.toggleWhatIsInThese.bind(this)\n\n        this.state = {\n            whatIsInThese: true\n        }\n    }\n\n    onSubmit(values) {\n        return this.props.submitForm(values)\n    }\n\n    toggleWhatIsInThese() {\n        const currentState = this.state.whatIsInThese\n\n        this.setState({\n            whatIsInThese: !currentState\n        })\n    }\n\n    render() {\n        const {\n            error,\n            submitting,\n            handleSubmit,\n            isFormLoaded,\n            extraFields\n        } = this.props\n\n        const subscribeName = 'subscribe-newsletter'\n        const subscribeYes = 'yes-subscribe'\n        const subscribeNo = 'no-subscribe'\n        const tabIndexWhatIsThese = this.state.whatIsInThese ? '-1' : '0'\n\n        const whatsInTheseClasses = classNames('u-color-neutral-50', {\n            'u-visually-hidden': this.state.whatIsInThese\n        })\n\n        const LabelButton = ({\n            data,\n            id,\n            input,\n            text,\n            type\n        }) => (\n            <div className=\"t-login__subscribe-radio-button u-flex\">\n                <input\n                    {...input}\n                    type={type}\n                    id={id}\n                    data-analytics-name={data}\n                />\n\n                <label\n                    className=\"u-width-full u-display-inline-table\"\n                    htmlFor={id}\n                >\n                    <div className=\"u-flexbox u-justify-center u-align-center\">\n                        <Icon className=\"u-margin-end\" name=\"done\" title=\"Check\" />\n\n                        {text}\n                    </div>\n                </label>\n            </div>\n        )\n\n        return (\n            <form id={REGISTER_FORM_NAME} data-analytics-name={UI_NAME.register} noValidate={true} onSubmit={handleSubmit(this.onSubmit)}>\n                {error &&\n                    <div className=\"u-margin-bottom-md u-color-error\">\n                        {error}\n                    </div>\n                }\n\n                <FieldSet className=\"t-login__register-fieldset\">\n                    <ExtraField name=\"titleCode\" extraFields={extraFields} />\n\n                    <LoginField\n                        label=\"First Name\"\n                        name=\"firstname\"\n                        type=\"text\"\n                        analyticsName={UI_NAME.firstName}\n                        />\n\n                    <LoginField\n                        label=\"Last Name\"\n                        name=\"lastname\"\n                        type=\"text\"\n                        analyticsName={UI_NAME.lastName}\n                        />\n\n                    <LoginField\n                        label=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        analyticsName={UI_NAME.email}\n                    />\n\n                    <div className=\"u-margin-top-lg\">\n                        <Field label={<span className=\"u-text-weight-regular\">Want to receive email updates?</span>} />\n\n                        <FieldRow>\n                            <ReduxFormField\n                                component={LabelButton}\n                                data=\"receive_email_updates:yes\"\n                                id={subscribeYes}\n                                name={subscribeName}\n                                type=\"radio\"\n                                text=\"Yes please\"\n                                value={subscribeYes}\n                            />\n\n                            <ReduxFormField\n                                component={LabelButton}\n                                data=\"receive_email_updates:no\"\n                                id={subscribeNo}\n                                name={subscribeName}\n                                type=\"radio\"\n                                text=\"No, Thanks\"\n                                value={subscribeNo}\n                            />\n                        </FieldRow>\n\n                        <Button\n                            className=\"u-color-brand\"\n                            innerClassName=\"pw--no-min-width u-padding-start-0 u-padding-bottom-0\"\n                            onClick={this.toggleWhatIsInThese}\n                        >\n                            What's in these?\n                            <Icon\n                                className=\"u-margin-start-sm\"\n                                name={this.state.whatIsInThese ? 'chevron-down' : 'chevron-up'}\n                            />\n                        </Button>\n\n                        <div\n                            className={whatsInTheseClasses}\n                            tabIndex={tabIndexWhatIsThese}\n                        >\n                            We send out a monthly email featuring news, top tips, and promotions. We don’t share your information and you can opt out any time.\n                            Find out more in our <Link className=\"u-color-brand\" href=\"/privacy-policy-cookie-restriction-mode/\" tabIndex={tabIndexWhatIsThese}>Privacy policy</Link>\n                        </div>\n                    </div>\n                </FieldSet>\n\n                <FieldSet className=\"t-login__register-fieldset\">\n                    <LoginField\n                        label=\"Password\"\n                        name=\"password\"\n                        type=\"password\"\n                        analyticsName={UI_NAME.password}\n                        isPassword\n                        />\n\n                    <LoginField\n                        label=\"Confirm Password\"\n                        name=\"password_confirmation\"\n                        type=\"password\"\n                        analyticsName={UI_NAME.confirmPassword}\n                        isPassword\n                        />\n                </FieldSet>\n\n                <FieldSet>\n                    <p className=\"u-margin-top-md u-margin-bottom-lg u-color-neutral-50\">\n                        Your personal data will only be used to store an account on our site. We do not share with any third parties.\n                    </p>\n\n                    <LoginField\n                        label={<span className=\"u-text-size-medium\">I agree to <Link href=\"/privacy-policy-cookie-restriction-mode/\">terms & conditions</Link></span>}\n                        name=\"terms_and_conditions\"\n                        type=\"checkbox\"\n                        analyticsName=\"terms_and_conditions\"\n                    />\n                </FieldSet>\n\n                <Button\n                    className=\"pw--primary u-width-full u-margin-top-lg\"\n                    type=\"submit\"\n                    disabled={submitting || !isFormLoaded}\n                    data-analytics-name={UI_NAME.register}\n                >\n                    <span className=\"u-text-uppercase\">Create an Account</span>\n                </Button>\n            </form>\n        )\n    }\n}\n\nRegisterForm.propTypes = {\n    error: PropTypes.string,\n    extraFields: ExtraField.propTypes.extraFields, // Just piggy back on the existing definition\n    handleSubmit: PropTypes.func,\n    isFormLoaded: PropTypes.bool,\n    submitForm: PropTypes.func,\n    submitting: PropTypes.bool,\n}\n\n\nconst ReduxRegisterForm = reduxForm({\n    form: REGISTER_FORM_NAME\n})(RegisterForm)\n\nconst mapStateToProps = createPropsSelector({\n    initialValues: getRegisterUserEnhancementInitialValues,\n    isFormLoaded: isRegisterLoaded,\n    extraFields: getRegisterUserEnhancementFields\n})\n\nconst mapDispatchToProps = {\n    submitForm: submitRegisterForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxRegisterForm)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\n\nimport RegisterForm from './register-form'\n\nconst RegisterPanel = () => (\n    <div className=\"t-login__register-panel\">\n        <div className=\"u-padding-start-md u-padding-end-md u-padding-top-lg u-padding-bottom-lg\">\n            <p>\n                {'Creating an account has many benefits: check out faster, keep more than one address, track orders, and more'}\n            </p>\n        </div>\n\n        <div className=\"u-padding-start-md u-padding-end-md u-padding-bottom-lg\">\n            <RegisterForm />\n        </div>\n    </div>\n)\n\nexport default RegisterPanel\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport IntegrationManager from 'mobify-integration-manager/dist/'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport {withRouter} from 'progressive-web-sdk/dist/routing'\n\nimport template from '../../template'\nimport PageMeta from '../../components/page-meta'\n\nimport {getPageMeta} from './selectors'\nimport SignInPanel from './partials/signin-panel'\nimport RegisterPanel from './partials/register-panel'\n\nimport {Tabs, TabsPanel} from 'progressive-web-sdk/dist/components/tabs'\nimport {initialize} from './actions'\n\nimport {\n    SIGN_IN_SECTION,\n    REGISTER_SECTION,\n    SECTION_NAMES,\n    INDEX_FOR_SECTION,\n    SECTION_FOR_INDEX\n} from './constants'\n\nimport {isRunningInAstro} from '../app/selectors'\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.onChangeTab = this.onChangeTab.bind(this)\n    }\n\n    onChangeTab(index) {\n        this.props.navigateToSection(\n            this.props.router,\n            this.props.routes,\n            SECTION_FOR_INDEX[index]\n        )\n    }\n\n    render() {\n        const {\n            route: {\n                routeName\n            },\n            pageMeta,\n            isRunningInAstro\n        } = this.props\n\n        if (!isRunningInAstro) {\n            return (\n                <div className=\"t-login\">\n                    <PageMeta {...pageMeta} />\n\n                    <div className=\"u-bg-color-neutral-10 u-padding-md u-padding-top-lg u-padding-bottom-lg u-box-shadow-inset\">\n                        <h1 className=\"u-text-uppercase u-text-weight-medium\">\n                            Customer Login\n                        </h1>\n                    </div>\n\n                    <Tabs activeIndex={INDEX_FOR_SECTION[routeName]} className=\"t-login__navigation\" onChange={this.onChangeTab}>\n                        <TabsPanel title={SECTION_NAMES[SIGN_IN_SECTION]}>\n                            <SignInPanel />\n                        </TabsPanel>\n                        <TabsPanel title={SECTION_NAMES[REGISTER_SECTION]}>\n                            <RegisterPanel />\n                        </TabsPanel>\n                    </Tabs>\n                </div>\n            )\n        } else if (routeName === SIGN_IN_SECTION) {\n            return (\n                <div className=\"t-login\">\n                    <SignInPanel />\n                </div>\n            )\n        } else if (routeName === REGISTER_SECTION) {\n            return (\n                <div className=\"t-login\">\n                    <RegisterPanel />\n                </div>\n            )\n        } else {\n            console.log('route unsupported: ', routeName)\n            return null\n        }\n    }\n}\n\nconst mapStateToProps = createPropsSelector({\n    pageMeta: getPageMeta,\n    isRunningInAstro\n})\n\nconst mapDispatchToProps = {\n    navigateToSection: IntegrationManager.account.navigateToSection\n}\n\nLogin.propTypes = {\n    isRunningInAstro: PropTypes.bool,\n    navigateToSection: PropTypes.func,\n    pageMeta: PropTypes.object,\n    route: PropTypes.object,\n    router: PropTypes.object,\n    routes: PropTypes.array\n}\n\nLogin.initAction = initialize\n\nexport default template(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withRouter(Login))\n)\n"],"sourceRoot":""}