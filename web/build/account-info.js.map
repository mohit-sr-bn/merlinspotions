{"version":3,"sources":["webpack:///./node_modules/progressive-web-sdk/dist/components/field/index.js","webpack:///./node_modules/progressive-web-sdk/dist/components/field-row/index.js","webpack:///./node_modules/progressive-web-sdk/dist/components/breadcrumbs/index.js","webpack:///./node_modules/progressive-web-sdk/dist/components/password-input/index.js","webpack:///./app/containers/account-info/selectors.js","webpack:///./app/containers/account-info/container.jsx"],"names":["Object","defineProperty","exports","value","_extends3","_interopRequireDefault","__webpack_require__","_getPrototypeOf2","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_react2","_propTypes2","_classnames2","obj","__esModule","default","getUniqueId","i","Field","_React$Component","props","this","_this","__proto__","call","idForLabel","inputId","isCheckRadio","shouldStackLabelInput","bind","shouldPlaceLabelAtEnd","buildEventHandler","key","labelPosition","eventHandlerName","_this2","customHandler","customEventHandlers","input","e","_this3","_props","label","hint","error","caption","className","children","shouldShowErrorsInstantly","childDisabled","childChecked","onlyChild","Children","count","newChildren","map","child","idx","childProps","type","onBlur","onFocus","onChange","onDrop","onDragStart","aria-invalid","aria-required","required","disabled","checked","id","isRequired","cloneElement","metaProps","meta","shouldShowReduxError","touched","active","dirty","reduxFormError","fieldError","classes","pw--is-check-radio","pw--error","pw--required","pw--disabled","pw--checked","innerClasses","pw--stack","labelClasses","pw--end","inputClasses","createElement","htmlFor","Component","propTypes","node","string","shape","func","object","oneOf","bool","FieldRow","_ref","_link2","Breadcrumbs","items","youAreHereMessage","includeMicroData","length","breadcrumbListMicroData","listMicroData","thingMicroData","itemScope","itemType","itemProp","role","text","aria-labelledby","_ref2","index","href","onClick","itemContent","content","defaultProps","arrayOf","oneOfType","_objectWithoutProperties3","_button2","_dataObjects","PasswordInput","state","passwordVisible","showPassword","toggleVisibility","getChildren","setState","hideButtonText","buttonTextHide","buttonTextShow","_props2","buttonClassName","buttonIconName","buttonIconSize","analyticsName","inputProps","toggleClasses","pw--inactive","pw--is-text","data-analytics-name","icon","iconSize","title","UI_NAME","togglePasswordText","getAccountInfo","createSelector","getUi","accountInfo","getAccountInfoPageMeta","createGetSelector","Immutable","Map","getAccountInfoInitialValues","getUser","user","get","names","email","AccountInfoForm","handleSubmit","onSubmit","dashboardURL","pageMeta","react_default","a","page_meta","breadcrumbs_default","field_row_default","redux_form_min","component","name","customerName","password_input_default","isText","currentPassword","password","button_default","PropTypes","mapStateToProps","createPropsSelector","getAccountURL","initialValues","mapDispatchToProps","submitAccountInfoForm","AccountInfo","ReduxForm","form","initAction","initialize","template","connect"],"mappings":"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","file":"account-info.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getUniqueId = function () {\n    var i = 0;\n\n    return function () {\n        return 'field-' + i++;\n    };\n}();\n\n/**\n * Related components:\n *\n * * [FieldRow](#!/FieldRow)\n * * [FieldSet](#!/FieldSet)\n *\n * `Field` is a wrapper around a single form input that standardizes layout\n * of labels, hints and errors when using `redux-form`.\n *\n * It expects to receive an `<input>`, `<select>`, `<textarea>` or a custom\n * form-input component. Custom inputs should be compatible with redux-form\n * which typically means accepting `onChange`, `onBlur` and `value` props.\n *\n * @example ./DESIGN.md\n */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nvar Field = function (_React$Component) {\n    (0, _inherits3.default)(Field, _React$Component);\n\n    function Field(props) {\n        (0, _classCallCheck3.default)(this, Field);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Field.__proto__ || (0, _getPrototypeOf2.default)(Field)).call(this, props));\n\n        if (props.idForLabel) {\n            _this.inputId = props.idForLabel;\n        } else {\n            _this.inputId = getUniqueId();\n        }\n\n        _this.isCheckRadio = false;\n        _this.shouldStackLabelInput = _this.shouldStackLabelInput.bind(_this);\n        _this.shouldPlaceLabelAtEnd = _this.shouldPlaceLabelAtEnd.bind(_this);\n        _this.buildEventHandler = _this.buildEventHandler.bind(_this);\n        return _this;\n    }\n\n    (0, _createClass3.default)(Field, [{\n        key: 'shouldStackLabelInput',\n        value: function shouldStackLabelInput() {\n            if (!this.props.labelPosition) {\n                return !this.isCheckRadio;\n            } else {\n                return this.props.labelPosition === 'top';\n            }\n        }\n    }, {\n        key: 'shouldPlaceLabelAtEnd',\n        value: function shouldPlaceLabelAtEnd() {\n            if (!this.props.labelPosition) {\n                return this.isCheckRadio;\n            } else {\n                return this.props.labelPosition === 'end';\n            }\n        }\n    }, {\n        key: 'buildEventHandler',\n        value: function buildEventHandler(eventHandlerName) {\n            var _this2 = this;\n\n            var customHandler = this.props.customEventHandlers[eventHandlerName];\n            var input = this.props.input;\n\n            if (input) {\n                return typeof customHandler === 'function' ? function (e) {\n                    _this2.props.input[eventHandlerName](e);\n                    customHandler(e);\n                } : this.props.input[eventHandlerName];\n            }\n            return customHandler;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this3 = this;\n\n            var _props = this.props,\n                label = _props.label,\n                hint = _props.hint,\n                error = _props.error,\n                caption = _props.caption,\n                className = _props.className,\n                children = _props.children,\n                shouldShowErrorsInstantly = _props.shouldShowErrorsInstantly,\n                customEventHandlers = _props.customEventHandlers;\n\n\n            var childDisabled = false;\n            var childChecked = false;\n            var onlyChild = _react2.default.Children.count(children) === 1;\n\n            var newChildren = _react2.default.Children.map(children, function (child, idx) {\n                var childProps = {};\n\n                var isFormControl = child.type === 'input' || child.type === 'select' || child.type === 'textarea' || typeof child.type == 'function' // Custom component, can handle props\n                ;\n\n                if (isFormControl) {\n                    childProps = (0, _extends3.default)({}, _this3.props.input);\n                }\n\n                if (customEventHandlers) {\n                    // Redux form adds it's own handlers for these events\n                    // In order to add our own and prevent redux-forms being overwritten\n                    // we need to build a new function that calls both\n                    // Overwritting redux form's handlers will cause validation to break\n                    childProps.onBlur = _this3.buildEventHandler('onBlur', childProps);\n                    childProps.onFocus = _this3.buildEventHandler('onFocus', childProps);\n                    childProps.onChange = _this3.buildEventHandler('onChange', childProps);\n                    childProps.onDrop = _this3.buildEventHandler('onDrop', childProps);\n                    childProps.onDragStart = _this3.buildEventHandler('onDragStart', childProps);\n                }\n\n                childProps = (0, _extends3.default)({}, childProps, {\n                    'aria-invalid': !!error,\n                    'aria-required': child.props.required\n                }, child.props);\n\n                if (child.props.disabled) {\n                    childDisabled = true;\n                }\n\n                if (childProps.checked) {\n                    childChecked = true;\n                }\n\n                if (error) {\n                    childProps.className = (0, _classnames2.default)(child.props.className, 'pw--has-error');\n                }\n\n                // Give the first child the id for the field\n                if (idx === 0) {\n                    childProps.id = _this3.inputId;\n                }\n\n                if (onlyChild && (child.props.type === 'radio' || child.props.type === 'checkbox')) {\n                    _this3.isCheckRadio = true;\n                }\n\n                if (child.props.required) {\n                    _this3.isRequired = true;\n                }\n\n                return _react2.default.cloneElement(child, childProps);\n            });\n\n            var metaProps = this.props.meta;\n            var shouldShowReduxError = metaProps && (metaProps.touched && !metaProps.active || metaProps.dirty && shouldShowErrorsInstantly);\n            var reduxFormError = metaProps && shouldShowReduxError && metaProps.error;\n            var fieldError = error || reduxFormError;\n\n            var classes = (0, _classnames2.default)('pw-field', {\n                'pw--is-check-radio': this.isCheckRadio,\n                'pw--error': fieldError,\n                'pw--required': this.isRequired,\n                'pw--disabled': childDisabled,\n                'pw--checked': childChecked\n            }, className);\n\n            var innerClasses = (0, _classnames2.default)('pw-field__inner', {\n                'pw--stack': this.shouldStackLabelInput()\n            });\n\n            var labelClasses = (0, _classnames2.default)('pw-field__label-wrap', {\n                'pw--end': this.shouldPlaceLabelAtEnd()\n            });\n\n            var inputClasses = (0, _classnames2.default)('pw-field__input');\n\n            return _react2.default.createElement(\n                'div',\n                { className: classes },\n                _react2.default.createElement(\n                    'div',\n                    { className: innerClasses },\n                    label && _react2.default.createElement(\n                        'div',\n                        { className: labelClasses },\n                        _react2.default.createElement(\n                            'label',\n                            {\n                                className: 'pw-field__label',\n                                htmlFor: this.inputId\n                            },\n                            label\n                        ),\n                        hint && _react2.default.createElement(\n                            'div',\n                            { className: 'pw-field__hint' },\n                            hint\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: inputClasses },\n                        newChildren\n                    )\n                ),\n                fieldError && _react2.default.createElement(\n                    'div',\n                    { className: 'pw-field__error' },\n                    fieldError\n                ),\n                caption && _react2.default.createElement(\n                    'div',\n                    { className: 'pw-field__caption' },\n                    caption\n                )\n            );\n        }\n    }]);\n    return Field;\n}(_react2.default.Component);\n\nField.propTypes = {\n    /**\n     * The input(s) to include in the field.\n     */\n    children: _propTypes2.default.node.isRequired,\n\n    /**\n     * Extra information that may help the user complete this field.\n     */\n    caption: _propTypes2.default.node,\n\n    /**\n     * Adds values to the `class` attribute of the root element.\n     */\n    className: _propTypes2.default.string,\n\n    /**\n    * Custom event handlers to be added to the input.\n    * If used with redux form these handlers will be called after\n    * the handlers added by redux form.\n    */\n    customEventHandlers: _propTypes2.default.shape({\n        onBlur: _propTypes2.default.func,\n        onChange: _propTypes2.default.func,\n        onDrop: _propTypes2.default.func,\n        onDragStart: _propTypes2.default.func,\n        onFocus: _propTypes2.default.func\n    }),\n    /**\n     * If this prop is passed in, the pw--error class will be added to the field\n     * and the error will be shown.\n     * Also adds the aria-invalid attribute.\n     */\n    error: _propTypes2.default.node,\n\n    /**\n     * Extra information that displays beside the label.\n     */\n    hint: _propTypes2.default.node,\n\n    /**\n     * If provided, this will be used as the 'id' attr for the input and the 'for' attr for the label.\n     * If not provided, an id will be generated and used.\n     */\n    idForLabel: _propTypes2.default.string,\n\n    /**\n     * Developers can ignore this prop.\n     * If our field is used with redux-form this prop gets passed by redux-form.\n     */\n    input: _propTypes2.default.object,\n\n    /**\n     * The label for the input.\n     * The id of the input will be used as the 'for' attribute for this label,\n     * unless one is already provided.\n     */\n    label: _propTypes2.default.node,\n\n    /**\n     * Specify the position of the label. Default behaviour:\n     * If the input is a checkbox or radio, the label will display after the input\n     * Else, the label will display on top of the input.\n     */\n    labelPosition: _propTypes2.default.oneOf(['top', 'start', 'end']),\n\n    /**\n     * Developers can ignore this prop.\n     * If our field is used with redux-form this prop gets passed by redux-form.\n     */\n    meta: _propTypes2.default.object,\n\n    /**\n     * Indicates whether to show field errors instantly, i.e. as the user types\n     * in a field.\n     * Set this to `false` to show errors on blur.\n     */\n    shouldShowErrorsInstantly: _propTypes2.default.bool\n};\n\nexports.default = Field;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Related components:\n *\n * * [Field](#!/Field)\n * * [FieldSet](#!/FieldSet)\n *\n * `FieldRow` is used to group multiple Fields on one line of a form.\n *\n * @example ./DESIGN.md\n */\nvar FieldRow = function FieldRow(_ref) {\n    var className = _ref.className,\n        children = _ref.children;\n\n    var classes = (0, _classnames2.default)('pw-field-row', className);\n\n    return _react2.default.createElement(\n        'div',\n        { className: classes },\n        children\n    );\n}; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nFieldRow.propTypes = {\n    /**\n     * The content that should be rendered within `FieldRow`.\n     */\n    children: _propTypes2.default.node,\n\n    /**\n     * Adds values to the `class` attribute of the root element.\n     */\n    className: _propTypes2.default.string\n};\n\nexports.default = FieldRow;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _link = require('../link');\n\nvar _link2 = _interopRequireDefault(_link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * `Breadcrumbs` is used to provide users a navigational path they took to get to the current page.\n *\n * @example ./DESIGN.md\n */\n\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nvar Breadcrumbs = function Breadcrumbs(_ref) {\n    var className = _ref.className,\n        items = _ref.items,\n        youAreHereMessage = _ref.youAreHereMessage,\n        includeMicroData = _ref.includeMicroData;\n\n    if (!items.length) {\n        return false;\n    }\n\n    var breadcrumbListMicroData = {};\n    var listMicroData = {};\n    var thingMicroData = {};\n\n    if (includeMicroData) {\n        breadcrumbListMicroData = {\n            itemScope: true,\n            itemType: 'http://schema.org/BreadcrumbList'\n        };\n        listMicroData = {\n            itemProp: 'itemListElement',\n            itemScope: true,\n            itemType: 'http://schema.org/ListItem'\n        };\n        thingMicroData = {\n            itemScope: true,\n            itemProp: 'item',\n            itemType: 'http://schema.org/Thing'\n        };\n    }\n\n    return _react2.default.createElement(\n        'nav',\n        { role: 'navigation', className: (0, _classnames2.default)('pw-breadcrumbs', className) },\n        _react2.default.createElement(\n            'p',\n            { id: 'breadcrumb__label', className: 'pw-breadcrumbs__label u-visually-hidden' },\n            youAreHereMessage,\n            ': ',\n            items[items.length - 1].text\n        ),\n        _react2.default.createElement(\n            'ol',\n            (0, _extends3.default)({ 'aria-labelledby': 'breadcrumb__label', className: 'pw-breadcrumbs__list' }, breadcrumbListMicroData),\n            items.map(function (_ref2, index) {\n                var href = _ref2.href,\n                    text = _ref2.text,\n                    onClick = _ref2.onClick;\n\n                var itemContent = includeMicroData ? _react2.default.createElement(\n                    'span',\n                    { itemProp: 'name' },\n                    text,\n                    href && _react2.default.createElement('meta', { itemProp: 'url', content: href })\n                ) : text;\n                return _react2.default.createElement(\n                    'li',\n                    (0, _extends3.default)({ className: 'pw-breadcrumbs__item', key: index }, listMicroData),\n                    href || onClick ? _react2.default.createElement(\n                        _link2.default,\n                        (0, _extends3.default)({\n                            href: href,\n                            className: 'pw-breadcrumbs__link',\n                            onClick: onClick\n                        }, thingMicroData),\n                        itemContent\n                    ) : _react2.default.createElement(\n                        'span',\n                        (0, _extends3.default)({\n                            className: 'pw-breadcrumbs__non-link'\n                        }, thingMicroData),\n                        itemContent\n                    ),\n                    includeMicroData && _react2.default.createElement('meta', { itemProp: 'position', content: index + 1 })\n                );\n            })\n        )\n    );\n};\n\nBreadcrumbs.defaultProps = {\n    items: [],\n    youAreHereMessage: 'You are here'\n};\n\nBreadcrumbs.propTypes = {\n    /**\n     * The list of breadcrumbs.\n     * Each breadcrumb item should be an object (More info on items prop below).\n     */\n    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n        text: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]).required,\n        href: _propTypes2.default.string,\n        onClick: _propTypes2.default.func\n    })).isRequired,\n\n    /**\n     * Adds values to the `class` attribute of the root element.\n     */\n    className: _propTypes2.default.string,\n\n    /**\n     * Indicates if SEO microdata should be included in the breadcrumb element\n     * https://developers.google.com/search/docs/data-types/breadcrumbs\n     * https://www.w3.org/TR/microdata/\n     */\n    includeMicroData: _propTypes2.default.bool,\n\n    /**\n     * This component has a visually hidden label to make it more accessible to screen readers.\n     * You can change this property to change the label's content.\n     */\n    youAreHereMessage: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node])\n};\n\nexports.default = Breadcrumbs;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _button = require('../button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _dataObjects = require('../../analytics/data-objects/');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An input field to capture passwords.\n * Allows the user to toggle if their password should be visible or masked.\n */\n\nvar PasswordInput = function (_React$Component) {\n    (0, _inherits3.default)(PasswordInput, _React$Component);\n\n    function PasswordInput(props) {\n        (0, _classCallCheck3.default)(this, PasswordInput);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (PasswordInput.__proto__ || (0, _getPrototypeOf2.default)(PasswordInput)).call(this, props));\n\n        _this.state = {\n            passwordVisible: _this.props.showPassword || false\n        };\n\n        _this.toggleVisibility = _this.toggleVisibility.bind(_this);\n        _this.getChildren = _this.getChildren.bind(_this);\n        return _this;\n    }\n\n    (0, _createClass3.default)(PasswordInput, [{\n        key: 'toggleVisibility',\n        value: function toggleVisibility() {\n            this.setState({\n                passwordVisible: !this.state.passwordVisible\n            });\n        }\n    }, {\n        key: 'getChildren',\n        value: function getChildren() {\n            var _props = this.props,\n                hideButtonText = _props.hideButtonText,\n                buttonTextHide = _props.buttonTextHide,\n                buttonTextShow = _props.buttonTextShow;\n            var passwordVisible = this.state.passwordVisible;\n\n            // if hideButtonText is true, do not show buttonText. Otherwise toggle text with passwordVisible.\n\n            if (hideButtonText) {\n                return null;\n            } else {\n                return passwordVisible ? buttonTextHide : buttonTextShow;\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props2 = this.props,\n                className = _props2.className,\n                buttonClassName = _props2.buttonClassName,\n                buttonIconName = _props2.buttonIconName,\n                buttonIconSize = _props2.buttonIconSize,\n                buttonTextHide = _props2.buttonTextHide,\n                buttonTextShow = _props2.buttonTextShow,\n                hideButtonText = _props2.hideButtonText,\n                analyticsName = _props2.analyticsName,\n                inputProps = (0, _objectWithoutProperties3.default)(_props2, ['className', 'buttonClassName', 'buttonIconName', 'buttonIconSize', 'buttonTextHide', 'buttonTextShow', 'hideButtonText', 'analyticsName']);\n            var passwordVisible = this.state.passwordVisible;\n\n\n            var classes = (0, _classnames2.default)('pw-password-input', className);\n\n            var toggleClasses = (0, _classnames2.default)('pw-password-input__toggle', {\n                'pw--inactive': !passwordVisible,\n                'pw--is-text': !hideButtonText\n            }, buttonClassName);\n\n            return _react2.default.createElement(\n                'div',\n                { className: classes },\n                _react2.default.createElement('input', (0, _extends3.default)({}, inputProps, {\n                    type: passwordVisible ? 'text' : 'password',\n                    'data-analytics-name': analyticsName\n                })),\n                _react2.default.createElement(_button2.default, {\n                    className: toggleClasses,\n                    icon: buttonIconName,\n                    iconSize: buttonIconSize,\n                    title: passwordVisible ? buttonTextHide : buttonTextShow,\n                    children: this.getChildren(),\n                    onClick: this.toggleVisibility,\n                    'data-analytics-name': _dataObjects.UI_NAME.togglePasswordText\n                })\n            );\n        }\n    }]);\n    return PasswordInput;\n}(_react2.default.Component); /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nPasswordInput.defaultProps = {\n    buttonClassName: 'pw--blank',\n    buttonTextShow: 'Show Password',\n    buttonTextHide: 'Hide Password',\n    buttonIconSize: 'large'\n};\n\nPasswordInput.propTypes = {\n    /**\n     * Adds values to the `analytics-name` attribute of the input\n     */\n    analyticsName: _propTypes2.default.string,\n\n    /**\n     * Adds values to the `class` attribute of the toggle button\n     */\n    buttonClassName: _propTypes2.default.string,\n\n    /**\n     * Identifier for the desired icon within the toggle button\n     */\n    buttonIconName: _propTypes2.default.string,\n\n    /**\n     * The size of the icon within the toggle button\n     */\n    buttonIconSize: _propTypes2.default.string,\n\n    /**\n     * The text of the toggle button when the password is visible.\n     * This text is also used for accessibility.\n     */\n    buttonTextHide: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),\n\n    /**\n     * The text of the toggle button when the password is masked\n     * This text is also used for accessibility.\n     */\n    buttonTextShow: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),\n\n    /**\n     * Adds values to the `class` attribute of the root element\n     */\n    className: _propTypes2.default.string,\n\n    /**\n     * Determines if button has text or not\n     */\n    hideButtonText: _propTypes2.default.bool,\n\n    /**\n     * Determines if password is shown\n     */\n    showPassword: _propTypes2.default.bool\n};\n\nexports.default = PasswordInput;","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport {createSelector} from 'reselect'\nimport {createGetSelector} from 'reselect-immutable-helpers'\nimport Immutable from 'immutable'\n\nimport {getUi} from '../../store/selectors'\n\nimport {getUser} from 'progressive-web-sdk/dist/store/user/selectors'\n\n\nexport const getAccountInfo = createSelector(\n    getUi,\n    ({accountInfo}) => accountInfo\n)\n\nexport const getAccountInfoPageMeta = createGetSelector(\n    getAccountInfo,\n    'pageMeta',\n    Immutable.Map()\n)\n\nexport const getAccountInfoInitialValues = createSelector(getUser, (user) => {\n    return user.get('names') ? {\n        names: user.get('names'),\n        email: user.get('email')\n    } : null\n})\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport * as ReduxForm from 'redux-form'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport template from '../../template'\nimport PageMeta from '../../components/page-meta'\n\nimport {getAccountURL} from '../app/selectors'\n\nimport Breadcrumbs from 'progressive-web-sdk/dist/components/breadcrumbs'\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\nimport PasswordInput from 'progressive-web-sdk/dist/components/password-input'\nimport Button from 'progressive-web-sdk/dist/components/button'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nimport {initialize, submitAccountInfoForm} from './actions'\nimport {\n    getAccountInfoPageMeta,\n    getAccountInfoInitialValues\n} from './selectors'\n\nconst AccountInfoForm = ({\n    handleSubmit,\n    onSubmit,\n    dashboardURL,\n    pageMeta\n}) => {\n    return (\n        <div className=\"t-account-info\">\n            <PageMeta {...pageMeta} />\n\n            <div className=\"t-account-info__headings u-padding-top-lg u-padding-bottom-lg u-padding-start-md u-padding-end-md\">\n                <div className=\"t-account-info__breadcrumb\">\n                    <Breadcrumbs items={[{text: 'Back to Dashboard', href: dashboardURL}]} />\n                </div>\n                <div className=\"u-margin-top-md\">\n                    <h1 className=\"t-account-info__title u-text-uppercase u-width-1of2\">Edit Account</h1>\n                </div>\n            </div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"t-account-info__sub-heading\">\n                    <h2 className=\"u-h5 u-text-family\">Change name / email</h2>\n                </div>\n                <div className=\"t-account-info__content u-padding-md\">\n                    <FieldRow>\n                        <ReduxForm.Field\n                            component={Field}\n                            label=\"First & Last Name\"\n                            name=\"names\"\n                        >\n                            <input\n                                className=\"t-account-info-input\"\n                                type=\"text\"\n                                data-analytics-name={UI_NAME.customerName}\n                            />\n                        </ReduxForm.Field>\n                    </FieldRow>\n                    <FieldRow>\n                        <ReduxForm.Field\n                            component={Field}\n                            label=\"Email\"\n                            name=\"email\"\n                        >\n                            <input\n                                className=\"t-account-info-input\"\n                                type=\"text\"\n                                data-analytics-name={UI_NAME.email}\n                            />\n                        </ReduxForm.Field>\n                    </FieldRow>\n                </div>\n                <div className=\"t-account-info__sub-heading\">\n                    <h2 className=\"u-h5 u-text-family\">Change password (optional)</h2>\n                </div>\n                <div className=\"t-account-info__content u-padding-md\">\n                    <FieldRow>\n                        <ReduxForm.Field\n                            component={Field}\n                            label=\"Current Password\"\n                            name=\"currentPassword\"\n                        >\n                            <PasswordInput isText buttonTextHide=\"hide\" buttonTextShow=\"show\" analyticsName={UI_NAME.currentPassword} />\n                        </ReduxForm.Field>\n                    </FieldRow>\n                    <FieldRow>\n                        <ReduxForm.Field\n                            component={Field}\n                            label=\"New Password\"\n                            name=\"newPassword\"\n                        >\n                            <PasswordInput isText buttonTextHide=\"hide\" buttonTextShow=\"show\" analyticsName={UI_NAME.password} />\n                        </ReduxForm.Field>\n                    </FieldRow>\n                    <FieldRow>\n                        <Button\n                            type=\"submit\"\n                            className=\"pw--primary u-width-full\"\n                        >\n                        Save\n                        </Button>\n                    </FieldRow>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nAccountInfoForm.propTypes = {\n    dashboardURL: PropTypes.string,\n    handleSubmit: PropTypes.func,\n    pageMeta: PropTypes.object,\n    onSubmit: PropTypes.func,\n}\n\nconst mapStateToProps = createPropsSelector({\n    dashboardURL: getAccountURL,\n    initialValues: getAccountInfoInitialValues,\n    pageMeta: getAccountInfoPageMeta\n})\n\nconst mapDispatchToProps = {\n    onSubmit: submitAccountInfoForm\n}\n\nconst AccountInfo = ReduxForm.reduxForm({\n    form: 'accountInfo'\n})(AccountInfoForm)\n\nAccountInfo.initAction = initialize\n\nexport default template(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AccountInfo))\n"],"sourceRoot":""}