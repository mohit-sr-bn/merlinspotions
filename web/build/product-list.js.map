{"version":3,"sources":["webpack:///./node_modules/progressive-web-sdk/dist/components/field/index.js","webpack:///./app/containers/product-list/selectors.js","webpack:///./node_modules/progressive-web-sdk/dist/components/pagination/index.js","webpack:///./app/components/microdata/index.jsx","webpack:///./app/components/product-filter/index.jsx","webpack:///./app/containers/product-list/partials/product-list-header.jsx","webpack:///./app/containers/product-list/partials/search-result-header.jsx","webpack:///./app/components/product-tile/index.jsx","webpack:///./app/containers/product-list/partials/product-list-contents.jsx","webpack:///./app/containers/product-list/container.jsx"],"names":["Object","defineProperty","exports","value","_extends3","_interopRequireDefault","__webpack_require__","_getPrototypeOf2","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_react2","_propTypes2","_classnames2","obj","__esModule","default","getUniqueId","i","Field","_React$Component","props","this","_this","__proto__","call","idForLabel","inputId","isCheckRadio","shouldStackLabelInput","bind","shouldPlaceLabelAtEnd","buildEventHandler","key","labelPosition","eventHandlerName","_this2","customHandler","customEventHandlers","input","e","_this3","_props","label","hint","error","caption","className","children","shouldShowErrorsInstantly","childDisabled","childChecked","onlyChild","Children","count","newChildren","map","child","idx","childProps","type","onBlur","onFocus","onChange","onDrop","onDragStart","aria-invalid","aria-required","required","disabled","checked","id","isRequired","cloneElement","metaProps","meta","shouldShowReduxError","touched","active","dirty","reduxFormError","fieldError","classes","pw--is-check-radio","pw--error","pw--required","pw--disabled","pw--checked","innerClasses","pw--stack","labelClasses","pw--end","inputClasses","createElement","htmlFor","Component","propTypes","node","string","shape","func","object","oneOf","bool","d","__webpack_exports__","getUIState","getCategory","getCategoryPath","getProductSearch","immutable__WEBPACK_IMPORTED_MODULE_0__","immutable__WEBPACK_IMPORTED_MODULE_0___default","n","reselect__WEBPACK_IMPORTED_MODULE_1__","_store_selectors__WEBPACK_IMPORTED_MODULE_2__","json_stable_stringify__WEBPACK_IMPORTED_MODULE_3__","json_stable_stringify__WEBPACK_IMPORTED_MODULE_3___default","createSelector","getUi","_ref","productList","Immutable","Map","getUIStateKey","uiState","stringify","toJS","getCurrentCategoryId","getIn","getCategories","categoryId","categories","get","currentCategory","path","List","category","unshift","title","parentId","href","url","pageMeta","getProductSearches","uiStateKey","productSearches","_button2","_icon2","_utils","_dataObjects","Pagination","goToStart","goBack","goForward","goToEnd","goToSelected","pageClasses","pw--active","currentPage","onClick","data-analytics-name","UI_NAME","pagination","data-analytics-content","page","getPageButtonMessage","lower","upper","list","push","renderPageButton","pageCount","Array","fill","undefined","val","index","toString","getCurrentPageMessage","getSelectOptionMessage","parseInt","target","pagesToShow","firstButton","prevButton","nextButton","lastButton","isSelect","showPageButtons","showCurrentPageMessage","selectIcon","_props2","pagesToShowAtEnd","pagesToShowAtStart","pw--select-pagination","visiblePages","Math","min","centerChunkLength","pageBeforeEnd","centerChunkStart","centerChunkEnd","console","atStart","atEnd","Ellipsis","role","text","previous","renderPageButtons","buildSelectOptions","name","next","defaultProps","current","total","pageNumber","noop","number","MicrodataOffer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","available","classNames","availability","a","itemScope","itemProp","itemType","content","PropTypes","ProductFilter","isRunningInAstro","productSearch","_ref2$filters","filters","react__WEBPACK_IMPORTED_MODULE_2___default","progressive_web_sdk_dist_components_accordion__WEBPACK_IMPORTED_MODULE_12__","initialOpenItems","_ref3","ruleset","kinds","header","filter","_ref4","_ref5","query","searchKey","searchState","start","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","progressive_web_sdk_dist_components_button__WEBPACK_IMPORTED_MODULE_13___default","innerClassName","window","location","anchor","document","historyEntry","pathname","queryString","parse","search","browserHistory","replace","goToURL","urlMapper","getSearchUrl","showFilters","mapStateToProps","createPropsSelector","selectors","connect","ProductListHeader","_ref$categoryPath","categoryPath","react_default","page_meta","length","breadcrumbs_default","items","_ref2","includeMicroData","skeleton_text_default","lines","width","image_default","alt","height","src","getAssetUrl","trim","toLowerCase","array","SearchResultHeader","titleClassName","ProductImage","ratio_default","shouldLazyLoad","lazyLoadThreshold","ProductPrice","price","microdata","intl","currency","OutOfStockPrice","ProductTile","thumbnail","productId","productImage","product_tile_ProductImage","titleElement","skeleton_block_default","priceElement","product_tile_ProductPrice","product_tile_OutOfStockPrice","link_default","product_item","image","customWidth","ResultList","products","setProductId","product","product_tile","extends_default","productName","description","link","NoResultsList","routeName","Skeleton","product_list_contents_ResultList","ITEMS_PER_PAGE","PLACEHOLDER_PRODUCT","ProductListContents","openModal","viewportSize","_ref4$products","_ref4$sortingOptions","sortingOptions","_ref4$filters","_ref4$selectedFilters","selectedFilters","_ref4$start","_ref4$total","_uiState$count","contentsLoaded","showListActionBar","filteredSelectedFilters","includes","hasSelectedFilters","hasFilters","ceil","floor","isLargeAndWider","VIEWPORT_SIZE_NAMES","LARGE","XLARGE","paginationProps","pageIndex","product_filter","button_default","field_default","SMALL","sortBy","choice","sort","filterToRemove","searchParams","objectWithoutProperties_default","remainingFilters","finalFilter","clearFiltersUrl","slice","indexOf","icon","iconSize","clearFilters","react","pagination_default","product_list_contents_NoResultsList","product_list_contents_Skeleton","getviewportSize","mapDispatchToProps","receiveCurrentProductId","PRODUCT_LIST_FILTER_MODAL","ProductList","route","search_result_header","product_list_header","product_list_contents","initAction","initialize","template"],"mappings":"2FAEAA,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAGA,IAEAC,EAAAC,EAFgBC,EAAQ,IAMxBC,EAAAF,EAFsBC,EAAQ,KAM9BE,EAAAH,EAFuBC,EAAQ,KAM/BG,EAAAJ,EAFoBC,EAAQ,KAM5BI,EAAAL,EAFkCC,EAAQ,KAM1CK,EAAAN,EAFiBC,EAAQ,KAMzBM,EAAAP,EAFaC,EAAQ,IAMrBO,EAAAR,EAFiBC,EAAQ,IAMzBQ,EAAAT,EAFkBC,EAAQ,KAI1B,SAAAD,EAAAU,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAE7E,IAAAG,EAAA,WACA,IAAAC,EAAA,EAEA,kBACA,eAAAA,KAJA,GA2BAC,EAAA,SAAAC,GAGA,SAAAD,EAAAE,IACA,EAAAd,EAAAS,SAAAM,KAAAH,GAEA,IAAAI,GAAA,EAAAd,EAAAO,SAAAM,MAAAH,EAAAK,YAAA,EAAAlB,EAAAU,SAAAG,IAAAM,KAAAH,KAAAD,IAYA,OAVAA,EAAAK,WACAH,EAAAI,QAAAN,EAAAK,WAEAH,EAAAI,QAAAV,IAGAM,EAAAK,cAAA,EACAL,EAAAM,sBAAAN,EAAAM,sBAAAC,KAAAP,GACAA,EAAAQ,sBAAAR,EAAAQ,sBAAAD,KAAAP,GACAA,EAAAS,kBAAAT,EAAAS,kBAAAF,KAAAP,GACAA,EAiLA,OAlMA,EAAAb,EAAAM,SAAAG,EAAAC,IAoBA,EAAAZ,EAAAQ,SAAAG,IACAc,IAAA,wBACA/B,MAAA,WACA,OAAAoB,KAAAD,MAAAa,cAGA,QAAAZ,KAAAD,MAAAa,eAFAZ,KAAAM,gBAMAK,IAAA,wBACA/B,MAAA,WACA,OAAAoB,KAAAD,MAAAa,cAGA,QAAAZ,KAAAD,MAAAa,cAFAZ,KAAAM,gBAMAK,IAAA,oBACA/B,MAAA,SAAAiC,GACA,IAAAC,EAAAd,KAEAe,EAAAf,KAAAD,MAAAiB,oBAAAH,GAGA,OAFAb,KAAAD,MAAAkB,MAGA,mBAAAF,EAAA,SAAAG,GACAJ,EAAAf,MAAAkB,MAAAJ,GAAAK,GACAH,EAAAG,IACiBlB,KAAAD,MAAAkB,MAAAJ,GAEjBE,KAGAJ,IAAA,SACA/B,MAAA,WACA,IAAAuC,EAAAnB,KAEAoB,EAAApB,KAAAD,MACAsB,EAAAD,EAAAC,MACAC,EAAAF,EAAAE,KACAC,EAAAH,EAAAG,MACAC,EAAAJ,EAAAI,QACAC,EAAAL,EAAAK,UACAC,EAAAN,EAAAM,SACAC,EAAAP,EAAAO,0BACAX,EAAAI,EAAAJ,oBAGAY,GAAA,EACAC,GAAA,EACAC,EAAA,IAAAzC,EAAAK,QAAAqC,SAAAC,MAAAN,GAEAO,EAAA5C,EAAAK,QAAAqC,SAAAG,IAAAR,EAAA,SAAAS,EAAAC,GACA,IAAAC,KAmDA,OAjDA,UAAAF,EAAAG,MAAA,WAAAH,EAAAG,MAAA,aAAAH,EAAAG,MAAA,mBAAAH,EAAAG,QAIAD,GAAA,EAAAxD,EAAAa,YAA0DyB,EAAApB,MAAAkB,QAG1DD,IAKAqB,EAAAE,OAAApB,EAAAT,kBAAA,SAAA2B,GACAA,EAAAG,QAAArB,EAAAT,kBAAA,UAAA2B,GACAA,EAAAI,SAAAtB,EAAAT,kBAAA,WAAA2B,GACAA,EAAAK,OAAAvB,EAAAT,kBAAA,SAAA2B,GACAA,EAAAM,YAAAxB,EAAAT,kBAAA,cAAA2B,IAGAA,GAAA,EAAAxD,EAAAa,YAAsD2C,GACtDO,iBAAArB,EACAsB,gBAAAV,EAAApC,MAAA+C,UACiBX,EAAApC,OAEjBoC,EAAApC,MAAAgD,WACAnB,GAAA,GAGAS,EAAAW,UACAnB,GAAA,GAGAN,IACAc,EAAAZ,WAAA,EAAAlC,EAAAG,SAAAyC,EAAApC,MAAA0B,UAAA,kBAIA,IAAAW,IACAC,EAAAY,GAAA9B,EAAAd,UAGAyB,GAAA,UAAAK,EAAApC,MAAAuC,MAAA,aAAAH,EAAApC,MAAAuC,OACAnB,EAAAb,cAAA,GAGA6B,EAAApC,MAAA+C,WACA3B,EAAA+B,YAAA,GAGA7D,EAAAK,QAAAyD,aAAAhB,EAAAE,KAGAe,EAAApD,KAAAD,MAAAsD,KACAC,EAAAF,MAAAG,UAAAH,EAAAI,QAAAJ,EAAAK,OAAA9B,GACA+B,EAAAN,GAAAE,GAAAF,EAAA7B,MACAoC,EAAApC,GAAAmC,EAEAE,GAAA,EAAArE,EAAAG,SAAA,YACAmE,qBAAA7D,KAAAM,aACAwD,YAAAH,EACAI,eAAA/D,KAAAkD,WACAc,eAAApC,EACAqC,cAAApC,GACaJ,GAEbyC,GAAA,EAAA3E,EAAAG,SAAA,mBACAyE,YAAAnE,KAAAO,0BAGA6D,GAAA,EAAA7E,EAAAG,SAAA,wBACA2E,UAAArE,KAAAS,0BAGA6D,GAAA,EAAA/E,EAAAG,SAAA,mBAEA,OAAAL,EAAAK,QAAA6E,cACA,OACiB9C,UAAAmC,GACjBvE,EAAAK,QAAA6E,cACA,OACqB9C,UAAAyC,GACrB7C,GAAAhC,EAAAK,QAAA6E,cACA,OACyB9C,UAAA2C,GACzB/E,EAAAK,QAAA6E,cACA,SAEA9C,UAAA,kBACA+C,QAAAxE,KAAAK,SAEAgB,GAEAC,GAAAjC,EAAAK,QAAA6E,cACA,OAC6B9C,UAAA,kBAC7BH,IAGAjC,EAAAK,QAAA6E,cACA,OACyB9C,UAAA6C,GACzBrC,IAGA0B,GAAAtE,EAAAK,QAAA6E,cACA,OACqB9C,UAAA,mBACrBkC,GAEAnC,GAAAnC,EAAAK,QAAA6E,cACA,OACqB9C,UAAA,qBACrBD,QAKA3B,EAnMA,CAoMCR,EAAAK,QAAA+E,WAED5E,EAAA6E,WAIAhD,SAAApC,EAAAI,QAAAiF,KAAAzB,WAKA1B,QAAAlC,EAAAI,QAAAiF,KAKAlD,UAAAnC,EAAAI,QAAAkF,OAOA5D,oBAAA1B,EAAAI,QAAAmF,OACAtC,OAAAjD,EAAAI,QAAAoF,KACArC,SAAAnD,EAAAI,QAAAoF,KACApC,OAAApD,EAAAI,QAAAoF,KACAnC,YAAArD,EAAAI,QAAAoF,KACAtC,QAAAlD,EAAAI,QAAAoF,OAOAvD,MAAAjC,EAAAI,QAAAiF,KAKArD,KAAAhC,EAAAI,QAAAiF,KAMAvE,WAAAd,EAAAI,QAAAkF,OAMA3D,MAAA3B,EAAAI,QAAAqF,OAOA1D,MAAA/B,EAAAI,QAAAiF,KAOA/D,cAAAtB,EAAAI,QAAAsF,OAAA,sBAMA3B,KAAA/D,EAAAI,QAAAqF,OAOApD,0BAAArC,EAAAI,QAAAuF,MAGAtG,EAAAe,QAAAG,oCC7VAd,EAAAmG,EAAAC,EAAA,sBAAAC,IAAArG,EAAAmG,EAAAC,EAAA,sBAAAE,IAAAtG,EAAAmG,EAAAC,EAAA,sBAAAG,IAAAvG,EAAAmG,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAAzG,EAAA,GAAA0G,EAAA1G,EAAA2G,EAAAF,GAAAG,EAAA5G,EAAA,IAAA6G,EAAA7G,EAAA,IAAA8G,EAAA9G,EAAA,KAAA+G,EAAA/G,EAAA2G,EAAAG,GAWaT,EAAaW,yBACtBC,IACA,SAAAC,GAAA,OAAAA,EAAEC,aAAgCC,IAAUC,QAGnCC,EAAgBN,yBACzBX,EACA,SAACkB,GAAD,OAAaC,IAAUD,EAAQE,UAKtBC,EAAuBV,yBAChCX,EACA,SAACkB,GAAD,OAAaA,EAAQI,OAAO,UAAW,QAAS,MAGvCrB,EAAcU,yBACvBU,EACAE,IACA,SAACC,EAAYC,GAAb,OAA4BA,EAAWC,IAAIF,KAGlCtB,EAAkBS,yBAC3BV,EACAsB,IACA,SAACI,EAAiBF,GACd,IAAIG,EAAOb,IAAUc,OAErB,IAAKF,EAAmB,OAAOC,EAI/B,IAFA,IAAIE,EAAWH,EAERG,GACHF,EAAOA,EAAKG,QAAQD,GACpBA,EAAWL,EAAWC,IAAII,EAASJ,IAAI,aAe3C,OATAE,EAAOA,EAAKG,SACRlE,GAAI,OACJmE,MAAO,OACPC,SAAU,KACVC,KAAM,IACNC,IAAK,IACLC,gBAOCjC,EAAmBQ,yBAC5BM,EACAoB,IACA,SAACC,EAAYC,GAAb,OAAiCA,EAAgBb,IAAIY,uCClEzDjJ,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAGA,IAEAC,EAAAC,EAFgBC,EAAQ,IAMxBC,EAAAF,EAFsBC,EAAQ,KAM9BE,EAAAH,EAFuBC,EAAQ,KAM/BG,EAAAJ,EAFoBC,EAAQ,KAM5BI,EAAAL,EAFkCC,EAAQ,KAM1CK,EAAAN,EAFiBC,EAAQ,KAMzBM,EAAAP,EAFaC,EAAQ,IAMrBO,EAAAR,EAFiBC,EAAQ,IAMzBQ,EAAAT,EAFkBC,EAAQ,KAM1B6I,EAAA9I,EAFcC,EAAQ,KAMtB8I,EAAA/I,EAFYC,EAAQ,KAIpB+I,EAAa/I,EAAQ,IAErBgJ,EAAmBhJ,EAAQ,GAE3B,SAAAD,EAAAU,GAAsC,OAAAA,KAAAC,WAAAD,GAAuCE,QAAAF,GAS7E,IAAAwI,EAAA,SAAAlI,GAGA,SAAAkI,EAAAjI,IACA,EAAAd,EAAAS,SAAAM,KAAAgI,GAEA,IAAA/H,GAAA,EAAAd,EAAAO,SAAAM,MAAAgI,EAAA9H,YAAA,EAAAlB,EAAAU,SAAAsI,IAAA7H,KAAAH,KAAAD,IAOA,OALAE,EAAAgI,UAAAhI,EAAAgI,UAAAzH,KAAAP,GACAA,EAAAiI,OAAAjI,EAAAiI,OAAA1H,KAAAP,GACAA,EAAAkI,UAAAlI,EAAAkI,UAAA3H,KAAAP,GACAA,EAAAmI,QAAAnI,EAAAmI,QAAA5H,KAAAP,GACAA,EAAAoI,aAAApI,EAAAoI,aAAA7H,KAAAP,GACAA,EA4OA,OAxPA,EAAAb,EAAAM,SAAAsI,EAAAlI,IAeA,EAAAZ,EAAAQ,SAAAsI,IACArH,IAAA,mBACA/B,MAAA,SAAAgB,GACA,IAAA0I,GAAA,EAAA/I,EAAAG,SAAA,uBACA6I,aAAA3I,IAAAI,KAAAD,MAAAyI,cAGA,OAAAnJ,EAAAK,QAAA6E,cACAqD,EAAAlI,SAEAiB,IAAAf,EACA6B,UAAA6G,EACAG,QAAAzI,KAAAD,MAAA0C,SAAAjC,KAAA,KAAAZ,GACA8I,sBAAAX,EAAAY,QAAAC,WACAC,yBAAAd,EAAAY,QAAAG,KAAA,IAAAlJ,GAEAI,KAAAD,MAAAgJ,qBAAAnJ,OAIAe,IAAA,oBACA/B,MAAA,SAAAoK,EAAAC,GAEA,IADA,IAAAC,KACAtJ,EAAAoJ,EAA+BpJ,GAAAqJ,EAAYrJ,IAC3CsJ,EAAAC,KAAAnJ,KAAAoJ,iBAAAxJ,IAEA,OAAAsJ,KAGAvI,IAAA,qBACA/B,MAAA,SAAAyK,GACA,IAAAvI,EAAAd,KAEA,WAAAsJ,MAAAD,GAAAE,UAAAC,GAAAtH,IAAA,SAAAuH,EAAAC,GACA,IACA9K,KADA8K,GACAC,WACA,OAAAtK,EAAAK,QAAA6E,cACA,UACqB3F,QAAA+B,IAAA+I,GACrB5I,EAAAf,MAAAyI,cAAAkB,EAAA5I,EAAAf,MAAA6J,sBAAAhL,EAAAyK,GAAAvI,EAAAf,MAAA8J,uBAAAjL,EAAAyK,SAKA1I,IAAA,YACA/B,MAAA,WACAoB,KAAAD,MAAA0C,SAAA,MAGA9B,IAAA,SACA/B,MAAA,WACAoB,KAAAD,MAAA0C,SAAAzC,KAAAD,MAAAyI,YAAA,MAGA7H,IAAA,YACA/B,MAAA,WACAoB,KAAAD,MAAA0C,SAAAzC,KAAAD,MAAAyI,YAAA,MAGA7H,IAAA,UACA/B,MAAA,WACAoB,KAAAD,MAAA0C,SAAAzC,KAAAD,MAAAsJ,cAGA1I,IAAA,eACA/B,MAAA,SAAAsC,GACAlB,KAAAD,MAAA0C,SAAAqH,SAAA5I,EAAA6I,OAAAnL,WAGA+B,IAAA,SACA/B,MAAA,WACA,IAAAwC,EAAApB,KAAAD,MACA0B,EAAAL,EAAAK,UACA4H,EAAAjI,EAAAiI,UACAW,EAAA5I,EAAA4I,YACAxB,EAAApH,EAAAoH,YACAyB,EAAA7I,EAAA6I,YACAC,EAAA9I,EAAA8I,WACAC,EAAA/I,EAAA+I,WACAC,EAAAhJ,EAAAgJ,WACAC,EAAAjJ,EAAAiJ,SACAC,EAAAlJ,EAAAkJ,gBACAC,EAAAnJ,EAAAmJ,uBACAX,EAAAxI,EAAAwI,sBACAY,EAAApJ,EAAAoJ,WACAC,EAAAzK,KAAAD,MACA2K,EAAAD,EAAAC,iBACAC,EAAAF,EAAAE,mBAGA/G,GAAA,EAAArE,EAAAG,SAAA,iBACAkL,wBAAAP,GACa5I,GAEboJ,EAAAC,KAAAC,IAAAf,GAAAX,KACA2B,EAAAH,EAAAF,EAAAD,EAIAG,IAAAF,EAAAD,IACAC,EAAA,EACAD,EAAA,EACAM,EAAAH,GAIA,IAAAI,EAAA5B,EAAAqB,EAGAQ,EAAA,EAAAP,EACAQ,EAAAL,KAAAC,IAAAG,EAAAF,EAAA,EAAAC,GAKAzC,GAAA2C,GAAAD,IAAAC,EAEAD,GADAC,EAAAL,KAAAC,IAAAvC,EAAA,EAAAyC,IACAD,EAAA,EACaxC,EAAA2C,GAAAD,IAAAC,IAGbA,EADAD,EAAAJ,KAAAC,IAAAvC,EAAAyC,KAIA5B,EAAAW,GAAAgB,EAAA,KACAA,EAAA,GACAI,QAAA7J,MAAA,4HAEAoJ,EAAA,EACAD,EAAA,EACAQ,EAAA,EACAC,EAAA9B,EACA4B,EAAA5B,GAGA,IAAAgC,EAAA,IAAA7C,EACA8C,EAAA9C,IAAAa,EAEAkC,EAAA,WACA,OAAAlM,EAAAK,QAAA6E,cACA,OACqB9C,UAAA,2BACrB,QAIA,OAAApC,EAAAK,QAAA6E,cACA,OACiBiH,KAAA,aAAA/J,UAAAmC,GACjBqG,GAAA5K,EAAAK,QAAA6E,cACAqD,EAAAlI,SACA,EAAAb,EAAAa,UACA+B,UAAA,wBACAgH,QAAAzI,KAAAiI,UACAlF,SAAAsI,EACA3C,sBAAAX,EAAAY,QAAAC,WACAC,yBAAAd,EAAAY,QAAAG,KAAA,MACqBmB,EAAAlK,OACrBkK,EAAAwB,MAEAvB,GAAA7K,EAAAK,QAAA6E,cACAqD,EAAAlI,SACA,EAAAb,EAAAa,UACA+B,UAAA,wBACAgH,QAAAzI,KAAAkI,OACAnF,SAAAsI,EACA3C,sBAAAX,EAAAY,QAAAC,WACAC,yBAAAd,EAAAY,QAAA+C,UACqBxB,EAAAnK,OACrBmK,EAAAuB,MAEApM,EAAAK,QAAA6E,cACA,OACqB9C,UAAA,0BACrB6I,GAAAjL,EAAAK,QAAA6E,cACA,OACyB9C,UAAA,wBACzBzB,KAAA2L,kBAAA,EAAAhB,MACAA,GAAAO,EAAAP,EAAA,IAAAtL,EAAAK,QAAA6E,cAAAgH,GAAmI5K,IAAA,kBACnIX,KAAA2L,kBAAAT,EAAAC,MACAT,GAAAS,EAAAF,IAAA5L,EAAAK,QAAA6E,cAAAgH,GAAsH5K,IAAA,mBACtHX,KAAA2L,kBAAAV,EAAA,EAAA5B,IAEAgB,GAAAhL,EAAAK,QAAA6E,cACA,OACyB9C,UAAA,iCACzBpC,EAAAK,QAAA6E,cACA,UAEA9C,UAAA,wBACAc,OAAAvC,KAAAqI,aACA5F,SAAAzC,KAAAqI,aACAzJ,MAAA4J,GAEAxI,KAAA4L,mBAAAvC,IAEAhK,EAAAK,QAAA6E,cACA,OAC6B9C,UAAA,8BAC7BpC,EAAAK,QAAA6E,cAAAsD,EAAAnI,SAA2EmM,KAAArB,GAAA,mBAG3ED,GAAAlL,EAAAK,QAAA6E,cACA,QACyB9C,UAAA,6BACzBmI,EAAApB,EAAAa,KAGAc,GAAA9K,EAAAK,QAAA6E,cACAqD,EAAAlI,SACA,EAAAb,EAAAa,UACA+B,UAAA,wBACAgH,QAAAzI,KAAAmI,UACApF,SAAAuI,EACA5C,sBAAAX,EAAAY,QAAAC,WACAC,yBAAAd,EAAAY,QAAAmD,MACqB3B,EAAApK,OACrBoK,EAAAsB,MAEArB,GAAA/K,EAAAK,QAAA6E,cACAqD,EAAAlI,SACA,EAAAb,EAAAa,UACA+B,UAAA,wBACAgH,QAAAzI,KAAAoI,QACArF,SAAAuI,EACA5C,sBAAAX,EAAAY,QAAAC,WACAC,yBAAAd,EAAAY,QAAAG,KAAA,IAAAO,GACqBe,EAAArK,OACrBqK,EAAAqB,WAKAzD,EAzPA,CA0PC3I,EAAAK,QAAA+E,WAyBDuD,EAAA+D,cACAnC,sBAtBA,SAAAoC,EAAAC,GACA,cAAAD,EAAA,OAAAC,GAsBAlD,qBAnBA,SAAAmD,GACA,OAAA7M,EAAAK,QAAA6E,cACA,OACA,KACAlF,EAAAK,QAAA6E,cACA,QACa9C,UAAA,+BACb,SAEAyK,IAWArC,uBAPA,SAAAmC,EAAAC,GACA,cAAAD,EAAA,OAAAC,GAOA9B,YACAsB,KAAA,QAEAvB,YACAuB,KAAA,QAEAd,mBAAA,EACAD,iBAAA,EACAJ,iBAAA,EACAC,wBAAA,EACA9H,SAAAqF,EAAAqE,MAGAnE,EAAAtD,WAIA8D,YAAAlJ,EAAAI,QAAA0M,OAAAlJ,WAKAmG,UAAA/J,EAAAI,QAAA0M,OAAAlJ,WAKAzB,UAAAnC,EAAAI,QAAAkF,OAKAqF,YAAA3K,EAAAI,QAAAmF,OACA4G,KAAAnM,EAAAI,QAAAkF,OACA7E,MAAAT,EAAAI,QAAAqF,SAOA6E,sBAAAtK,EAAAI,QAAAoF,KAMAiE,qBAAAzJ,EAAAI,QAAAoF,KAMA+E,uBAAAvK,EAAAI,QAAAoF,KAKAuF,SAAA/K,EAAAI,QAAAuF,KAKAmF,WAAA9K,EAAAI,QAAAmF,OACA4G,KAAAnM,EAAAI,QAAAkF,OACA7E,MAAAT,EAAAI,QAAAqF,SAMAoF,WAAA7K,EAAAI,QAAAmF,OACA4G,KAAAnM,EAAAI,QAAAkF,OACA7E,MAAAT,EAAAI,QAAAqF,SAOAiF,YAAA1K,EAAAI,QAAA0M,OAKA1B,iBAAApL,EAAAI,QAAA0M,OAKAzB,mBAAArL,EAAAI,QAAA0M,OAKAlC,WAAA5K,EAAAI,QAAAmF,OACA4G,KAAAnM,EAAAI,QAAAkF,OACA7E,MAAAT,EAAAI,QAAAqF,SAOAyF,WAAAlL,EAAAI,QAAAkF,OAKA2F,uBAAAjL,EAAAI,QAAAuF,KAKAqF,gBAAAhL,EAAAI,QAAAuF,KAMAxC,SAAAnD,EAAAI,QAAAoF,MAGAnG,EAAAe,QAAAsI,oCCjdAjJ,EAAAmG,EAAAC,EAAA,sBAAAkH,IAAA,IAAAC,EAAAvN,EAAA,GAAAwN,EAAAxN,EAAA2G,EAAA4G,GAAAE,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA2G,EAAA8G,GAAAE,EAAA3N,EAAA,IAAA4N,EAAA5N,EAAA2G,EAAAgH,GAQaL,EAAiB,SAAApG,GAAsC,IAApC2G,EAAoC3G,EAApC2G,UAAWlL,EAAyBuE,EAAzBvE,SAAUD,EAAewE,EAAfxE,UAC3CmC,EAAUiJ,IAAW,oBAAqBpL,GAE5CqL,SASJ,OARIF,EACAE,EAAe,YAGM,IAAdF,IACPE,EAAe,gBAIfP,EAAAQ,EAAAxI,cAAA,QACI9C,UAAWmC,EACXoJ,WAAA,EACAC,SAAS,SACTC,SAAS,2BAERxL,IACEoL,GACCP,EAAAQ,EAAAxI,cAAA,QAAM0I,SAAS,eAAeE,QAASL,MAMvDT,EAAe3H,WACXkI,UAAWQ,IAAUnI,KACrBvD,SAAU0L,IAAUzI,KACpBlD,UAAW2L,IAAUxI,+MCInByI,EAAgB,SAAApH,GAAgD,IAA9CqH,EAA8CrH,EAA9CqH,iBAAkBC,EAA4BtH,EAA5BsH,cAAejH,EAAaL,EAAbK,QAAakH,GAE3CD,OAAhBE,eAF2DjE,IAAAgE,OAIlE,OACIE,EAAAX,EAAAxI,cAACoJ,EAAA,WACGlM,UAAU,mBACVmM,kBAAmB,IAClBH,EAAQvL,IAAI,SAAA2L,GAAA,IAAExM,EAAFwM,EAAExM,MAAOyM,EAATD,EAASC,QAASC,EAAlBF,EAAkBE,MAAlB,OACTL,EAAAX,EAAAxI,cAACoJ,EAAA,eAAcK,OAAQ3M,EAAOV,IAAKmN,EAASrM,UAAU,eASlDiM,EAAAX,EAAAxI,cAAA,OAAK9C,UAAU,4BAA4B+J,KAAK,gBAC3CuC,EACIE,OAAO,SAAAC,GAAA,OAAAA,EAAElM,MAAoB,IAC7BE,IAAI,SAAAiM,GAAsC,IAApCnM,EAAoCmM,EAApCnM,MAAOX,EAA6B8M,EAA7B9M,MAAO+M,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,UAClBC,EAAcA,OACbhI,GACHiI,MAAO,EACPd,eACOnH,EAAQmH,QADfe,OAEKV,EAAUO,MAInB,OACIX,EAAAX,EAAAxI,cAACkK,EAAA1B,GACGpM,IAAKyN,EACL3M,UAAU,oCACViN,eAAe,kBACfzL,GAAImL,EACJ3F,QAAS,kBAzDjC,SAAClB,EAAK+F,GAClB,GAAI/F,IAAQoH,OAAOC,SAAStH,KAA5B,CAGA,IAAMuH,EAASC,SAASvK,cAAc,KACtCsK,EAAOvH,KAAOC,EAEd,IAAMwH,GACFC,SAAUH,EAAOG,SACjBZ,MAAOa,IAAYC,MAAML,EAAOM,SAGhC7B,EACA8B,iBAAeC,QAAQN,GAEvBK,iBAAejG,KAAK4F,IA0C2BO,CAAQC,IAAUC,aAAalB,GAAchB,IAC5D5E,sBAAqBC,UAAQ8G,aAE7B/B,EAAAX,EAAAxI,cAAA,QAAM9C,UAAU,iCAAiCJ,GARrD,IAQmEqM,EAAAX,EAAAxI,cAAA,QAAM9C,UAAU,sBAAhB,IAAuCO,EAAvC,cAYvGqL,EAAc3I,WACV4I,iBAAkBF,IAAUnI,KAC5BsI,cAAeH,IAAUrI,OACzBuB,QAAS8G,IAAUrI,QAGvB,IAAM2K,EAAkBC,+BACpBrC,qBACAC,cAAeqC,IACftJ,QAASsJ,MAGEC,sBAAQH,EAARG,CAAyBxC,+LCxFlCyC,EAAoB,SAAA7J,GAAA,IACtBiB,EADsBjB,EACtBiB,SADsB6I,EAAA9J,EAEtB+J,oBAFsBxG,IAAAuG,OAAA,OAItBE,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,4BACVyF,GACG+I,EAAAlD,EAAAxI,cAAC2L,EAAA,EAAahJ,EAASM,UAG3ByI,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,kEACVuO,EAAaG,OAAS,GACnBF,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,8BACXwO,EAAAlD,EAAAxI,cAAC6L,EAAArD,GACGsD,MAAOL,EAAa9N,IAAI,SAAAoO,GAAA,OAAqB7E,KAArB6E,EAAElJ,MAAgCE,KAAlCgJ,EAAShJ,QACjCiJ,kBAAA,KAIZN,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,mBACVyF,EACG+I,EAAAlD,EAAAxI,cAAA,MAAI9C,UAAU,oBAAoByF,EAASE,OAE3C6I,EAAAlD,EAAAxI,cAACiM,EAAAzD,GAAa0D,MAAO,EAAGnO,KAAK,KAAKoO,MAAM,YAKnDxJ,GACG+I,EAAAlD,EAAAxI,cAACoM,EAAA5D,GACGtL,UAAU,gDACVmP,IAAI,eACJC,OAAO,OACPH,MAAM,OACNI,IACIC,sBAAWA,yBAA0B7J,EAASE,MAAM4J,OAAO3B,QAAQ,OAAQ,KACtE4B,cADL,eAQpBnB,EAAkBpL,WACdwC,SAAUkG,IAAUrI,OACpBiL,aAAc5C,IAAU8D,OAG5B,IAAMxB,EAAkBC,+BACpBzI,SAAU0I,IACVI,aAAcJ,MAGHC,oBAAQH,EAARG,CAAyBC,GCvDlCO,IAEE5E,KAAM,OACNnE,KAAM,MAIR6J,EAAqB,SAAAlL,GAAA,IAAEsH,EAAFtH,EAAEsH,cAAF,OACvB0C,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,4BACXwO,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,kEACXwO,EAAAlD,EAAAxI,cAAC6L,EAAArD,GAAYsD,MAAOA,EAAOE,kBAAA,IAC3BN,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,mBACV8L,EACG0C,EAAAlD,EAAAxI,cAAA,MAAI9C,UAAU,oBACVwO,EAAAlD,EAAAxI,cAAA,4BACA0L,EAAAlD,EAAAxI,cAAA,QAAM9C,UAAU,uBAAhB,IAAwC8L,EAAca,MAAtD,MAGJ6B,EAAAlD,EAAAxI,cAACiM,EAAAzD,GAAa0D,MAAO,EAAGnO,KAAK,KAAKoO,MAAM,cAO5DS,EAAmBzM,WACf6I,cAAeH,IAAUrI,QAG7B,IAAM2K,EAAkBC,+BACpBpC,cAAeqC,MAGJC,oBAAQH,EAARG,CAAyBsB,iSC1BlCC,GAAiBvE,IACnB,uBACA,OACA,gBACA,uBACA,sBAGEwE,GAAe,SAAApL,GAAA,IAAE6K,EAAF7K,EAAE6K,IAAKF,EAAP3K,EAAO2K,IAAP,OACjBX,EAAAlD,EAAAxI,cAAC+M,GAAAvE,GAAM2D,MAAM,IAAIG,OAAO,MACpBZ,EAAAlD,EAAAxI,cAACoM,EAAA5D,GACGtL,UAAU,wBACVqP,IAAKA,EACLF,IAAKA,EACLF,MAAM,OACNG,OAAO,OACP5D,SAAS,QACTsE,gBAAgB,EAChBC,kBAAmB,QAK/BH,GAAa3M,WACTkM,IAAKxD,IAAUxI,OACfkM,IAAK1D,IAAUxI,QAGnB,IAAM6M,GAAe,SAAAnB,GAAa,IAAXoB,EAAWpB,EAAXoB,MACnB,OACIzB,EAAAlD,EAAAxI,cAACoN,GAAA,GAAelQ,UAAU,mCAAmCmL,WAAA,GACzDqD,EAAAlD,EAAAxI,cAACqN,GAAA,GAAehT,MAAO8S,MAKnCD,GAAa/M,WACTgN,MAAOtE,IAAUxI,OAAO1B,WACxB2O,SAAUzE,IAAUrI,QAGxB,IAAM+M,GAAkB,WACpB,OACI7B,EAAAlD,EAAAxI,cAACoN,GAAA,GAAelQ,UAAU,mCAAmCmL,WAAW,GAAxE,iBAMFmF,GAAc,SAAAlE,GAA+E,IAA7EpM,EAA6EoM,EAA7EpM,UAAWuQ,EAAkEnE,EAAlEmE,UAAW1K,EAAuDuG,EAAvDvG,KAAMoK,EAAiD7D,EAAjD6D,MAAOtK,EAA0CyG,EAA1CzG,MAAOqB,EAAmCoF,EAAnCpF,QAASwJ,EAA0BpE,EAA1BoE,UAAWrF,EAAeiB,EAAfjB,UAC1EsF,EAAgBjC,EAAAlD,EAAAxI,cAAC4N,GAAiBH,GAElCI,EAAehL,EACf6I,EAAAlD,EAAAxI,cAAA,MAAI9C,UAAW2P,GAAgBnE,SAAS,QAAQ7F,GAChD6I,EAAAlD,EAAAxI,cAAC8N,GAAAtF,GAAc8D,OAAO,SAEtByB,EAAgBZ,GAASA,EAAMvB,OAAS,GAAKF,EAAAlD,EAAAxI,cAACgO,IAAab,MAAOA,MAClE9E,GAAcqD,EAAAlD,EAAAxI,cAACiO,GAAD,OAChBvC,EAAAlD,EAAAxI,cAAC8N,GAAAtF,GAAc8D,OAAO,OAAOH,MAAM,SAEvC,OACIT,EAAAlD,EAAAxI,cAAA,WACI9C,UAAWoL,IAAWpL,EAAW,iBAAkB,wBAEnDwO,EAAAlD,EAAAxI,cAACkO,EAAA1F,GACGzF,KAAMA,EACNmB,QAASA,GAETwH,EAAAlD,EAAAxI,cAACmO,GAAA,GACGjR,UAAU,+BACV2F,MAAOgL,EACPV,MAAOY,EACPK,MAAOT,EACPU,YAAY,SAGhB3C,EAAAlD,EAAAxI,cAAA,QAAM0I,SAAS,YAAYE,QAAS8E,IACpChC,EAAAlD,EAAAxI,cAAA,QAAM0I,SAAS,MAAME,QAAS7F,OAM9CyK,GAAYrN,WACRkI,UAAWQ,IAAUnI,KAIrBxD,UAAW2L,IAAUxI,OACrB0C,KAAM8F,IAAUxI,OAChB8M,MAAOtE,IAAUxI,OACjBqN,UAAW7E,IAAUxI,OACrBoN,UAAW5E,IAAUvI,OACjB+L,IAAKxD,IAAUxI,OAAO1B,WACtB4N,IAAK1D,IAAUxI,OAAO1B,aAE1BkE,MAAOgG,IAAUxI,OACjB6D,QAAS2E,IAAUtI,MAGRiN,UCxFTc,GAAa,SAAA5M,GAAA,IAAE6M,EAAF7M,EAAE6M,SAAUC,EAAZ9M,EAAY8M,aAAZ,OACf9C,EAAAlD,EAAAxI,cAAA,WAAS9C,UAAU,4BACdqR,EAAS5Q,IAAI,SAAC8Q,EAAS5Q,GAAV,OACV6N,EAAAlD,EAAAxI,cAAC0O,GAADC,KACIvS,IAAKqS,EAAQf,UAAYe,EAAQf,UAAY7P,EAC7C4K,WAAA,EACAE,SAAS,4BACTzL,UAAU,wBACNuR,GACJvK,QAASuK,EAAU,kBAAMD,EAAaC,EAAQf,YAAa,KAC3DP,MAAOsB,EAAQtB,OAASsB,EAAQtB,MAAM/H,WACtCrC,KAAM0L,EAAQ1L,MAAR,IAAoB0L,EAAQf,UAA5B,QACN7K,MAAO4L,EAAQG,YACfC,aAAa,EACbpB,WACIpB,IAAKoC,EAAQL,MAAM/B,IACnBE,IAAKkC,EAAQL,MAAMU,aAOvCR,GAAWnO,WACPoO,SAAU1F,IAAU8D,MACpB6B,aAAc3F,IAAUtI,MAI5B,IAGMwO,GAAgB,SAAAhD,GAAA,IAAEiD,EAAFjD,EAAEiD,UAAF,OAClBtD,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,+CACXwO,EAAAlD,EAAAxI,cAACoM,EAAA5D,GACGtL,UAAU,cACVmP,IAAI,eACJF,MAAM,QACNG,OAAO,QACPC,IAAKC,sBAAY,sCAGrBd,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,uDACI,qBAAd8R,EAbW,uFADF,mDAmBtBD,GAAc5O,WACV6O,UAAWnG,IAAUxI,QAIzB,IAAM4O,GAAW,kBACbvD,EAAAlD,EAAAxI,cAACkP,IAAWX,SAAU,IAAIxJ,MAAMoK,KAAgBnK,KAAKoK,QAGnDC,GAAsB,SAAA/F,GAQtB,IAPFN,EAOEM,EAPFN,cACAsG,EAMEhG,EANFgG,UACAN,EAKE1F,EALF0F,UACAR,EAIElF,EAJFkF,aACAzM,EAGEuH,EAHFvH,QACAgH,EAEEO,EAFFP,iBACAwG,EACEjG,EADFiG,aACE5F,EASEX,MATFwG,EAAA7F,EAGE4E,gBAHFtJ,IAAAuK,OAAAC,EAAA9F,EAIE+F,sBAJFzK,IAAAwK,OAAAE,EAAAhG,EAKET,eALFjE,IAAA0K,OAAAC,EAAAjG,EAMEkG,uBANF5K,IAAA2K,OAAAE,EAAAnG,EAOEK,aAPF/E,IAAA6K,EAOU,EAPVA,EAAAC,EAAApG,EAQEjC,aARFzC,IAAA8K,EAQU,EARVA,EAAAC,EAWkBjO,EAAbtE,aAXLwH,IAAA+K,EAWa,EAXbA,EAYIC,IAAmBjH,EACnBkH,GAAqBD,GAAkB1B,EAAS3C,OAAS,EAEzDuE,EAA0BN,EAAgBnG,OAAO,SAACA,GAAD,OAAaA,EAAOG,MAAMuG,SAAS,UACpFC,EAAqBF,EAAwBvE,OAAS,EACtD0E,EAAapH,EAAQ0C,OAAS,EAE9B9G,EAAYyB,KAAKgK,KAAK7I,EAAQjK,GAC9BkK,EAAapB,KAAKiK,MAAMxG,EAAQvM,GAAS,EAEzCgT,EAAkBlB,IAAiBmB,sBAAoBC,OAASpB,IAAiBmB,sBAAoBE,OAIrG7F,EAAU,SAAC/H,GACb,GAAIA,IAAQoH,OAAOC,SAAStH,KAA5B,CAGA,IAAMuH,EAASC,SAASvK,cAAc,KACtCsK,EAAOvH,KAAOC,EAEd,IAAMwH,GACFC,SAAUH,EAAOG,SACjBZ,MAAOa,IAAYC,MAAML,EAAOM,SAGhC7B,EACA8B,iBAAeC,QAAQN,GAEvBK,iBAAejG,KAAK4F,KAiBtBqG,GACF3T,UAAW,kBACXgB,SAAU,SAAC4S,GACP,IAAM9N,EAAMgI,IAAUC,aAAV0D,OACL5M,GACHiI,MAAO8G,GAAanJ,GAAcmJ,EAAY,GAAKrT,EAAQkK,EAAalK,EACxEA,QACAiK,WAGJqD,EAAQ/H,IAEZiB,YAAa0D,EACb7C,YACAkB,wBAAwB,EACxBD,iBAAiB,GAGrB,OACI2F,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,6BAET+S,GAAkBQ,GAChB/E,EAAAlD,EAAAxI,cAAA,SAAO9C,UAAU,2BACbwO,EAAAlD,EAAAxI,cAAC+Q,EAAA,EAAD,OAIRrF,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,wBACXwO,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,mDACVgT,GACGxE,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,aACXwO,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,2BACTuT,GACE/E,EAAAlD,EAAAxI,cAACgR,EAAAxI,GACGtL,UAAU,6CACVgH,QAASoL,EACT5Q,GAAG,eACHyF,sBAAqBC,UAAQ8G,YAC7B1M,UAAW8R,GALf,UAUJ5E,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,iCACV+S,EAAoBvI,EAApB,wBAITgE,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,wBACXwO,EAAAlD,EAAAxI,cAACiR,EAAAzI,GACGtL,UAAU,iBACVrB,WAAW,OACXiB,MAAOyS,IAAiBmB,sBAAoBQ,MAAQ,GAAK,UACzD7U,cAAc,OAEdqP,EAAAlD,EAAAxI,cAAA,UACI9C,UAAU,qBACVgB,SAAU,SAACvB,GAAD,OAAQoO,EAAQpO,EAAE6I,OAAOnL,QACnC2D,OAAQ,SAACrB,GAAD,OAAQoO,EAAQpO,EAAE6I,OAAOnL,QACjC8J,sBAAqBC,UAAQ+M,OAC7B9W,MAAO2Q,IAAUC,aAAV0D,OACA5M,GACH2F,YAGJgE,EAAAlD,EAAAxI,cAAA,UAAQ3F,MAAM,IAAd,gBACCqV,EAAe/R,IAAI,SAACyT,EAAQjM,GACzB,IAAMrI,EAAQyS,IAAiBmB,sBAAoBQ,MAArC,SAAsDE,EAAOtU,MAAUsU,EAAOtU,MAE5F,OACI4O,EAAAlD,EAAAxI,cAAA,UACI5D,IAAK+I,EACL9K,MAAO2Q,IAAUC,aAAV0D,OACA5M,GACHsP,KAAMD,EAAO1S,GACbgJ,YAGH5K,SAWhCuT,GACG3E,EAAAlD,EAAAxI,cAAA,OAAK5D,IAAI,UAAUc,UAAU,aACxBiT,EACIxS,IAAI,SAAAiM,GAAoB,IAAlB9M,EAAkB8M,EAAlB9M,MAAO+M,EAAWD,EAAXC,MAGJ9G,EA5Gd,SAACuO,GAAmB,IACjCpI,EAA4BnH,EAA5BmH,QAAYqI,EADqBC,IACLzP,GADK,YAQK0P,GAAoBvI,EAAzDoI,GARgCE,IAQyBtI,GAAzDoI,KACFI,EAAcA,OAAIH,GAAcrI,QAASuI,EAAkBzH,MAAO,IACxE,OAAOgB,IAAUC,aAAayG,GAkGWC,CADI9H,EAAM+H,MAAM,EAAG/H,EAAMgI,QAAQ,OAE9C,OACInG,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,gCAAgCd,IAAKyN,GAC/C/M,EACD4O,EAAAlD,EAAAxI,cAACgR,EAAAxI,GACGtL,UAAU,uCACV4U,KAAK,QACLC,SAAS,SACThP,KAAMA,EACNoB,sBAAqBC,UAAQ4N,aAC7BnP,MAAM,gBAWrCoN,EACGvE,EAAAlD,EAAAxI,cAACiS,EAAA,SAAD,KACK1D,EAAS3C,OAAS,GACfF,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,iCACXwO,EAAAlD,EAAAxI,cAACkP,IACGX,SAAUA,EACVC,aAAcA,IAGhBiC,EAOE/E,EAAAlD,EAAAxI,cAACkS,EAAA1J,EAADmG,OACQkC,GACJpL,YAAa,EACbW,mBAAoB,EACpBD,iBAAkB,KAVtBuF,EAAAlD,EAAAxI,cAACkS,EAAA1J,EAADmG,OACQkC,GACJpL,YAAa,MAc5B8I,EAAS3C,QAAU,GAChBF,EAAAlD,EAAAxI,cAACmS,IAAcnD,UAAWA,KAIlCtD,EAAAlD,EAAAxI,cAACoS,GAAD,SAQpB/C,GAAoBlP,WAChB4I,iBAAkBF,IAAUnI,KAC5B2J,SAAUxB,IAAUrI,OACpB8O,UAAWzG,IAAUtI,KACrByI,cAAeH,IAAUrI,OACzBwO,UAAWnG,IAAUxI,OACrBmO,aAAc3F,IAAUtI,KACxBwB,QAAS8G,IAAUrI,OACnB+O,aAAc1G,IAAUxI,QAG5B,IAAM8K,GAAkBC,+BACpBpC,cAAeqC,IACftJ,QAASsJ,IACTtC,qBACAwG,aAAc8C,oBAGZC,IACF9D,aAAc+D,0BACdjD,UAAW,kBAAMA,YAAUkD,IAA2BpO,UAAQ8E,WAGnDoC,qBACXH,GACAmH,GAFWhH,CAGb+D,cClUIoD,GAAc,SAAA/Q,GAA4C,IAAlCsN,EAAkCtN,EAA1CgR,MAAQ1D,UAAYjG,EAAsBrH,EAAtBqH,iBACtC,OACI2C,EAAAlD,EAAAxI,cAAA,OAAK9C,UAAU,mBACT6L,GACE2C,EAAAlD,EAAAxI,cAACiS,EAAA,SAAD,KACmB,qBAAdjD,EACGtD,EAAAlD,EAAAxI,cAAC2S,EAAD,MAEAjH,EAAAlD,EAAAxI,cAAC4S,EAAD,OAIZlH,EAAAlD,EAAAxI,cAAC6S,IAAoB7D,UAAWA,MAK5CyD,GAAYtS,WACR4I,iBAAkBF,IAAUnI,KAE5BgS,MAAO7J,IAAUrI,QAGrB,IAAM2K,GAAkBC,+BACpBrC,uBAGJ0J,GAAYK,WAAaC,KAEVC,sBACX1H,kBAAQH,GAARG,CAAyBmH","file":"product-list.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getUniqueId = function () {\n    var i = 0;\n\n    return function () {\n        return 'field-' + i++;\n    };\n}();\n\n/**\n * Related components:\n *\n * * [FieldRow](#!/FieldRow)\n * * [FieldSet](#!/FieldSet)\n *\n * `Field` is a wrapper around a single form input that standardizes layout\n * of labels, hints and errors when using `redux-form`.\n *\n * It expects to receive an `<input>`, `<select>`, `<textarea>` or a custom\n * form-input component. Custom inputs should be compatible with redux-form\n * which typically means accepting `onChange`, `onBlur` and `value` props.\n *\n * @example ./DESIGN.md\n */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nvar Field = function (_React$Component) {\n    (0, _inherits3.default)(Field, _React$Component);\n\n    function Field(props) {\n        (0, _classCallCheck3.default)(this, Field);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Field.__proto__ || (0, _getPrototypeOf2.default)(Field)).call(this, props));\n\n        if (props.idForLabel) {\n            _this.inputId = props.idForLabel;\n        } else {\n            _this.inputId = getUniqueId();\n        }\n\n        _this.isCheckRadio = false;\n        _this.shouldStackLabelInput = _this.shouldStackLabelInput.bind(_this);\n        _this.shouldPlaceLabelAtEnd = _this.shouldPlaceLabelAtEnd.bind(_this);\n        _this.buildEventHandler = _this.buildEventHandler.bind(_this);\n        return _this;\n    }\n\n    (0, _createClass3.default)(Field, [{\n        key: 'shouldStackLabelInput',\n        value: function shouldStackLabelInput() {\n            if (!this.props.labelPosition) {\n                return !this.isCheckRadio;\n            } else {\n                return this.props.labelPosition === 'top';\n            }\n        }\n    }, {\n        key: 'shouldPlaceLabelAtEnd',\n        value: function shouldPlaceLabelAtEnd() {\n            if (!this.props.labelPosition) {\n                return this.isCheckRadio;\n            } else {\n                return this.props.labelPosition === 'end';\n            }\n        }\n    }, {\n        key: 'buildEventHandler',\n        value: function buildEventHandler(eventHandlerName) {\n            var _this2 = this;\n\n            var customHandler = this.props.customEventHandlers[eventHandlerName];\n            var input = this.props.input;\n\n            if (input) {\n                return typeof customHandler === 'function' ? function (e) {\n                    _this2.props.input[eventHandlerName](e);\n                    customHandler(e);\n                } : this.props.input[eventHandlerName];\n            }\n            return customHandler;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this3 = this;\n\n            var _props = this.props,\n                label = _props.label,\n                hint = _props.hint,\n                error = _props.error,\n                caption = _props.caption,\n                className = _props.className,\n                children = _props.children,\n                shouldShowErrorsInstantly = _props.shouldShowErrorsInstantly,\n                customEventHandlers = _props.customEventHandlers;\n\n\n            var childDisabled = false;\n            var childChecked = false;\n            var onlyChild = _react2.default.Children.count(children) === 1;\n\n            var newChildren = _react2.default.Children.map(children, function (child, idx) {\n                var childProps = {};\n\n                var isFormControl = child.type === 'input' || child.type === 'select' || child.type === 'textarea' || typeof child.type == 'function' // Custom component, can handle props\n                ;\n\n                if (isFormControl) {\n                    childProps = (0, _extends3.default)({}, _this3.props.input);\n                }\n\n                if (customEventHandlers) {\n                    // Redux form adds it's own handlers for these events\n                    // In order to add our own and prevent redux-forms being overwritten\n                    // we need to build a new function that calls both\n                    // Overwritting redux form's handlers will cause validation to break\n                    childProps.onBlur = _this3.buildEventHandler('onBlur', childProps);\n                    childProps.onFocus = _this3.buildEventHandler('onFocus', childProps);\n                    childProps.onChange = _this3.buildEventHandler('onChange', childProps);\n                    childProps.onDrop = _this3.buildEventHandler('onDrop', childProps);\n                    childProps.onDragStart = _this3.buildEventHandler('onDragStart', childProps);\n                }\n\n                childProps = (0, _extends3.default)({}, childProps, {\n                    'aria-invalid': !!error,\n                    'aria-required': child.props.required\n                }, child.props);\n\n                if (child.props.disabled) {\n                    childDisabled = true;\n                }\n\n                if (childProps.checked) {\n                    childChecked = true;\n                }\n\n                if (error) {\n                    childProps.className = (0, _classnames2.default)(child.props.className, 'pw--has-error');\n                }\n\n                // Give the first child the id for the field\n                if (idx === 0) {\n                    childProps.id = _this3.inputId;\n                }\n\n                if (onlyChild && (child.props.type === 'radio' || child.props.type === 'checkbox')) {\n                    _this3.isCheckRadio = true;\n                }\n\n                if (child.props.required) {\n                    _this3.isRequired = true;\n                }\n\n                return _react2.default.cloneElement(child, childProps);\n            });\n\n            var metaProps = this.props.meta;\n            var shouldShowReduxError = metaProps && (metaProps.touched && !metaProps.active || metaProps.dirty && shouldShowErrorsInstantly);\n            var reduxFormError = metaProps && shouldShowReduxError && metaProps.error;\n            var fieldError = error || reduxFormError;\n\n            var classes = (0, _classnames2.default)('pw-field', {\n                'pw--is-check-radio': this.isCheckRadio,\n                'pw--error': fieldError,\n                'pw--required': this.isRequired,\n                'pw--disabled': childDisabled,\n                'pw--checked': childChecked\n            }, className);\n\n            var innerClasses = (0, _classnames2.default)('pw-field__inner', {\n                'pw--stack': this.shouldStackLabelInput()\n            });\n\n            var labelClasses = (0, _classnames2.default)('pw-field__label-wrap', {\n                'pw--end': this.shouldPlaceLabelAtEnd()\n            });\n\n            var inputClasses = (0, _classnames2.default)('pw-field__input');\n\n            return _react2.default.createElement(\n                'div',\n                { className: classes },\n                _react2.default.createElement(\n                    'div',\n                    { className: innerClasses },\n                    label && _react2.default.createElement(\n                        'div',\n                        { className: labelClasses },\n                        _react2.default.createElement(\n                            'label',\n                            {\n                                className: 'pw-field__label',\n                                htmlFor: this.inputId\n                            },\n                            label\n                        ),\n                        hint && _react2.default.createElement(\n                            'div',\n                            { className: 'pw-field__hint' },\n                            hint\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: inputClasses },\n                        newChildren\n                    )\n                ),\n                fieldError && _react2.default.createElement(\n                    'div',\n                    { className: 'pw-field__error' },\n                    fieldError\n                ),\n                caption && _react2.default.createElement(\n                    'div',\n                    { className: 'pw-field__caption' },\n                    caption\n                )\n            );\n        }\n    }]);\n    return Field;\n}(_react2.default.Component);\n\nField.propTypes = {\n    /**\n     * The input(s) to include in the field.\n     */\n    children: _propTypes2.default.node.isRequired,\n\n    /**\n     * Extra information that may help the user complete this field.\n     */\n    caption: _propTypes2.default.node,\n\n    /**\n     * Adds values to the `class` attribute of the root element.\n     */\n    className: _propTypes2.default.string,\n\n    /**\n    * Custom event handlers to be added to the input.\n    * If used with redux form these handlers will be called after\n    * the handlers added by redux form.\n    */\n    customEventHandlers: _propTypes2.default.shape({\n        onBlur: _propTypes2.default.func,\n        onChange: _propTypes2.default.func,\n        onDrop: _propTypes2.default.func,\n        onDragStart: _propTypes2.default.func,\n        onFocus: _propTypes2.default.func\n    }),\n    /**\n     * If this prop is passed in, the pw--error class will be added to the field\n     * and the error will be shown.\n     * Also adds the aria-invalid attribute.\n     */\n    error: _propTypes2.default.node,\n\n    /**\n     * Extra information that displays beside the label.\n     */\n    hint: _propTypes2.default.node,\n\n    /**\n     * If provided, this will be used as the 'id' attr for the input and the 'for' attr for the label.\n     * If not provided, an id will be generated and used.\n     */\n    idForLabel: _propTypes2.default.string,\n\n    /**\n     * Developers can ignore this prop.\n     * If our field is used with redux-form this prop gets passed by redux-form.\n     */\n    input: _propTypes2.default.object,\n\n    /**\n     * The label for the input.\n     * The id of the input will be used as the 'for' attribute for this label,\n     * unless one is already provided.\n     */\n    label: _propTypes2.default.node,\n\n    /**\n     * Specify the position of the label. Default behaviour:\n     * If the input is a checkbox or radio, the label will display after the input\n     * Else, the label will display on top of the input.\n     */\n    labelPosition: _propTypes2.default.oneOf(['top', 'start', 'end']),\n\n    /**\n     * Developers can ignore this prop.\n     * If our field is used with redux-form this prop gets passed by redux-form.\n     */\n    meta: _propTypes2.default.object,\n\n    /**\n     * Indicates whether to show field errors instantly, i.e. as the user types\n     * in a field.\n     * Set this to `false` to show errors on blur.\n     */\n    shouldShowErrorsInstantly: _propTypes2.default.bool\n};\n\nexports.default = Field;","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport Immutable from 'immutable'\nimport {createSelector} from 'reselect'\nimport {getCategories, getProductSearches, getUi} from '../../store/selectors'\nimport stringify from 'json-stable-stringify'\n\n// Selectors for UI\n\nexport const getUIState = createSelector(\n    getUi,\n    ({productList}) => productList || Immutable.Map()\n)\n\nexport const getUIStateKey = createSelector(\n    getUIState,\n    (uiState) => stringify(uiState.toJS())\n)\n\n// Selectors for Data\n\nexport const getCurrentCategoryId = createSelector(\n    getUIState,\n    (uiState) => uiState.getIn(['filters', 'cgid'], '')\n)\n\nexport const getCategory = createSelector(\n    getCurrentCategoryId,\n    getCategories,\n    (categoryId, categories) => categories.get(categoryId)\n)\n\nexport const getCategoryPath = createSelector(\n    getCategory,\n    getCategories,\n    (currentCategory, categories) => {\n        let path = Immutable.List()\n\n        if (!currentCategory) { return path }\n\n        let category = currentCategory\n\n        while (category) {\n            path = path.unshift(category)\n            category = categories.get(category.get('parentId'))\n        }\n\n        // Add the root category onto the path.\n        // TODO: This category should be in the categories store, but currently we\n        // aren't loading all categories on app load.\n        path = path.unshift({\n            id: 'home',\n            title: 'Home',\n            parentId: null,\n            href: '/',\n            url: '/',\n            pageMeta: {},\n        })\n\n        return path\n    }\n)\n\nexport const getProductSearch = createSelector(\n    getUIStateKey,\n    getProductSearches,\n    (uiStateKey, productSearches) => productSearches.get(uiStateKey)\n)\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _button = require('../button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _utils = require('../../utils/utils');\n\nvar _dataObjects = require('../../analytics/data-objects');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Pagination is a way of breaking down large listings into smaller,\n * more digestible chunks and allowing the user to step through them in sequential\n * (or random) order.\n *\n * @example ./DESIGN.md\n */\nvar Pagination = function (_React$Component) {\n    (0, _inherits3.default)(Pagination, _React$Component);\n\n    function Pagination(props) {\n        (0, _classCallCheck3.default)(this, Pagination);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Pagination.__proto__ || (0, _getPrototypeOf2.default)(Pagination)).call(this, props));\n\n        _this.goToStart = _this.goToStart.bind(_this);\n        _this.goBack = _this.goBack.bind(_this);\n        _this.goForward = _this.goForward.bind(_this);\n        _this.goToEnd = _this.goToEnd.bind(_this);\n        _this.goToSelected = _this.goToSelected.bind(_this);\n        return _this;\n    }\n\n    (0, _createClass3.default)(Pagination, [{\n        key: 'renderPageButton',\n        value: function renderPageButton(i) {\n            var pageClasses = (0, _classnames2.default)('pw-pagination__page', {\n                'pw--active': i === this.props.currentPage\n            });\n\n            return _react2.default.createElement(\n                _button2.default,\n                {\n                    key: i,\n                    className: pageClasses,\n                    onClick: this.props.onChange.bind(null, i),\n                    'data-analytics-name': _dataObjects.UI_NAME.pagination,\n                    'data-analytics-content': _dataObjects.UI_NAME.page + ' ' + i\n                },\n                this.props.getPageButtonMessage(i)\n            );\n        }\n    }, {\n        key: 'renderPageButtons',\n        value: function renderPageButtons(lower, upper) {\n            var list = [];\n            for (var i = lower; i <= upper; i++) {\n                list.push(this.renderPageButton(i));\n            }\n            return list;\n        }\n    }, {\n        key: 'buildSelectOptions',\n        value: function buildSelectOptions(pageCount) {\n            var _this2 = this;\n\n            return new Array(pageCount).fill(undefined).map(function (val, index) {\n                var newIndex = ++index;\n                var value = newIndex.toString();\n                return _react2.default.createElement(\n                    'option',\n                    { value: value, key: index },\n                    _this2.props.currentPage === index ? _this2.props.getCurrentPageMessage(value, pageCount) : _this2.props.getSelectOptionMessage(value, pageCount)\n                );\n            });\n        }\n    }, {\n        key: 'goToStart',\n        value: function goToStart() {\n            this.props.onChange(1);\n        }\n    }, {\n        key: 'goBack',\n        value: function goBack() {\n            this.props.onChange(this.props.currentPage - 1);\n        }\n    }, {\n        key: 'goForward',\n        value: function goForward() {\n            this.props.onChange(this.props.currentPage + 1);\n        }\n    }, {\n        key: 'goToEnd',\n        value: function goToEnd() {\n            this.props.onChange(this.props.pageCount);\n        }\n    }, {\n        key: 'goToSelected',\n        value: function goToSelected(e) {\n            this.props.onChange(parseInt(e.target.value));\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                className = _props.className,\n                pageCount = _props.pageCount,\n                pagesToShow = _props.pagesToShow,\n                currentPage = _props.currentPage,\n                firstButton = _props.firstButton,\n                prevButton = _props.prevButton,\n                nextButton = _props.nextButton,\n                lastButton = _props.lastButton,\n                isSelect = _props.isSelect,\n                showPageButtons = _props.showPageButtons,\n                showCurrentPageMessage = _props.showCurrentPageMessage,\n                getCurrentPageMessage = _props.getCurrentPageMessage,\n                selectIcon = _props.selectIcon;\n            var _props2 = this.props,\n                pagesToShowAtEnd = _props2.pagesToShowAtEnd,\n                pagesToShowAtStart = _props2.pagesToShowAtStart;\n\n\n            var classes = (0, _classnames2.default)('pw-pagination', {\n                'pw--select-pagination': isSelect\n            }, className);\n\n            var visiblePages = Math.min(pagesToShow || pageCount, pageCount);\n            var centerChunkLength = visiblePages - pagesToShowAtStart - pagesToShowAtEnd;\n\n            // if visible pages is equal to pagesToShowAtEnd and pagesToShowAtStart combined\n            // show subset of pages without start and end\n            if (visiblePages === pagesToShowAtStart + pagesToShowAtEnd) {\n                pagesToShowAtStart = 0;\n                pagesToShowAtEnd = 0;\n                centerChunkLength = visiblePages;\n            }\n\n            // Pages are 1 indexed\n            var pageBeforeEnd = pageCount - pagesToShowAtEnd;\n\n            // Offset the center chunk from the start and end\n            var centerChunkStart = 1 + pagesToShowAtStart;\n            var centerChunkEnd = Math.min(centerChunkStart + centerChunkLength - 1, pageBeforeEnd);\n\n            // If the current page isn't visible in the center,\n            // shift the center so that it is\n            // Also show the value following the current page\n            if (currentPage >= centerChunkEnd && centerChunkStart !== centerChunkEnd) {\n                centerChunkEnd = Math.min(currentPage + 1, pageBeforeEnd);\n                centerChunkStart = centerChunkEnd - centerChunkLength + 1;\n            } else if (currentPage > centerChunkEnd && centerChunkStart === centerChunkEnd) {\n                // do not shift the center when there is 1 page in the chunk\n                centerChunkStart = Math.min(currentPage, pageBeforeEnd);\n                centerChunkEnd = centerChunkStart;\n            }\n\n            if (pageCount < pagesToShow || centerChunkLength < 0) {\n                if (centerChunkLength < 0) {\n                    console.error('The pagesToShow prop must be >= pagesToShowAtStart + pagesToShowAtEnd. Ignoring pagesToShowAtStart and pagesToShowAtEnd.');\n                }\n                pagesToShowAtStart = 0;\n                pagesToShowAtEnd = 0;\n                centerChunkStart = 1;\n                centerChunkEnd = pageCount;\n                pageBeforeEnd = pageCount;\n            }\n\n            var atStart = currentPage === 1;\n            var atEnd = currentPage === pageCount;\n\n            var Ellipsis = function Ellipsis() {\n                return _react2.default.createElement(\n                    'div',\n                    { className: 'pw-pagination__ellipsis' },\n                    '...'\n                );\n            };\n\n            return _react2.default.createElement(\n                'nav',\n                { role: 'navigation', className: classes },\n                firstButton && _react2.default.createElement(\n                    _button2.default,\n                    (0, _extends3.default)({\n                        className: 'pw-pagination__button',\n                        onClick: this.goToStart,\n                        disabled: atStart,\n                        'data-analytics-name': _dataObjects.UI_NAME.pagination,\n                        'data-analytics-content': _dataObjects.UI_NAME.page + ' 1'\n                    }, firstButton.props),\n                    firstButton.text\n                ),\n                prevButton && _react2.default.createElement(\n                    _button2.default,\n                    (0, _extends3.default)({\n                        className: 'pw-pagination__button',\n                        onClick: this.goBack,\n                        disabled: atStart,\n                        'data-analytics-name': _dataObjects.UI_NAME.pagination,\n                        'data-analytics-content': _dataObjects.UI_NAME.previous\n                    }, prevButton.props),\n                    prevButton.text\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'pw-pagination__content' },\n                    showPageButtons && _react2.default.createElement(\n                        'div',\n                        { className: 'pw-pagination__pages' },\n                        this.renderPageButtons(1, pagesToShowAtStart),\n                        pagesToShowAtStart && centerChunkStart > pagesToShowAtStart + 1 ? _react2.default.createElement(Ellipsis, { key: 'firstEllipsis' }) : false,\n                        this.renderPageButtons(centerChunkStart, centerChunkEnd),\n                        pagesToShowAtEnd && centerChunkEnd < pageBeforeEnd ? _react2.default.createElement(Ellipsis, { key: 'secondEllipsis' }) : false,\n                        this.renderPageButtons(pageBeforeEnd + 1, pageCount)\n                    ),\n                    isSelect && _react2.default.createElement(\n                        'div',\n                        { className: 'pw-pagination__select-wrapper' },\n                        _react2.default.createElement(\n                            'select',\n                            {\n                                className: 'pw-pagination__select',\n                                onBlur: this.goToSelected,\n                                onChange: this.goToSelected,\n                                value: currentPage\n                            },\n                            this.buildSelectOptions(pageCount)\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'pw-pagination__select-icon' },\n                            _react2.default.createElement(_icon2.default, { name: selectIcon || 'caret-bottom' })\n                        )\n                    ),\n                    showCurrentPageMessage && _react2.default.createElement(\n                        'span',\n                        { className: 'pw-pagination__page-count' },\n                        getCurrentPageMessage(currentPage, pageCount)\n                    )\n                ),\n                nextButton && _react2.default.createElement(\n                    _button2.default,\n                    (0, _extends3.default)({\n                        className: 'pw-pagination__button',\n                        onClick: this.goForward,\n                        disabled: atEnd,\n                        'data-analytics-name': _dataObjects.UI_NAME.pagination,\n                        'data-analytics-content': _dataObjects.UI_NAME.next\n                    }, nextButton.props),\n                    nextButton.text\n                ),\n                lastButton && _react2.default.createElement(\n                    _button2.default,\n                    (0, _extends3.default)({\n                        className: 'pw-pagination__button',\n                        onClick: this.goToEnd,\n                        disabled: atEnd,\n                        'data-analytics-name': _dataObjects.UI_NAME.pagination,\n                        'data-analytics-content': _dataObjects.UI_NAME.page + ' ' + pageCount\n                    }, lastButton.props),\n                    lastButton.text\n                )\n            );\n        }\n    }]);\n    return Pagination;\n}(_react2.default.Component); /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nvar defaultGetCurrentPageMessage = function defaultGetCurrentPageMessage(current, total) {\n    return 'Page ' + current + ' of ' + total;\n};\n\nvar defaultGetPageButtonMessage = function defaultGetPageButtonMessage(pageNumber) {\n    return _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(\n            'span',\n            { className: 'pw-pagination__hidden-label' },\n            'Page '\n        ),\n        pageNumber\n    );\n};\n\nvar defaultSelectOptionMessage = function defaultSelectOptionMessage(current, total) {\n    return 'Page ' + current + ' of ' + total;\n};\n\nPagination.defaultProps = {\n    getCurrentPageMessage: defaultGetCurrentPageMessage,\n    getPageButtonMessage: defaultGetPageButtonMessage,\n    getSelectOptionMessage: defaultSelectOptionMessage,\n    nextButton: {\n        text: 'Next'\n    },\n    prevButton: {\n        text: 'Prev'\n    },\n    pagesToShowAtStart: 0,\n    pagesToShowAtEnd: 0,\n    showPageButtons: true,\n    showCurrentPageMessage: true,\n    onChange: _utils.noop\n};\n\nPagination.propTypes = {\n    /**\n     * The current page number.\n     */\n    currentPage: _propTypes2.default.number.isRequired,\n\n    /**\n     * The number of pages shown in pagination.\n     */\n    pageCount: _propTypes2.default.number.isRequired,\n\n    /**\n     * Adds values to the `class` attribute of the root element.\n     */\n    className: _propTypes2.default.string,\n\n    /**\n     * The properties for First Button (It's used to go to the very first page).\n     */\n    firstButton: _propTypes2.default.shape({\n        text: _propTypes2.default.string,\n        props: _propTypes2.default.object\n    }),\n\n    /**\n     * This function should return a string (or node) that describes the user's current location in the pagination.\n     * It will be passed the current page and total number of pages.\n     */\n    getCurrentPageMessage: _propTypes2.default.func,\n\n    /**\n     * This function should return a string (or node) to be used for the page buttons.\n     * It will be passed the button's page number.\n     */\n    getPageButtonMessage: _propTypes2.default.func,\n\n    /**\n     * This function should return a string for the select option of pagination.\n     * It will be passed the current page and total number of pages.\n     */\n    getSelectOptionMessage: _propTypes2.default.func,\n\n    /**\n     * Defines if pagination is a select pagination.\n     */\n    isSelect: _propTypes2.default.bool,\n\n    /**\n     * The properties for Last Button (It's used to go to the very last page).\n     */\n    lastButton: _propTypes2.default.shape({\n        text: _propTypes2.default.string,\n        props: _propTypes2.default.object\n    }),\n\n    /**\n     * The properties for Next Button (It's used to go to the next page).\n     */\n    nextButton: _propTypes2.default.shape({\n        text: _propTypes2.default.string,\n        props: _propTypes2.default.object\n    }),\n\n    /**\n     * The total number of pages to show.\n     * If you provide pagesToShowAtStart or pagesToShowAtEnd, they will be subtracted from this number.\n     */\n    pagesToShow: _propTypes2.default.number,\n\n    /**\n     * The number of pages to always show at the end of the pagination.\n     */\n    pagesToShowAtEnd: _propTypes2.default.number,\n\n    /**\n     * The number of pages to always show at the start of the pagination.\n     */\n    pagesToShowAtStart: _propTypes2.default.number,\n\n    /**\n     * The properties for Previous Button (It's used to go to the previous page).\n     */\n    prevButton: _propTypes2.default.shape({\n        text: _propTypes2.default.string,\n        props: _propTypes2.default.object\n    }),\n\n    /**\n     * Name of SVG icon for select drop down.\n     * For more information about available icons, see the [Icon component](#!/Icon).\n     */\n    selectIcon: _propTypes2.default.string,\n\n    /**\n     * If false, the current page message will not be shown.\n     */\n    showCurrentPageMessage: _propTypes2.default.bool,\n\n    /**\n     * If false, the page buttons(numbers) will not be shown.\n     */\n    showPageButtons: _propTypes2.default.bool,\n\n    /**\n     * This function is called whenever the page is changed.\n     * This function is also responsible for updating the props that are passed to the pagination component.\n     */\n    onChange: _propTypes2.default.func\n};\n\nexports.default = Pagination;","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport const MicrodataOffer = ({available, children, className}) => {\n    const classes = classNames('c-microdata-offer', className)\n\n    let availability\n    if (available) {\n        availability = 'In Stock'\n    // If available is not true or false,\n    // we haven't actually gotten the data back for it yet\n    } else if (available === false) {\n        availability = 'Out of Stock'\n    }\n\n    return (\n        <span\n            className={classes}\n            itemScope\n            itemProp=\"offers\"\n            itemType=\"http://schema.org/Offer\"\n        >\n            {children}\n            {!!availability &&\n                <meta itemProp=\"availability\" content={availability} />\n            }\n        </span>\n    )\n}\n\nMicrodataOffer.propTypes = {\n    available: PropTypes.bool,\n    children: PropTypes.node,\n    className: PropTypes.string\n}\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport queryString from 'query-string'\n\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\nimport {browserHistory} from 'progressive-web-sdk/dist/routing'\n\nimport {isRunningInAstro} from '../../containers/app/selectors'\nimport * as selectors from '../../containers/product-list/selectors'\n\nimport urlMapper from '../../config/url-mapper'\n\nimport {Accordion, AccordionItem} from 'progressive-web-sdk/dist/components/accordion'\nimport Button from 'progressive-web-sdk/dist/components/button'\n\n\nconst goToURL = (url, isRunningInAstro) => {\n    if (url === window.location.href) { return }\n\n    // Use a dom anchor as a parser.\n    const anchor = document.createElement('a')\n    anchor.href = url\n\n    const historyEntry = {\n        pathname: anchor.pathname,\n        query: queryString.parse(anchor.search)\n    }\n\n    if (isRunningInAstro) {\n        browserHistory.replace(historyEntry)\n    } else {\n        browserHistory.push(historyEntry)\n    }\n}\n\n\nconst ProductFilter = ({isRunningInAstro, productSearch, uiState}) => {\n\n    const {filters = []} = productSearch || {}\n\n    return (\n        <Accordion\n            className=\"c-product-filter\"\n            initialOpenItems={[0]}>\n            {filters.map(({label, ruleset, kinds}) =>\n                <AccordionItem header={label} key={ruleset} className=\"u-padding-0\">\n                    {/* disabling a11y lints–the handler below is\n                    for the bubbled events from the children button elements */}\n                    {/* eslint-disable\n                        jsx-a11y/click-events-have-key-events,\n                        jsx-a11y/onclick-has-focus,\n                        jsx-a11y/onclick-has-role,\n                        jsx-a11y/no-static-element-interactions\n                    */}\n                    <div className=\"c-product-filter__options\" role=\"presentation\">\n                        {kinds\n                            .filter(({count}) => (count > 0))\n                            .map(({count, label, query, searchKey}) => {\n                                const searchState = {\n                                    ...uiState,\n                                    start: 0,\n                                    filters: {\n                                        ...uiState.filters,\n                                        [ruleset]: searchKey\n                                    }\n                                }\n\n                                return (\n                                    <Button\n                                        key={query}\n                                        className=\"c-product-filter__option pw--link\"\n                                        innerClassName=\"u-justify-start\"\n                                        id={query}\n                                        onClick={() => goToURL(urlMapper.getSearchUrl(searchState), isRunningInAstro)}\n                                        data-analytics-name={UI_NAME.showFilters}\n                                    >\n                                        <span className=\"u-color-brand u-margin-end-sm\">{label}</span> <span className=\"u-color-neutral-40\">({count})</span>\n                                    </Button>\n                                )\n                            }\n                        )}\n                    </div>\n                </AccordionItem>\n            )}\n        </Accordion>\n    )\n}\n\nProductFilter.propTypes = {\n    isRunningInAstro: PropTypes.bool,\n    productSearch: PropTypes.object,\n    uiState: PropTypes.object\n}\n\nconst mapStateToProps = createPropsSelector({\n    isRunningInAstro,\n    productSearch: selectors.getProductSearch,\n    uiState: selectors.getUIState,\n})\n\nexport default connect(mapStateToProps)(ProductFilter)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport * as selectors from '../selectors'\nimport {getAssetUrl} from 'progressive-web-sdk/dist/asset-utils'\n\nimport SkeletonText from 'progressive-web-sdk/dist/components/skeleton-text'\nimport Image from 'progressive-web-sdk/dist/components/image'\nimport Breadcrumbs from 'progressive-web-sdk/dist/components/breadcrumbs'\n\nimport PageMeta from '../../../components/page-meta'\n\nconst ProductListHeader = ({\n    category,\n    categoryPath = []\n}) => (\n    <div className=\"u-flexbox u-align-bottom\">\n        {category &&\n            <PageMeta {...category.pageMeta} />\n        }\n\n        <div className=\"u-flex u-padding-top-lg u-padding-bottom-lg u-padding-start-md\">\n            {categoryPath.length > 0 &&\n                <div className=\"t-product-list__breadcrumb\">\n                    <Breadcrumbs\n                        items={categoryPath.map(({title, href}) => ({text: title, href}))}\n                        includeMicroData />\n                </div>\n            }\n\n            <div className=\"u-margin-top-md\">\n                {category ?\n                    <h1 className=\"u-text-uppercase\">{category.title}</h1>\n                :\n                    <SkeletonText lines={1} type=\"h1\" width=\"100px\" />\n                }\n            </div>\n        </div>\n\n        {category &&\n            <Image\n                className=\"u-flex-none u-padding-end u-padding-bottom-sm\"\n                alt=\"Heading logo\"\n                height=\"60px\"\n                width=\"60px\"\n                src={\n                    getAssetUrl(`static/img/categories/${category.title.trim().replace(/\\s+/g, '-')\n                        .toLowerCase()}@2x.png`)\n                }\n            />\n        }\n    </div>\n)\n\nProductListHeader.propTypes = {\n    category: PropTypes.object,\n    categoryPath: PropTypes.array\n}\n\nconst mapStateToProps = createPropsSelector({\n    category: selectors.getCategory,\n    categoryPath: selectors.getCategoryPath\n})\n\nexport default connect(mapStateToProps)(ProductListHeader)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\n// import {getCategorySearchTerm} from '../../../store/categories/selectors'\nimport * as selectors from '../selectors'\n\nimport Breadcrumbs from 'progressive-web-sdk/dist/components/breadcrumbs'\nimport SkeletonText from 'progressive-web-sdk/dist/components/skeleton-text'\n\nconst items = [\n    {\n        text: 'Home',\n        href: '/'\n    }\n]\n\nconst SearchResultHeader = ({productSearch}) => (\n    <div className=\"u-flexbox u-align-bottom\">\n        <div className=\"u-flex u-padding-top-lg u-padding-bottom-lg u-padding-start-md\">\n            <Breadcrumbs items={items} includeMicroData />\n            <div className=\"u-margin-top-md\">\n                {productSearch ?\n                    <h1 className=\"u-text-uppercase\">\n                        <span>Results For </span>\n                        <span className=\"u-text-weight-light\">'{productSearch.query}'</span>\n                    </h1>\n                :\n                    <SkeletonText lines={1} type=\"h1\" width=\"100px\" />\n                }\n            </div>\n        </div>\n    </div>\n)\n\nSearchResultHeader.propTypes = {\n    productSearch: PropTypes.object\n}\n\nconst mapStateToProps = createPropsSelector({\n    productSearch: selectors.getProductSearch,\n})\n\nexport default connect(mapStateToProps)(SearchResultHeader)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport Image from 'progressive-web-sdk/dist/components/image'\nimport Link from 'progressive-web-sdk/dist/components/link'\nimport Ratio from 'progressive-web-sdk/dist/components/ratio'\nimport SkeletonBlock from 'progressive-web-sdk/dist/components/skeleton-block'\n\nimport ProductItem from '../product-item'\nimport {FormattedPrice} from '../intl/index'\nimport {MicrodataOffer} from '../microdata'\n\n/**\n * Product Tile represents a product and its basic information: image,\n * link and price.\n */\n\nconst titleClassName = classNames(\n    'c-product-tile__name',\n    'u-h4',\n    'u-text-family',\n    'u-text-weight-medium',\n    'u-color-neutral-60'\n)\n\nconst ProductImage = ({src, alt}) => (\n    <Ratio width=\"8\" height=\"10\">\n        <Image\n            className=\"c-product-tile__image\"\n            src={src}\n            alt={alt}\n            width=\"100%\"\n            height=\"100%\"\n            itemProp=\"image\"\n            shouldLazyLoad={true}\n            lazyLoadThreshold={120}\n        />\n    </Ratio>\n)\n\nProductImage.propTypes = {\n    alt: PropTypes.string,\n    src: PropTypes.string\n}\n\nconst ProductPrice = ({price}) => {\n    return (\n        <MicrodataOffer className=\"u-text-weight-bold u-color-error\" available>\n            <FormattedPrice value={price} />\n        </MicrodataOffer>\n    )\n}\n\nProductPrice.propTypes = {\n    price: PropTypes.string.isRequired,\n    currency: PropTypes.object,\n}\n\nconst OutOfStockPrice = () => {\n    return (\n        <MicrodataOffer className=\"u-text-weight-bold u-color-error\" available={false}>\n            Out of stock\n        </MicrodataOffer>\n    )\n}\n\nconst ProductTile = ({className, thumbnail, href, price, title, onClick, productId, available}) => {\n    const productImage = (<ProductImage {...thumbnail} />)\n\n    const titleElement = title\n        ? <h2 className={titleClassName} itemProp=\"name\">{title}</h2>\n        : <SkeletonBlock height=\"34px\" />\n\n    const priceElement = (price && price.length > 0 && <ProductPrice price={price} />) ||\n        (!available) && <OutOfStockPrice /> ||\n        <SkeletonBlock height=\"22px\" width=\"50px\" />\n\n    return (\n        <article\n            className={classNames(className, 'c-product-tile', 'u-padding-bottom-lg')}\n        >\n            <Link\n                href={href}\n                onClick={onClick}\n            >\n                <ProductItem\n                    className=\"t-product-list__product-tile\"\n                    title={titleElement}\n                    price={priceElement}\n                    image={productImage}\n                    customWidth=\"100%\"\n                />\n\n                <meta itemProp=\"productID\" content={productId} />\n                <meta itemProp=\"url\" content={href} />\n            </Link>\n        </article>\n    )\n}\n\nProductTile.propTypes = {\n    available: PropTypes.bool,\n    /**\n     * Optional className for the product tile\n     */\n    className: PropTypes.string,\n    href: PropTypes.string,\n    price: PropTypes.string,\n    productId: PropTypes.string,\n    thumbnail: PropTypes.shape({\n        alt: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n    }),\n    title: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default ProductTile\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {browserHistory} from 'progressive-web-sdk/dist/routing'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport queryString from 'query-string'\n\nimport {getAssetUrl} from 'progressive-web-sdk/dist/asset-utils'\nimport {getviewportSize} from 'progressive-web-sdk/dist/store/app/selectors'\nimport {VIEWPORT_SIZE_NAMES} from 'progressive-web-sdk/dist/ssr/constants'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nimport {receiveCurrentProductId} from 'mobify-integration-manager/dist/integration-manager/results'\n\nimport {isRunningInAstro} from '../../app/selectors'\nimport * as selectors from '../selectors'\nimport urlMapper from '../../../config/url-mapper'\n\nimport {PLACEHOLDER_PRODUCT, ITEMS_PER_PAGE} from '../constants'\nimport {PRODUCT_LIST_FILTER_MODAL} from '../../../modals/constants'\nimport {openModal} from '../../../modals/actions'\n\nimport Button from 'progressive-web-sdk/dist/components/button'\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport Image from 'progressive-web-sdk/dist/components/image'\nimport Pagination from 'progressive-web-sdk/dist/components/pagination'\n\nimport ProductFilter from '../../../components/product-filter'\nimport ProductTile from '../../../components/product-tile'\n\nconst ResultList = ({products, setProductId}) => (\n    <section className=\"t-product-list__contents\">\n        {products.map((product, idx) => (\n            <ProductTile\n                key={product.productId ? product.productId : idx}\n                itemScope\n                itemType=\"http://schema.org/Product\"\n                className=\"t-product-list__tile\"\n                {...product}\n                onClick={product ? () => setProductId(product.productId) : null}\n                price={product.price && product.price.toString()}\n                href={product.href || `/${product.productId}.html`}\n                title={product.productName}\n                description={false}\n                thumbnail={{\n                    alt: product.image.alt,\n                    src: product.image.link\n                }}\n            />\n        ))}\n    </section>\n)\n\nResultList.propTypes = {\n    products: PropTypes.array,\n    setProductId: PropTypes.func\n}\n\n\nconst noResultsText = 'We can\\'t find products matching the selection'\nconst emptySearchText = 'Your search returned no results. Please check your spelling and try searching again.'\n\nconst NoResultsList = ({routeName}) => (\n    <div className=\"u-flexbox u-direction-column u-align-center\">\n        <Image\n            className=\"u-flex-none\"\n            alt=\"Crystal Ball\"\n            width=\"122px\"\n            height=\"110px\"\n            src={getAssetUrl('static/img/global/no-results.png')}\n        />\n\n        <div className=\"t-product-list__no-results-text u-text-align-center\">\n            {routeName === 'searchResultPage' ? emptySearchText : noResultsText}\n        </div>\n    </div>\n)\n\nNoResultsList.propTypes = {\n    routeName: PropTypes.string\n}\n\n\nconst Skeleton = () => (\n    <ResultList products={new Array(ITEMS_PER_PAGE).fill(PLACEHOLDER_PRODUCT)} />\n)\n\nconst ProductListContents = ({\n    productSearch,\n    openModal,\n    routeName,\n    setProductId,\n    uiState,\n    isRunningInAstro,\n    viewportSize\n}) => {\n\n    const {\n        products = [],\n        sortingOptions = [],\n        filters = [],\n        selectedFilters = [],\n        start = 0,\n        total = 0\n    } = productSearch || {}\n\n    const {count = 1} = uiState\n    const contentsLoaded = !!productSearch\n    const showListActionBar = !contentsLoaded || products.length > 0\n\n    const filteredSelectedFilters = selectedFilters.filter((filter) => !filter.query.includes('cgid'))\n    const hasSelectedFilters = filteredSelectedFilters.length > 0\n    const hasFilters = filters.length > 0\n\n    const pageCount = Math.ceil(total / count)\n    const pageNumber = Math.floor(start / count) + 1\n\n    const isLargeAndWider = viewportSize === VIEWPORT_SIZE_NAMES.LARGE || viewportSize === VIEWPORT_SIZE_NAMES.XLARGE\n\n\n\n    const goToURL = (url) => {\n        if (url === window.location.href) { return }\n\n        // Use a dom anchor as a parser.\n        const anchor = document.createElement('a')\n        anchor.href = url\n\n        const historyEntry = {\n            pathname: anchor.pathname,\n            query: queryString.parse(anchor.search)\n        }\n\n        if (isRunningInAstro) {\n            browserHistory.replace(historyEntry)\n        } else {\n            browserHistory.push(historyEntry)\n        }\n    }\n\n    const clearFiltersUrl = (filterToRemove) => {\n        const {filters, ...searchParams} = uiState\n\n        // Remove the [filter] key we want from the {filters} object provided by\n        // state.ui.productList.filters. To do this, we need to grab the object from\n        // the state and rebuild it after removing the filter.\n        // See: https://stackoverflow.com/questions/34401098/remove-a-property-in-an-object-immutably\n        /* eslint-disable no-unused-vars */\n        const {[filterToRemove]: discardedFilter, ...remainingFilters} = filters\n        const finalFilter = {...searchParams, filters: remainingFilters, start: 0}\n        return urlMapper.getSearchUrl(finalFilter)\n    }\n\n    const paginationProps = {\n        className: 'u-margin-top-lg',\n        onChange: (pageIndex) => {\n            const url = urlMapper.getSearchUrl({\n                ...uiState,\n                start: pageIndex <= pageNumber ? (pageIndex - 1) * count : pageNumber * count,\n                count,\n                total\n            })\n\n            goToURL(url)\n        },\n        currentPage: pageNumber,\n        pageCount,\n        showCurrentPageMessage: false,\n        showPageButtons: true\n    }\n\n    return (\n        <div className=\"t-product-list__container\">\n\n            {(contentsLoaded && isLargeAndWider) &&\n                <aside className=\"t-product-list__sidebar\">\n                    <ProductFilter />\n                </aside>\n            }\n\n            <div className=\"t-product-list__main\">\n                <div className=\"t-product-list__main-header u-padding-bottom-lg\">\n                    {showListActionBar &&\n                        <div className=\"u-flexbox\">\n                            <div className=\"t-product-list__filter\">\n                                {!isLargeAndWider &&\n                                    <Button\n                                        className=\"t-product-list__filter-button pw--tertiary\"\n                                        onClick={openModal}\n                                        id=\"filterButton\"\n                                        data-analytics-name={UI_NAME.showFilters}\n                                        disabled={!hasFilters}\n                                    >\n                                        Filter\n                                    </Button>\n                                }\n                                <div className=\"t-product-list__product-count\">\n                                    {contentsLoaded ? `${total} Items` : `Loading...`}\n                                </div>\n                            </div>\n\n                            <div className=\"t-product-list__sort\">\n                                <Field\n                                    className=\"pw--has-select\"\n                                    idForLabel=\"sort\"\n                                    label={viewportSize === VIEWPORT_SIZE_NAMES.SMALL ? '' : 'Sort by'}\n                                    labelPosition=\"end\"\n                                >\n                                    <select\n                                        className=\"u-color-neutral-60\"\n                                        onChange={(e) => (goToURL(e.target.value))}\n                                        onBlur={(e) => (goToURL(e.target.value))}\n                                        data-analytics-name={UI_NAME.sortBy}\n                                        value={urlMapper.getSearchUrl({\n                                            ...uiState,\n                                            total\n                                        })}\n                                    >\n                                        <option value=\"\">Sort Options</option>\n                                        {sortingOptions.map((choice, index) => {\n                                            const label = viewportSize === VIEWPORT_SIZE_NAMES.SMALL ? `Sort: ${choice.label}` : choice.label\n\n                                            return (\n                                                <option\n                                                    key={index}\n                                                    value={urlMapper.getSearchUrl({\n                                                        ...uiState,\n                                                        sort: choice.id,\n                                                        total\n                                                    })}\n                                                >\n                                                    {label}\n                                                </option>\n                                            )\n                                        }\n                                        )}\n                                    </select>\n                                </Field>\n                            </div>\n                        </div>\n                    }\n\n                    {hasSelectedFilters &&\n                        <div key=\"ruleset\" className=\"u-flexbox\">\n                            {filteredSelectedFilters\n                                .map(({label, query}) => {\n                                    // Gets the key of the query we are trying to remove\n                                    const queryKey = query.slice(0, query.indexOf('='))\n                                    const href = clearFiltersUrl(queryKey)\n                                    return (\n                                        <div className=\"t-product-list__active-filter\" key={query}>\n                                            {label}\n                                            <Button\n                                                className=\"t-product-list__active-filter-cancel\"\n                                                icon=\"close\"\n                                                iconSize=\"medium\"\n                                                href={href}\n                                                data-analytics-name={UI_NAME.clearFilters}\n                                                title=\"Remove\"\n                                            />\n                                        </div>\n                                    )\n                                }\n                            )}\n                        </div>\n                    }\n                </div>\n\n                {/* Product List Content */}\n                {contentsLoaded ?\n                    <Fragment>\n                        {products.length > 0 &&\n                            <div className=\"t-product-list__main-contents\">\n                                <ResultList\n                                    products={products}\n                                    setProductId={setProductId}\n                                />\n\n                                {!isLargeAndWider ?\n                                    <Pagination\n                                        {...paginationProps}\n                                        pagesToShow={5}\n                                    />\n\n                                :\n                                    <Pagination\n                                        {...paginationProps}\n                                        pagesToShow={9}\n                                        pagesToShowAtStart={2}\n                                        pagesToShowAtEnd={2}\n                                    />\n                                }\n                            </div>\n                        }\n\n                        {products.length <= 0 &&\n                            <NoResultsList routeName={routeName} />\n                        }\n                    </Fragment>\n                :\n                    <Skeleton />\n                }\n            </div>\n\n        </div>\n    )\n}\n\nProductListContents.propTypes = {\n    isRunningInAstro: PropTypes.bool,\n    location: PropTypes.object,\n    openModal: PropTypes.func,\n    productSearch: PropTypes.object,\n    routeName: PropTypes.string,\n    setProductId: PropTypes.func,\n    uiState: PropTypes.object,\n    viewportSize: PropTypes.string\n}\n\nconst mapStateToProps = createPropsSelector({\n    productSearch: selectors.getProductSearch,\n    uiState: selectors.getUIState,\n    isRunningInAstro,\n    viewportSize: getviewportSize\n})\n\nconst mapDispatchToProps = {\n    setProductId: receiveCurrentProductId,\n    openModal: () => openModal(PRODUCT_LIST_FILTER_MODAL, UI_NAME.filters)\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductListContents)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport template from '../../template'\nimport {isRunningInAstro} from '../app/selectors'\nimport ProductListHeader from './partials/product-list-header'\nimport SearchResultHeader from './partials/search-result-header'\nimport ProductListContents from './partials/product-list-contents'\nimport {initialize} from './actions'\n\nconst ProductList = ({route: {routeName}, isRunningInAstro}) => {\n    return (\n        <div className=\"t-product-list\">\n            {!isRunningInAstro &&\n                <Fragment>\n                    {routeName === 'searchResultPage' ?\n                        <SearchResultHeader />\n                    :\n                        <ProductListHeader />\n                    }\n                </Fragment>\n            }\n            <ProductListContents routeName={routeName} />\n        </div>\n    )\n}\n\nProductList.propTypes = {\n    isRunningInAstro: PropTypes.bool,\n    // Route object added by react router\n    route: PropTypes.object\n}\n\nconst mapStateToProps = createPropsSelector({\n    isRunningInAstro\n})\n\nProductList.initAction = initialize\n\nexport default template(\n    connect(mapStateToProps)(ProductList)\n)\n"],"sourceRoot":""}