{"version":3,"sources":["webpack:///./app/components/region-field/index.jsx","webpack:///./app/components/country-select/index.jsx","webpack:///./app/containers/checkout-shipping/selectors.js","webpack:///./app/containers/checkout-shipping/partials/shipping-address-fields.jsx","webpack:///./app/containers/checkout-shipping/partials/saved-address.jsx","webpack:///./app/containers/checkout-shipping/partials/form-or-saved-addresses.jsx","webpack:///./app/containers/checkout-shipping/partials/shipping-address.jsx","webpack:///./app/containers/checkout-shipping/partials/shipping-email.jsx","webpack:///./app/containers/checkout-shipping/partials/shipping-method-label.jsx","webpack:///./app/containers/checkout-shipping/partials/shipping-method.jsx","webpack:///./app/containers/checkout-shipping/partials/checkout-shipping-form.jsx","webpack:///./app/containers/checkout-shipping/container.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","redux_form__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","progressive_web_sdk_dist_components_field__WEBPACK_IMPORTED_MODULE_4__","progressive_web_sdk_dist_components_field__WEBPACK_IMPORTED_MODULE_4___default","progressive_web_sdk_dist_analytics_data_objects___WEBPACK_IMPORTED_MODULE_5__","_components_intl_index__WEBPACK_IMPORTED_MODULE_6__","RegionField","_ref","context","className","regions","onBlur","classes","classNames","length","a","createElement","component","Field","name","label","formatMessage","id","customEventHandlers","type","noValidate","data-analytics-name","UI_NAME","region","disabled","value","map","_ref2","key","defaultProps","propTypes","PropTypes","string","arrayOf","shape","func","contextTypes","intl","object","react_redux__WEBPACK_IMPORTED_MODULE_3__","reselect_immutable_helpers__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","progressive_web_sdk_dist_components_field__WEBPACK_IMPORTED_MODULE_6__","progressive_web_sdk_dist_components_field__WEBPACK_IMPORTED_MODULE_6___default","progressive_web_sdk_dist_analytics_data_objects___WEBPACK_IMPORTED_MODULE_7__","_store_checkout_selectors__WEBPACK_IMPORTED_MODULE_8__","_intl_index__WEBPACK_IMPORTED_MODULE_9__","CountrySelect","countries","messageId","country","mapStateToProps","createPropsSelector","getCountries","connect","getCheckoutShipping","createSelector","getUi","checkoutShipping","getIsCompanyOrAptShown","createGetSelector","getIsSignInShown","getIsFetchingShippingMethod","getEmailError","getShowAddNewAddress","CompanyButton","handleShowCompanyAndApt","react_default","button_default","innerClassName","onClick","showMoreAddressFields","icon_default","ShippingAddressFields","fetchShippingMethods","isCompanyOrAptShown","field_row_default","redux_form_min","customerName","caption","shipping_address_fields_CompanyButton","address","placeholder","company","additionalAddressInfo","city","country_select","region_field","postcode","normalize","normalizePhone","phone","bool","country_id","title","getAvailableRegions","SHIPPING_FORM_NAME","mapDispatchToProps","stripEvent","showCompanyAndApt","SavedAddress","props","handleShowAddNewAddress","onSavedShippingAddressChange","countryId","firstname","lastname","regionCode","street","addressLine1","addressLine2","filter","item","join","shippingAddress","SAVED_SHIPPING_ADDRESS_FIELD","onChange","savedAddress","setShowAddNewAddress","FormOrSavedAddresses","isLoggedIn","savedAddresses","showAddNewAddress","u-border-light u-padding-md","saved_address","ADD_NEW_ADDRESS_FIELD","addNewAddress","shipping_address_fields","formTitle","invalid","array","submitting","getIsLoggedIn","getSavedAddresses","ShippingAddress","form_or_saved_addresses","PasswordHint","_","link_default","href","SignInButton","handleShowSignIn","ShippingEmail","submitSignIn","isEmailAvailable","isSignInShown","shipping_email_SignInButton","email","hint","shipping_email_PasswordHint","password","login","customerEmailRecognized","emailError","showSignIn","ShippingMethodLabel","info","cost","isRequired","ShippingMethod","hasShippingMethods","isFetchingShippingMethod","shippingMethods","shipping_method_label","shippingMethod","continueCheckout","inline_loader_default","getShippingMethods","validate","values","arguments","undefined","errors","username","isEmail","validateFullName","validatePostalCode","toUpperCase","forEach","fieldName","CheckoutShippingForm","classCallCheck_default","this","_this","possibleConstructorReturn_default","__proto__","Object","getPrototypeOf","call","onSubmit","bind","_this2","Promise","resolve","reject","keys","ReduxForm","submitShipping","_props","handleSubmit","grid","tablet","span","pre","post","desktop","shipping_email","shipping_address","shipping_method","React","Component","initialValues","getInitialShippingAddress","CheckoutShippingReduxForm","form","keepDirtyOnReinitialize","enableReinitialize","CheckoutShipping","enableNativeAlert","cartURL","pageMeta","page_meta","progress_steps","icon","current","checkout_shipping_form","initAction","initShippingPage","getCartURL","getCheckoutPageMeta","template"],"mappings":"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","file":"checkout-shipping.js","sourcesContent":["/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport * as ReduxForm from 'redux-form'\nimport classNames from 'classnames'\n\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nimport {formatMessage} from '../../components/intl/index'\n\n\n/**\n * A field for selecting/entering a region for an address.\n *\n * When passed a list of regions (e.g. US states, Canadian provinces),\n * this renders a `select` element to choose between these choices.\n *\n * If the list of regions is empty or absent, it instead renders an\n * `input` element for free-form entry of the region name. (this is\n * used in, e.g. the UK)\n */\n\nconst RegionField = ({\n    className,\n    regions,\n    onBlur\n}, context) => {\n    const classes = classNames('c-region-field', className)\n\n    if (regions.length === 0) {\n        return (\n            <ReduxForm.Field\n                className={classes}\n                component={Field}\n                name=\"region\"\n                label={formatMessage(context, {id: 'checkoutShipping.form.label.region'})}\n                customEventHandlers={{onBlur}}\n            >\n                <input type=\"text\" noValidate data-analytics-name={UI_NAME.region} />\n            </ReduxForm.Field>\n        )\n    }\n\n    return (\n        <ReduxForm.Field\n            className={classNames(classes, 'pw--has-select')}\n            component={Field}\n            name=\"regionId\"\n            label={formatMessage(context, {id: 'checkoutShipping.form.label.stateProvince'})}\n            customEventHandlers={{onBlur}}\n        >\n            <select data-analytics-name={UI_NAME.region}>\n                <option disabled value=\"\">\n                    {formatMessage(context, {id: 'checkoutShipping.form.validation.fixStateProvince'})}\n                </option>\n\n                {regions.map(({label, id}) => (\n                    <option value={id} key={`${id}-${label}`}>\n                        {label}\n                    </option>\n                ))}\n            </select>\n        </ReduxForm.Field>\n    )\n}\n\nRegionField.defaultProps = {\n    regions: []\n}\n\nRegionField.propTypes = {\n    /**\n     * Adds values to the `class` attribute of the root element\n     */\n    className: PropTypes.string,\n\n    /**\n     * The regions to be included in the select element.\n     */\n    regions: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.string,\n        id: PropTypes.string\n    })),\n\n    /**\n     * onBlur callback\n     */\n    onBlur: PropTypes.func\n}\n\nRegionField.contextTypes = {\n    intl: PropTypes.object,\n}\n\nexport default RegionField\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport * as ReduxForm from 'redux-form'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport classNames from 'classnames'\n\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nimport {getCountries} from '../../store/checkout/selectors'\n\nimport {FormattedText} from '../intl/index'\n\n\n/**\n * A field for selecting a country.\n */\n\nconst CountrySelect = ({\n    className,\n    countries\n}) => {\n    const classes = classNames('c-country-select', 'pw--has-select', className)\n\n    return (\n        <ReduxForm.Field\n            className={classes}\n            component={Field}\n            name=\"countryId\"\n            label={<FormattedText messageId=\"checkoutShipping.form.label.country\" />}\n        >\n            <select data-analytics-name={UI_NAME.country}>\n                {countries.map(({label, id}) => (\n                    <option value={id} key={id}>\n                        {label}\n                    </option>\n                ))}\n            </select>\n        </ReduxForm.Field>\n    )\n}\n\n\nCountrySelect.defaultProps = {\n    countries: []\n}\n\nCountrySelect.propTypes = {\n    /**\n     * Adds values to the `class` attribute of the root element\n     */\n    className: PropTypes.string,\n\n    /**\n     * A list of the countries to be included\n     */\n    countries: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.string,\n        id: PropTypes.string\n    }))\n}\n\nconst mapStateToProps = createPropsSelector({\n    countries: getCountries\n})\n\nexport default connect(mapStateToProps)(CountrySelect)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport {createSelector} from 'reselect'\nimport {createGetSelector} from 'reselect-immutable-helpers'\nimport {getUi} from '../../store/selectors'\n\nexport const getCheckoutShipping = createSelector(getUi, ({checkoutShipping}) => checkoutShipping)\n\nexport const getIsCompanyOrAptShown = createGetSelector(getCheckoutShipping, 'isCompanyOrAptShown')\n\nexport const getIsSignInShown = createGetSelector(getCheckoutShipping, 'isSignInShown')\n\nexport const getIsFetchingShippingMethod = createGetSelector(getCheckoutShipping, 'isFetchingShippingMethod')\n\nexport const getCustomerEmailRecognized = createGetSelector(getCheckoutShipping, 'customerEmailRecognized')\n\nexport const getEmailError = createGetSelector(getCheckoutShipping, 'emailError')\n\nexport const getShowAddNewAddress = createGetSelector(getCheckoutShipping, 'showAddNewAddress')\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport * as ReduxForm from 'redux-form'\nimport {normalizePhone} from 'progressive-web-sdk/dist/utils/normalize-utils'\nimport {stripEvent} from 'progressive-web-sdk/dist/utils/utils'\n\nimport {showCompanyAndApt, fetchShippingMethods} from '../actions'\nimport {getIsCompanyOrAptShown} from '../selectors'\nimport {SHIPPING_FORM_NAME} from '../../../store/form/constants'\nimport {getAvailableRegions} from '../../../store/checkout/selectors'\n\nimport CountrySelect from '../../../components/country-select'\nimport RegionField from '../../../components/region-field'\nimport {\n    FormattedText,\n    formatMessage\n} from '../../../components/intl/index'\n\nimport Button from 'progressive-web-sdk/dist/components/button'\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\nimport Icon from 'progressive-web-sdk/dist/components/icon'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nconst CompanyButton = ({handleShowCompanyAndApt}) => (\n    <Button\n        className=\"pw--is-anchor\"\n        innerClassName=\"pw--no-min-height u-padding-0\"\n        onClick={handleShowCompanyAndApt}\n        data-analytics-name={UI_NAME.showMoreAddressFields}\n    >\n        <span className=\"u-color-brand u-text-letter-spacing-normal u-text-size-small\">\n            <FormattedText messageId={'checkoutShipping.button.companyAndApartment'} />\n        </span>\n        <Icon name=\"chevron-down\" className=\"u-margin-start-sm u-color-brand\" />\n    </Button>\n)\n\nCompanyButton.propTypes = {\n    handleShowCompanyAndApt: PropTypes.func\n}\n\n\nconst ShippingAddressFields = ({\n    fetchShippingMethods,\n    handleShowCompanyAndApt,\n    isCompanyOrAptShown,\n    regions\n}, context) => {\n    return (\n        <div className=\"t-checkout-shipping__fields u-margin-top-md\">\n            <FieldRow>\n                <ReduxForm.Field\n                    component={Field}\n                    name=\"name\"\n                    label={<FormattedText messageId={'checkoutShipping.form.label.names'} />}\n                    customEventHandlers={{onBlur: fetchShippingMethods}}\n                >\n                    <input type=\"text\" noValidate data-analytics-name={UI_NAME.customerName} />\n                </ReduxForm.Field>\n            </FieldRow>\n\n            <FieldRow>\n                <ReduxForm.Field\n                    component={Field}\n                    name=\"addressLine1\"\n                    label={<FormattedText messageId={'checkoutShipping.form.label.address'} />}\n                    caption={!isCompanyOrAptShown && <CompanyButton handleShowCompanyAndApt={handleShowCompanyAndApt} />}\n                    customEventHandlers={{onBlur: fetchShippingMethods}}\n                >\n                    <input type=\"text\" noValidate data-analytics-name={UI_NAME.address} />\n                </ReduxForm.Field>\n            </FieldRow>\n\n            {isCompanyOrAptShown &&\n                <FieldRow>\n                    <ReduxForm.Field\n                        component={Field}\n                        name=\"company\"\n                        label={<FormattedText messageId={'checkoutShipping.form.label.company'} />}\n                    >\n                        <input\n                            type=\"text\"\n                            noValidate\n                            placeholder={formatMessage(context, {id: 'checkoutShipping.form.optional'})}\n                            data-analytics-name={UI_NAME.company}\n                        />\n                    </ReduxForm.Field>\n\n                    <ReduxForm.Field\n                        component={Field}\n                        name=\"addressLine2\"\n                        label={<FormattedText messageId={'checkoutShipping.form.label.apartment'} />}\n                    >\n                        <input\n                            type=\"text\"\n                            noValidate\n                            placeholder={formatMessage(context, {id: 'checkoutShipping.form.optional'})}\n                            data-analytics-name={UI_NAME.additionalAddressInfo}\n                        />\n                    </ReduxForm.Field>\n                </FieldRow>\n            }\n\n            <FieldRow>\n                <ReduxForm.Field\n                    component={Field}\n                    name=\"city\"\n                    label={<FormattedText messageId={'checkoutShipping.form.label.city'} />}\n                    customEventHandlers={{onBlur: fetchShippingMethods}}\n                >\n                    <input type=\"text\" noValidate data-analytics-name={UI_NAME.city} />\n                </ReduxForm.Field>\n            </FieldRow>\n\n            <FieldRow>\n                <CountrySelect />\n            </FieldRow>\n\n            <FieldRow>\n                <RegionField regions={regions} onBlur={fetchShippingMethods} />\n            </FieldRow>\n\n            <FieldRow>\n                <ReduxForm.Field\n                    component={Field}\n                    name=\"postcode\"\n                    label={<FormattedText messageId={'checkoutShipping.form.label.postalCode'} />}\n                    customEventHandlers={{onBlur: fetchShippingMethods}}\n                >\n                    <input type=\"text\" noValidate data-analytics-name={UI_NAME.postcode} />\n                </ReduxForm.Field>\n            </FieldRow>\n\n            <FieldRow>\n                <ReduxForm.Field\n                    component={Field}\n                    name=\"telephone\"\n                    label={<FormattedText messageId={'checkoutShipping.form.label.phone'} />}\n                    caption={<FormattedText messageId={'checkoutShipping.form.caption.contact'} />}\n                    normalize={normalizePhone}\n                    customEventHandlers={{onBlur: fetchShippingMethods}}\n                >\n                    <input type=\"tel\" noValidate data-analytics-name={UI_NAME.phone} />\n                </ReduxForm.Field>\n            </FieldRow>\n        </div>\n    )\n}\n\nShippingAddressFields.propTypes = {\n    /**\n    * Fetches the available shipping methods from the back end\n    */\n    fetchShippingMethods: PropTypes.func,\n\n    /**\n     * Shows the \"Company\" and \"Apt #\" fields\n     */\n    handleShowCompanyAndApt: PropTypes.func,\n\n    /**\n     * Whether the \"Company\" and \"Apt #\" fields display\n     */\n    isCompanyOrAptShown: PropTypes.bool,\n\n    /**\n    * Regions available to ship to\n    */\n    regions: PropTypes.arrayOf(PropTypes.shape({\n        country_id: PropTypes.string,\n        label: PropTypes.string,\n        title: PropTypes.string,\n        value: PropTypes.string\n    }))\n}\n\nShippingAddressFields.contextTypes = {\n    intl: PropTypes.object\n}\n\nconst mapStateToProps = createPropsSelector({\n    isCompanyOrAptShown: getIsCompanyOrAptShown,\n    regions: getAvailableRegions(SHIPPING_FORM_NAME),\n})\n\nconst mapDispatchToProps = {\n    handleShowCompanyAndApt: stripEvent(showCompanyAndApt),\n    fetchShippingMethods\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ShippingAddressFields)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2017 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport * as ReduxForm from 'redux-form'\n\nimport {setShowAddNewAddress, onSavedShippingAddressChange} from '../actions'\nimport {SAVED_SHIPPING_ADDRESS_FIELD} from '../constants'\n\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nconst SavedAddress = (props) => {\n    const {\n        address,\n        handleShowAddNewAddress,\n        onSavedShippingAddressChange\n    } = props\n\n    const {\n        city,\n        countryId,\n        firstname,\n        id,\n        lastname,\n        postcode,\n        regionCode,\n        addressLine1,\n        addressLine2\n    } = address\n\n    const street = [addressLine1, addressLine2].filter((item) => item).join(', ')\n    const shippingAddress = (\n        <div className=\"u-color-neutral-40\">\n            <p className=\"u-margin-bottom-sm\">\n                {city}, {regionCode}, {countryId}, {postcode}\n            </p>\n            <p>{firstname} {lastname}</p>\n        </div>\n    )\n\n    return (\n        <FieldRow key={id}>\n            <ReduxForm.Field\n                component={Field}\n                name={SAVED_SHIPPING_ADDRESS_FIELD}\n                label={\n                    <strong className=\"u-text-weight-semi-bold\">{street}</strong>\n                }\n                caption={shippingAddress}\n                type=\"radio\"\n                value={id}\n                customEventHandlers={{\n                    onChange: () => {\n                        handleShowAddNewAddress(false)\n                        onSavedShippingAddressChange(id, address)\n                    }\n                }}\n            >\n                <input\n                    type=\"radio\"\n                    noValidate\n                    value={id}\n                    data-analytics-name={UI_NAME.savedAddress}\n                />\n            </ReduxForm.Field>\n        </FieldRow>\n    )\n}\n\nSavedAddress.propTypes = {\n    address: PropTypes.object,\n    handleShowAddNewAddress: PropTypes.func,\n    onSavedShippingAddressChange: PropTypes.func\n}\n\nconst mapDispatchToProps = {\n    handleShowAddNewAddress: setShowAddNewAddress,\n    onSavedShippingAddressChange\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(SavedAddress)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2017 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport * as ReduxForm from 'redux-form'\nimport classNames from 'classnames'\n\nimport {setShowAddNewAddress, onSavedShippingAddressChange} from '../actions'\nimport {ADD_NEW_ADDRESS_FIELD, SAVED_SHIPPING_ADDRESS_FIELD} from '../constants'\nimport {getIsLoggedIn, getSavedAddresses} from 'progressive-web-sdk/dist/store/user/selectors'\nimport {getShowAddNewAddress} from '../selectors'\n\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\nimport ShippingAddressFields from './shipping-address-fields'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nimport SavedAddress from './saved-address'\n\nimport {FormattedText} from '../../../components/intl/index'\n\nconst FormOrSavedAddresses = ({\n    isLoggedIn,\n    savedAddresses,\n    showAddNewAddress,\n    handleShowAddNewAddress,\n    onSavedShippingAddressChange\n}) => {\n    if (isLoggedIn && !!savedAddresses.length) {\n        const classes = classNames('t-checkout-payment__add-new-address', {\n            'u-border-light u-padding-md': showAddNewAddress\n        })\n\n        return [\n            savedAddresses.map((address) => <SavedAddress key={address.id} address={address} />),\n            <FieldRow key={ADD_NEW_ADDRESS_FIELD} className={classes}>\n                <div className=\"u-flex\">\n                    <ReduxForm.Field\n                        component={Field}\n                        name={SAVED_SHIPPING_ADDRESS_FIELD}\n                        label={\n                            <strong className=\"u-text-weight-semi-bold\">\n                                <FormattedText messageId=\"checkoutShipping.form.addNewAddress\" />\n                            </strong>\n                        }\n                        type=\"radio\"\n                        value={ADD_NEW_ADDRESS_FIELD}\n                        customEventHandlers={{\n                            onChange: () => {\n                                handleShowAddNewAddress(true)\n\n                                // Reset checkout shippingAddress and defaultShippingAddressId\n                                onSavedShippingAddressChange()\n                            }\n                        }}\n                    >\n                        <input\n                            type=\"radio\"\n                            noValidate\n                            value={ADD_NEW_ADDRESS_FIELD}\n                            data-analytics-name={UI_NAME.addNewAddress}\n                        />\n                    </ReduxForm.Field>\n\n                    {showAddNewAddress &&\n                        <div className=\"t-checkout-payment__add-new-address-form\">\n                            <ShippingAddressFields />\n                        </div>\n                    }\n                </div>\n            </FieldRow>\n        ]\n    } else {\n        return <ShippingAddressFields />\n    }\n}\n\nFormOrSavedAddresses.propTypes = {\n    /**\n     * Whether the form is disabled or not\n     */\n    disabled: PropTypes.bool,\n\n    /**\n    * The title for the form\n    */\n    formTitle: PropTypes.string,\n\n    /**\n     * Handles whether or not to show the \"Add New Address\" form fields\n     */\n    handleShowAddNewAddress: PropTypes.func,\n\n    /**\n    * (Internal) added by redux form\n    */\n    invalid: PropTypes.bool,\n\n    /**\n     * Whether the user is logged in or not\n     */\n    isLoggedIn: PropTypes.bool,\n\n    /**\n    * Saved addresses from the user's account\n    */\n    savedAddresses: PropTypes.array,\n\n    /**\n    * Whether or not to show the \"Add New Addres\" form fields\n    */\n    showAddNewAddress: PropTypes.bool,\n\n    /**\n    * (Internal) Added by redux form\n    */\n    submitting: PropTypes.bool,\n\n    /**\n     * Fetch shipping methods on saved address selection change\n     */\n    onSavedShippingAddressChange: PropTypes.func,\n}\n\nconst mapStateToProps = createPropsSelector({\n    isLoggedIn: getIsLoggedIn,\n    savedAddresses: getSavedAddresses,\n    showAddNewAddress: getShowAddNewAddress\n})\n\nconst mapDispatchToProps = {\n    handleShowAddNewAddress: setShowAddNewAddress,\n    onSavedShippingAddressChange\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormOrSavedAddresses)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\n\nimport FormOrSavedAddresses from './form-or-saved-addresses'\n\nimport {FormattedText} from '../../../components/intl/index'\n\nconst ShippingAddress = () => (\n    <div className=\"t-checkout-shipping__shipping-address\">\n        <div className=\"t-checkout-shipping__title u-padding-top-lg u-padding-bottom-md\">\n            <h2 className=\"u-h4 u-text-uppercase\">\n                <FormattedText messageId=\"checkoutShipping.heading.shippingAddress\" />\n            </h2>\n        </div>\n\n        <div className=\"u-padding-md u-border-light-top u-border-light-bottom u-bg-color-neutral-00\">\n            <FormOrSavedAddresses />\n        </div>\n    </div>\n)\n\nexport default ShippingAddress\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport * as ReduxForm from 'redux-form'\nimport {stripEvent} from 'progressive-web-sdk/dist/utils/utils'\n\nimport {isEmailAvailable, submitSignIn, showSignIn} from '../actions'\nimport {getEmailError, getIsSignInShown} from '../selectors'\nimport {formatMessage} from '../../../components/intl/index'\n\nimport Button from 'progressive-web-sdk/dist/components/button'\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\nimport Icon from 'progressive-web-sdk/dist/components/icon'\nimport Link from 'progressive-web-sdk/dist/components/link'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nconst PasswordHint = (_, context) => (\n    <Link className=\"u-color-brand\" href=\"/customer/account/forgotpassword/\">\n        {formatMessage(context, {id: 'checkoutShipping.button.forgotPassword'})}\n    </Link>\n)\n\nconst SignInButton = ({handleShowSignIn}, context) => (\n    <Button\n        className=\"pw--is-anchor\"\n        innerClassName=\"pw--no-min-height u-padding-0\"\n        onClick={handleShowSignIn}\n        data-analytics-name={UI_NAME.showMoreAddressFields}\n    >\n        <span className=\"u-color-brand u-text-letter-spacing-normal u-text-size-small\">\n            {formatMessage(context, {id: 'checkoutShipping.button.haveAnAccount'})}\n        </span>\n        <Icon name=\"chevron-down\" className=\"u-margin-start-sm u-color-brand\" />\n    </Button>\n)\n\nSignInButton.propTypes = {\n    handleShowSignIn: PropTypes.func\n}\n\n\nconst ShippingEmail = ({\n    handleShowSignIn,\n    submitSignIn,\n    isEmailAvailable,\n    isSignInShown\n}, context) => {\n\n    return (\n        <div>\n            <div className=\"t-checkout-shipping__email-title\" />\n\n            <div className=\"u-padding-md u-border-light-top u-border-light-bottom u-bg-color-neutral-00\">\n                <FieldRow>\n                    <ReduxForm.Field\n                        component={Field}\n                        className=\"pw--overlayed-hint qa-checkout__show-sign-in\"\n                        name=\"username\"\n                        label={formatMessage(context, {id: 'checkoutShipping.form.label.email'})}\n                        caption={!isSignInShown && <SignInButton handleShowSignIn={handleShowSignIn} />}\n                        customEventHandlers={{\n                            onBlur: isEmailAvailable\n                        }}\n                    >\n                        <input\n                            type=\"email\"\n                            noValidate\n                            placeholder={formatMessage(context, {id: 'checkoutShipping.form.email'})}\n                            data-analytics-name={UI_NAME.email}\n                        />\n                    </ReduxForm.Field>\n                </FieldRow>\n\n                {isSignInShown &&\n                    <FieldRow>\n                        <ReduxForm.Field\n                            component={Field}\n                            name=\"password\"\n                            label={formatMessage(context, {id: 'checkoutShipping.form.label.password'})}\n                            hint={<PasswordHint />}\n                        >\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                noValidate\n                                data-analytics-name={UI_NAME.password}\n                            />\n                        </ReduxForm.Field>\n                    </FieldRow>\n                }\n\n                {isSignInShown &&\n                    <FieldRow>\n                        <Button\n                            className=\"pw--secondary u-width-full u-text-uppercase qa-checkout__sign-in\"\n                            onClick={submitSignIn}\n                            data-analytics-name={UI_NAME.login}\n                        >\n                            <Icon name=\"user\" className=\"u-margin-end\" />\n                            {formatMessage(context, {id: 'login.link.signIn'})}\n                        </Button>\n                    </FieldRow>\n                }\n            </div>\n        </div>\n    )\n}\n\nShippingEmail.propTypes = {\n    /**\n    * True if the users email address has an account associated with it\n    */\n    customerEmailRecognized: PropTypes.bool,\n    /**\n     * Shows the sign in password field and button\n     */\n    handleShowSignIn: PropTypes.func,\n    /**\n    * Checks if the users email address has an account associated with it\n    */\n    isEmailAvailable: PropTypes.func,\n    /**\n    * Flag of whether in-line sign in fields and button are shown\n    */\n    isSignInShown: PropTypes.bool,\n    /**\n    * Submits the sign in form data\n    */\n    submitSignIn: PropTypes.func\n}\n\nShippingEmail.contextTypes = {\n    intl: PropTypes.object\n}\nSignInButton.contextTypes = ShippingEmail.contextTypes\nPasswordHint.contextTypes = ShippingEmail.contextTypes\n\nconst mapStateToProps = createPropsSelector({\n    emailError: getEmailError,\n    isSignInShown: getIsSignInShown,\n})\n\nconst mapDispatchToProps = {\n    handleShowSignIn: stripEvent(showSignIn),\n    submitSignIn,\n    isEmailAvailable\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingEmail)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {FormattedPrice} from '../../../components/intl/index'\n\nconst ShippingMethodLabel = ({label, info, cost}) => {\n    return (\n        <div className=\"u-flexbox\">\n            <div className=\"u-flex\">\n                <div>{label}</div>\n                <div className=\"u-text-quiet u-text-weight-regular u-margin-top-sm\">{info}</div>\n            </div>\n            <div className=\"u-flex-none\">\n                <FormattedPrice value={cost} />\n            </div>\n        </div>\n    )\n}\n\nShippingMethodLabel.propTypes = {\n    /**\n    * The cost of the shipping method\n    */\n    cost: PropTypes.string.isRequired,\n    /**\n    * The info for the shipping method\n    */\n    info: PropTypes.string,\n    /**\n    * The label for the shipping method\n    */\n    label: PropTypes.string\n}\n\n\nexport default ShippingMethodLabel\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport * as ReduxForm from 'redux-form'\n\nimport {getShippingMethods, hasShippingMethods} from '../../../store/checkout/selectors'\nimport {getIsFetchingShippingMethod} from '../selectors'\n\nimport Button from 'progressive-web-sdk/dist/components/button'\nimport Field from 'progressive-web-sdk/dist/components/field'\nimport FieldRow from 'progressive-web-sdk/dist/components/field-row'\nimport ShippingMethodLabel from './shipping-method-label'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\nimport InlineLoader from 'progressive-web-sdk/dist/components/inline-loader'\n\nimport {FormattedText} from '../../../components/intl/index'\n\nconst ShippingMethod = ({hasShippingMethods, isFetchingShippingMethod, shippingMethods}) => {\n    return (\n        <div className=\"t-checkout-shipping__shipping-method\">\n            <div className=\"t-checkout-shipping__title u-padding-top-lg u-padding-bottom-md\">\n                <h2 className=\"u-h4 u-text-uppercase\">\n                    <FormattedText messageId=\"checkoutShipping.heading.shippingMethod\" />\n                </h2>\n            </div>\n\n            <div className=\"u-padding-md u-border-light-top u-border-light-bottom u-bg-color-neutral-00\">\n                {hasShippingMethods ?\n                    shippingMethods.map(({label, info, cost, id}) => (\n                        <FieldRow key={id}>\n                            <ReduxForm.Field\n                                component={Field}\n                                name=\"shippingMethodId\"\n                                type=\"radio\"\n                                value={id}\n                                label={<ShippingMethodLabel label={label} info={info} cost={cost} />}\n                            >\n                                <input type=\"radio\" noValidate data-analytics-name={UI_NAME.shippingMethod} />\n                            </ReduxForm.Field>\n                        </FieldRow>\n                    ))\n                :\n                    <div>\n                        <FormattedText messageId=\"checkoutShipping.form.shippingMessage\" />\n                    </div>\n                }\n\n                <FieldRow className=\"u-margin-top-lg\">\n                    <Button\n                        type=\"submit\"\n                        disabled={!hasShippingMethods || isFetchingShippingMethod}\n                        className=\"pw--primary u-width-full u-text-uppercase qa-checkout__continue-to-payment\"\n                        data-analytics-name={UI_NAME.continueCheckout}\n                    >\n                        {isFetchingShippingMethod ?\n                            <InlineLoader />\n                        :\n                            <FormattedText messageId=\"checkoutShipping.button.continueToPayment\" />\n                        }\n                    </Button>\n                </FieldRow>\n            </div>\n        </div>\n    )\n}\n\nShippingMethod.defaultProps = {\n    shippingMethods: []\n}\n\nShippingMethod.propTypes = {\n    /**\n    * The flag of whether shipping methods have been fetched\n    */\n    hasShippingMethods: PropTypes.bool,\n\n    /**\n    * Whether shipping method is being fetched\n    */\n    isFetchingShippingMethod: PropTypes.bool,\n\n    /**\n    * The available shipping methods for the order\n    */\n    shippingMethods: PropTypes.arrayOf(PropTypes.shape({\n        cost: PropTypes.string,\n        info: PropTypes.string,\n        label: PropTypes.string,\n        id: PropTypes.string\n    }))\n}\n\nconst mapStateToProps = createPropsSelector({\n    hasShippingMethods,\n    isFetchingShippingMethod: getIsFetchingShippingMethod,\n    shippingMethods: getShippingMethods\n})\n\n\nexport default connect(\n    mapStateToProps\n)(ShippingMethod)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport * as ReduxForm from 'redux-form'\nimport isEmail from 'validator/lib/isEmail'\n\nimport {validateFullName, validatePostalCode} from 'progressive-web-sdk/dist/utils/validation'\nimport {getIsLoggedIn} from 'progressive-web-sdk/dist/store/user/selectors'\nimport {getInitialShippingAddress} from '../../../store/checkout/shipping/selectors'\nimport {formatMessage} from '../../../components/intl/index'\n\nimport {submitShipping} from '../actions'\nimport {SHIPPING_FORM_NAME} from '../../../store/form/constants'\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\n\nimport {Grid, GridSpan} from 'progressive-web-sdk/dist/components/grid'\nimport ShippingAddress from './shipping-address'\nimport ShippingEmail from './shipping-email'\nimport ShippingMethod from './shipping-method'\n\nconst validate = (values, props, context = {}) => {\n    const errors = {}\n    const requiredFieldNames = [\n        'name',\n        'addressLine1',\n        'city',\n        'countryId',\n        'postcode',\n        'telephone'\n    ]\n    const isSavedAddressSelected = !!values.savedAddress\n\n    if (isSavedAddressSelected) {\n        // If user has chosen a saved address, no further validation necessary\n        return errors\n    }\n\n    if (values.username && !isEmail(values.username)) {\n        errors.username = context.intl && formatMessage(context, {id: 'checkoutShipping.form.validation.fixEmail'})\n    }\n\n    if (values.name && !validateFullName(values.name)) {\n        errors.name = context.intl && formatMessage(context, {id: 'checkoutShipping.form.validation.fixNames'})\n    }\n\n    if (!props.isLoggedIn && !values.username) {\n        errors.username = context.intl && formatMessage(context, {id: 'checkoutShipping.form.required'})\n    }\n\n    if (values.countryId && values.postcode && !validatePostalCode(values.postcode, values.countryId.toUpperCase())) {\n        errors.postcode = context.intl && formatMessage(context, {id: 'checkoutShipping.form.validation.fixPostalCode'})\n    }\n\n    requiredFieldNames.forEach((fieldName) => {\n        if (!values[fieldName]) {\n            errors[fieldName] = context.intl && formatMessage(context, {id: 'checkoutShipping.form.required'})\n        }\n    })\n\n    return errors\n}\n\nclass CheckoutShippingForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onSubmit(values) {\n        return new Promise((resolve, reject) => {\n            const errors = validate(values, this.props, this.context)\n            if (!Object.keys(errors).length) {\n                return this.props.submitShipping()\n            }\n            return reject(new ReduxForm.SubmissionError(errors))\n        })\n    }\n\n    render() {\n        const {\n            handleSubmit,\n            isLoggedIn\n        } = this.props\n\n        return (\n            <form id={SHIPPING_FORM_NAME} data-analytics-name={UI_NAME.shippingAddress} className=\"t-checkout-shipping__form\" onSubmit={handleSubmit(this.onSubmit)} noValidate>\n                <Grid className=\"u-center-piece\">\n                    <GridSpan tablet={{span: 6, pre: 1, post: 1}} desktop={{span: 7}}>\n                        {!isLoggedIn && <ShippingEmail />}\n                        <ShippingAddress />\n                    </GridSpan>\n\n                    <GridSpan tablet={{span: 6, pre: 1, post: 1}} desktop={{span: 5}}>\n                        <ShippingMethod />\n                    </GridSpan>\n                </Grid>\n            </form>\n        )\n    }\n}\n\nCheckoutShippingForm.propTypes = {\n    /**\n     * Whether the form is disabled or not\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Redux-form internal\n     */\n    handleSubmit: PropTypes.func,\n    /**\n    * Is the user logged in or not\n    */\n    isLoggedIn: PropTypes.bool,\n    /**\n    * Submits the shipping form information to the server\n    */\n    submitShipping: PropTypes.func\n}\n\nCheckoutShippingForm.contextTypes = {\n    intl: PropTypes.object\n}\n\nconst mapStateToProps = createPropsSelector({\n    initialValues: getInitialShippingAddress,\n    isLoggedIn: getIsLoggedIn\n})\n\nconst mapDispatchToProps = {\n    submitShipping\n}\n\n\nconst CheckoutShippingReduxForm = ReduxForm.reduxForm({\n    form: SHIPPING_FORM_NAME,\n    validate,\n    keepDirtyOnReinitialize: true,\n    enableReinitialize: true\n})(CheckoutShippingForm)\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CheckoutShippingReduxForm)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport {initShippingPage, enableNativeAlert} from './actions'\nimport {getCartURL} from '../app/selectors'\nimport {formatMessage} from '../../components/intl/index'\n\nimport template from '../../template'\nimport PageMeta from '../../components/page-meta'\nimport CheckoutShippingReduxForm from './partials/checkout-shipping-form'\n\nimport {ProgressSteps, ProgressStepsItem} from 'progressive-web-sdk/dist/components/progress-steps'\nimport {getCheckoutPageMeta} from 'progressive-web-sdk/dist/store/checkout/selectors'\n\nclass CheckoutShipping extends React.Component {\n    componentDidMount() {\n        this.props.enableNativeAlert()\n    }\n\n    render() {\n        const {cartURL, pageMeta} = this.props\n        const context = this.context\n\n        return (\n            <div className=\"t-checkout-shipping u-bg-color-neutral-10 t--loaded\">\n                <PageMeta {...pageMeta} />\n\n                <div className=\"u-bg-color-neutral-00 u-border-light-bottom\">\n                    <div className=\"t-checkout-shipping__progress\">\n                        <ProgressSteps>\n                            <ProgressStepsItem\n                                icon=\"cart-full\"\n                                title={formatMessage(context, {id: 'checkoutShipping.progress.cart'})}\n                                href={cartURL}\n                            />\n\n                            <ProgressStepsItem\n                                icon=\"shipping\"\n                                title={formatMessage(context, {id: 'checkoutShipping.progress.shipping'})}\n                                current\n                            />\n\n                            <ProgressStepsItem\n                                icon=\"payment-full\"\n                                title={formatMessage(context, {id: 'checkoutShipping.progress.payment'})}\n                            />\n\n                            <ProgressStepsItem\n                                icon=\"done\"\n                                title={formatMessage(context, {id: 'checkoutShipping.progress.done'})}\n                            />\n                        </ProgressSteps>\n                    </div>\n                </div>\n\n                <CheckoutShippingReduxForm />\n            </div>\n        )\n    }\n}\n\nCheckoutShipping.propTypes = {\n    /**\n    * The relative URL for the cart page\n    */\n    cartURL: PropTypes.string,\n    enableNativeAlert: PropTypes.func,\n    pageMeta: PropTypes.object,\n}\n\nCheckoutShipping.contextTypes = {\n    intl: PropTypes.object,\n}\n\nCheckoutShipping.initAction = initShippingPage\n\nconst mapStateToProps = createPropsSelector({\n    cartURL: getCartURL,\n    pageMeta: getCheckoutPageMeta\n})\n\nconst mapDispatchToProps = {\n    enableNativeAlert\n}\n\nexport default template(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CheckoutShipping))\n"],"sourceRoot":""}