{"version":3,"sources":["webpack:///./node_modules/progressive-web-sdk/dist/components/breadcrumbs/index.js","webpack:///./app/containers/account-address/selectors.js","webpack:///./app/components/address-block/index.jsx","webpack:///./app/containers/account-address/container.jsx"],"names":["Object","defineProperty","exports","value","_extends3","_interopRequireDefault","__webpack_require__","_react2","_propTypes2","_classnames2","_link2","obj","__esModule","default","Breadcrumbs","_ref","className","items","youAreHereMessage","includeMicroData","length","breadcrumbListMicroData","listMicroData","thingMicroData","itemScope","itemType","itemProp","createElement","role","id","text","aria-labelledby","map","_ref2","index","href","onClick","itemContent","content","key","defaultProps","propTypes","arrayOf","shape","oneOfType","string","node","required","func","isRequired","bool","d","__webpack_exports__","getAddressID","getAddressPageMeta","getIsEditing","getAddressFromId","getIsDefaultAddressFromId","reselect__WEBPACK_IMPORTED_MODULE_0__","reselect_immutable_helpers__WEBPACK_IMPORTED_MODULE_1__","immutable__WEBPACK_IMPORTED_MODULE_2__","immutable__WEBPACK_IMPORTED_MODULE_2___default","n","_store_selectors__WEBPACK_IMPORTED_MODULE_3__","progressive_web_sdk_dist_store_user_selectors__WEBPACK_IMPORTED_MODULE_4__","getAccountAddress","createSelector","getUi","accountAddress","createGetSelector","Immutable","Map","getSavedAddresses","addressId","addresses","address","find","get","set","getDefaultAddress","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","progressive_web_sdk_dist_components_skeleton_text__WEBPACK_IMPORTED_MODULE_3__","progressive_web_sdk_dist_components_skeleton_text__WEBPACK_IMPORTED_MODULE_3___default","AddressBlock","firstname","lastname","addressLine1","addressLine2","city","countryId","country","postcode","telephone","region","classes","classNames","a","width","style","lineHeight","display","PropTypes","r","react_redux__WEBPACK_IMPORTED_MODULE_2__","reselect_immutable_helpers__WEBPACK_IMPORTED_MODULE_3__","mobify_integration_manager_dist___WEBPACK_IMPORTED_MODULE_4__","mobify_integration_manager_dist___WEBPACK_IMPORTED_MODULE_4___default","_template__WEBPACK_IMPORTED_MODULE_5__","_components_address_block__WEBPACK_IMPORTED_MODULE_6__","_components_card__WEBPACK_IMPORTED_MODULE_7__","_components_page_meta__WEBPACK_IMPORTED_MODULE_8__","progressive_web_sdk_dist_components_breadcrumbs__WEBPACK_IMPORTED_MODULE_9__","progressive_web_sdk_dist_components_breadcrumbs__WEBPACK_IMPORTED_MODULE_9___default","progressive_web_sdk_dist_components_button__WEBPACK_IMPORTED_MODULE_10__","progressive_web_sdk_dist_components_button__WEBPACK_IMPORTED_MODULE_10___default","progressive_web_sdk_dist_components_icon__WEBPACK_IMPORTED_MODULE_11__","progressive_web_sdk_dist_components_icon__WEBPACK_IMPORTED_MODULE_11___default","progressive_web_sdk_dist_analytics_data_objects___WEBPACK_IMPORTED_MODULE_12__","progressive_web_sdk_dist_store_user_selectors__WEBPACK_IMPORTED_MODULE_13__","_actions__WEBPACK_IMPORTED_MODULE_14__","_selectors__WEBPACK_IMPORTED_MODULE_15__","_app_selectors__WEBPACK_IMPORTED_MODULE_16__","_modals_actions__WEBPACK_IMPORTED_MODULE_17__","_modals_constants__WEBPACK_IMPORTED_MODULE_18__","NoAddress","dashboardURL","openAddressModal","name","size","data-analytics-name","UI_NAME","addNewAddress","AccountAddress","defaultAddress","openRemoveAddressModal","pageMeta","setIsEditing","setAddressID","hasBorder","header","children","footer","type","title","icon","showIconText","iconClassName","editSavedAddress","idx","removeSavedAddress","array","object","isEditting","initAction","initialize","mapStateToProps","createPropsSelector","getAddresses","getAccountURL","mapDispatchToProps","openModal","ACCOUNT_ADDRESS_MODAL","ACCOUNT_REMOVE_ADDRESS_MODAL","removeAddress","IntegrationManager","account","deleteAddress","template","connect"],"mappings":"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","file":"account-address.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _link = require('../link');\n\nvar _link2 = _interopRequireDefault(_link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * `Breadcrumbs` is used to provide users a navigational path they took to get to the current page.\n *\n * @example ./DESIGN.md\n */\n\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nvar Breadcrumbs = function Breadcrumbs(_ref) {\n    var className = _ref.className,\n        items = _ref.items,\n        youAreHereMessage = _ref.youAreHereMessage,\n        includeMicroData = _ref.includeMicroData;\n\n    if (!items.length) {\n        return false;\n    }\n\n    var breadcrumbListMicroData = {};\n    var listMicroData = {};\n    var thingMicroData = {};\n\n    if (includeMicroData) {\n        breadcrumbListMicroData = {\n            itemScope: true,\n            itemType: 'http://schema.org/BreadcrumbList'\n        };\n        listMicroData = {\n            itemProp: 'itemListElement',\n            itemScope: true,\n            itemType: 'http://schema.org/ListItem'\n        };\n        thingMicroData = {\n            itemScope: true,\n            itemProp: 'item',\n            itemType: 'http://schema.org/Thing'\n        };\n    }\n\n    return _react2.default.createElement(\n        'nav',\n        { role: 'navigation', className: (0, _classnames2.default)('pw-breadcrumbs', className) },\n        _react2.default.createElement(\n            'p',\n            { id: 'breadcrumb__label', className: 'pw-breadcrumbs__label u-visually-hidden' },\n            youAreHereMessage,\n            ': ',\n            items[items.length - 1].text\n        ),\n        _react2.default.createElement(\n            'ol',\n            (0, _extends3.default)({ 'aria-labelledby': 'breadcrumb__label', className: 'pw-breadcrumbs__list' }, breadcrumbListMicroData),\n            items.map(function (_ref2, index) {\n                var href = _ref2.href,\n                    text = _ref2.text,\n                    onClick = _ref2.onClick;\n\n                var itemContent = includeMicroData ? _react2.default.createElement(\n                    'span',\n                    { itemProp: 'name' },\n                    text,\n                    href && _react2.default.createElement('meta', { itemProp: 'url', content: href })\n                ) : text;\n                return _react2.default.createElement(\n                    'li',\n                    (0, _extends3.default)({ className: 'pw-breadcrumbs__item', key: index }, listMicroData),\n                    href || onClick ? _react2.default.createElement(\n                        _link2.default,\n                        (0, _extends3.default)({\n                            href: href,\n                            className: 'pw-breadcrumbs__link',\n                            onClick: onClick\n                        }, thingMicroData),\n                        itemContent\n                    ) : _react2.default.createElement(\n                        'span',\n                        (0, _extends3.default)({\n                            className: 'pw-breadcrumbs__non-link'\n                        }, thingMicroData),\n                        itemContent\n                    ),\n                    includeMicroData && _react2.default.createElement('meta', { itemProp: 'position', content: index + 1 })\n                );\n            })\n        )\n    );\n};\n\nBreadcrumbs.defaultProps = {\n    items: [],\n    youAreHereMessage: 'You are here'\n};\n\nBreadcrumbs.propTypes = {\n    /**\n     * The list of breadcrumbs.\n     * Each breadcrumb item should be an object (More info on items prop below).\n     */\n    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n        text: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]).required,\n        href: _propTypes2.default.string,\n        onClick: _propTypes2.default.func\n    })).isRequired,\n\n    /**\n     * Adds values to the `class` attribute of the root element.\n     */\n    className: _propTypes2.default.string,\n\n    /**\n     * Indicates if SEO microdata should be included in the breadcrumb element\n     * https://developers.google.com/search/docs/data-types/breadcrumbs\n     * https://www.w3.org/TR/microdata/\n     */\n    includeMicroData: _propTypes2.default.bool,\n\n    /**\n     * This component has a visually hidden label to make it more accessible to screen readers.\n     * You can change this property to change the label's content.\n     */\n    youAreHereMessage: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node])\n};\n\nexports.default = Breadcrumbs;","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport {createSelector} from 'reselect'\nimport {createGetSelector} from 'reselect-immutable-helpers'\nimport Immutable from 'immutable'\n\nimport {getUi} from '../../store/selectors'\n\nimport {\n    getSavedAddresses,\n    getDefaultAddress\n} from 'progressive-web-sdk/dist/store/user/selectors'\n\n\nexport const getAccountAddress = createSelector(\n    getUi,\n    ({accountAddress}) => accountAddress\n)\n\nexport const getAddressID = createGetSelector(getAccountAddress, 'addressID')\n\nexport const getAddressPageMeta = createGetSelector(getAccountAddress, 'pageMeta', Immutable.Map())\n\nexport const getIsEditing = createGetSelector(getAccountAddress, 'isEdit')\n\nexport const getAddressFromId = createSelector(\n    getAddressID,\n    getSavedAddresses,\n    (addressId, addresses) => {\n        const address = addresses.find((address) => address.get('id') === addressId)\n\n        return address ? address\n            .set('name', address.get('fullname') || `${address.get('firstname')} ${address.get('lastname')}`)\n            .set('addressName', address.get('id')) : {}\n    })\n\nexport const getIsDefaultAddressFromId = createSelector(\n    getAddressID,\n    getDefaultAddress,\n    (addressId, address) => {\n        return (\n            address && address.id === addressId)\n    })\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport SkeletonText from 'progressive-web-sdk/dist/components/skeleton-text'\n\nconst AddressBlock = ({\n    firstname,\n    lastname,\n    addressLine1,\n    addressLine2,\n    city,\n    countryId,\n    country,\n    postcode,\n    telephone,\n    region,\n    className\n}) => {\n    const classes = classNames('u-padding-md c-address-block', className)\n    return (\n        <div className={classes}>\n            {firstname ?\n                <p>{firstname} {lastname}</p>\n            :\n                <SkeletonText width=\"50%\" style={{lineHeight: '20px', display: 'block'}} />\n            }\n            {addressLine1 ?\n                <p>{addressLine1}</p>\n            :\n                <SkeletonText width=\"60%\" style={{lineHeight: '20px', display: 'block'}} />\n            }\n            {addressLine2 &&\n                <p>{addressLine2}</p>\n            }\n            {city ?\n                <p>{city}, {region}, {postcode}</p>\n            :\n                <SkeletonText width=\"70%\" style={{lineHeight: '20px', display: 'block'}} />\n            }\n            {countryId || country ?\n                <p>{countryId || country}</p>\n            :\n                <SkeletonText width=\"40%\" style={{lineHeight: '20px', display: 'block'}} />\n            }\n            {telephone ?\n                <p>{telephone}</p>\n            :\n                <SkeletonText width=\"50%\" style={{lineHeight: '20px', display: 'block'}} />\n            }\n        </div>\n    )\n}\n\nAddressBlock.propTypes = {\n    addressLine1: PropTypes.string,\n    addressLine2: PropTypes.string,\n    city: PropTypes.string,\n    /**\n     * Adds values to the `class` attribute of the root element\n     */\n    className: PropTypes.string,\n    country: PropTypes.string,\n    countryId: PropTypes.string,\n    firstname: PropTypes.string,\n    lastname: PropTypes.string,\n    postcode: PropTypes.string,\n    region: PropTypes.string,\n    telephone: PropTypes.string,\n}\n\nexport default AddressBlock\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport IntegrationManager from 'mobify-integration-manager/dist/'\n\nimport template from '../../template'\nimport AddressBlock from '../../components/address-block'\nimport Card from '../../components/card'\nimport PageMeta from '../../components/page-meta'\n\nimport Breadcrumbs from 'progressive-web-sdk/dist/components/breadcrumbs'\nimport Button from 'progressive-web-sdk/dist/components/button'\nimport Icon from 'progressive-web-sdk/dist/components/icon'\n\nimport {UI_NAME} from 'progressive-web-sdk/dist/analytics/data-objects/'\nimport {getDefaultAddress, getAddresses} from 'progressive-web-sdk/dist/store/user/selectors'\n\nimport {initialize, setAddressID, setIsEditing} from './actions'\nimport {getAddressPageMeta} from './selectors'\n\nimport {getAccountURL} from '../app/selectors'\nimport {openModal} from '../../modals/actions'\nimport {\n    ACCOUNT_ADDRESS_MODAL,\n    ACCOUNT_REMOVE_ADDRESS_MODAL\n} from '../../modals/constants'\n\n\nconst NoAddress = ({dashboardURL, openAddressModal}) => (\n    <div className=\"t-account-address__empty\">\n        <div className=\"t-account-address__heading u-padding-top-lg u-padding-bottom-lg u-padding-start-md u-padding-end-md\">\n            <div className=\"t-account-address__breadcrumb\">\n                <Breadcrumbs items={[{text: 'Back to Dashboard', href: dashboardURL}]} />\n            </div>\n            <div className=\"u-margin-top-md\">\n                <h1 className=\"t-account-info__title u-text-uppercase u-width-1of2\">Address Book</h1>\n            </div>\n        </div>\n        <div className=\"u-padding-md u-margin-top-lg u-flexbox u-direction-column u-align-center u-justify-center\">\n            <Icon\n                name=\"empty\"\n                className=\"u-color-brand\"\n                size=\"huge\"\n            />\n            <div className=\"u-text-align-center u-padding-lg\">\n                You have no saved addresses.\n                    </div>\n            <Button\n                text=\"Add a new address\"\n                onClick={openAddressModal}\n                className=\"pw--tertiary u-width-full u-text-uppercase\"\n                data-analytics-name={UI_NAME.addNewAddress}\n            />\n        </div>\n    </div>\n)\n\nNoAddress.propTypes = {\n    dashboardURL: PropTypes.string,\n    openAddressModal: PropTypes.func\n}\n\nconst AccountAddress = ({\n    defaultAddress,\n    addresses,\n    dashboardURL,\n    openRemoveAddressModal,\n    openAddressModal,\n    pageMeta,\n    setIsEditing,\n    setAddressID\n}) => {\n\n    return (\n        <div>\n            <PageMeta {...pageMeta} />\n\n            {defaultAddress ?\n                <div className=\"t-account-address\">\n                    <div className=\"t-account-address__heading u-padding-top-lg u-padding-bottom-lg u-padding-start-md u-padding-end-md\">\n                        <div className=\"t-account-address__breadcrumb\">\n                            <Breadcrumbs items={[{text: 'Back to Dashboard', href: dashboardURL}]} />\n                        </div>\n                        <div className=\"u-margin-top-md\">\n                            <h1 className=\"t-account-info__title u-text-uppercase u-width-1of2\">Address Book</h1>\n                        </div>\n                        <Button\n                            text=\"Add new address\"\n                            className=\"pw--tertiary u-margin-top-lg u-width-full u-text-weight-medium\"\n                            data-analytics-name={UI_NAME.addNewAddress}\n                            onClick={() => {\n                                openAddressModal()\n                                setAddressID('')\n                            }}\n                        />\n                        <div className=\"t-account-address__content u-padding-top-md\">\n                            <Card\n                                hasBorder\n                                header={\n                                    <h3 className=\"u-padding-top-md u-padding-start-md u-padding-end-md\">Default address</h3>\n                                }\n                                children={<AddressBlock {...defaultAddress} />}\n                                footer={\n                                    <Button\n                                        type=\"button\"\n                                        title=\"Change Address\"\n                                        className=\"u-width-full u-color-brand u-border-top\"\n                                        icon=\"edit\"\n                                        showIconText={true}\n                                        iconClassName=\"u-margin-end\"\n                                        data-analytics-name={UI_NAME.editSavedAddress}\n                                        onClick={() => {\n                                            openAddressModal()\n                                            setAddressID(defaultAddress.id)\n                                            setIsEditing(true)\n                                        }}\n                                    />\n                                }\n                            />\n                            {addresses.map((address, idx) => {\n                                return (\n                                    <Card key={idx}\n                                        hasBorder\n                                        children={<AddressBlock {...address} />}\n                                        footer={\n                                            <div className=\"u-flexbox\">\n                                                <div className=\"u-flex u-border-end\">\n                                                    <Button\n                                                        type=\"button\"\n                                                        title=\"Edit\"\n                                                        className=\"u-width-full u-color-brand u-border-top\"\n                                                        icon=\"edit\"\n                                                        showIconText={true}\n                                                        iconClassName=\"u-margin-end\"\n                                                        data-analytics-name={UI_NAME.editSavedAddress}\n                                                        onClick={() => {\n                                                            openAddressModal()\n                                                            setAddressID(address.id)\n                                                            setIsEditing(true)\n                                                        }}\n                                                    />\n                                                </div>\n                                                <div className=\"u-flex\">\n                                                    <Button\n                                                        type=\"button\"\n                                                        title=\"Delete\"\n                                                        onClick={() => {\n                                                            openRemoveAddressModal()\n                                                            setAddressID(address.id)\n                                                        }}\n                                                        className=\"u-width-full u-color-brand u-border-top\"\n                                                        icon=\"trash\"\n                                                        showIconText={true}\n                                                        iconClassName=\"u-margin-end\"\n                                                        data-analytics-name={UI_NAME.removeSavedAddress}\n                                                    />\n                                                </div>\n                                            </div>\n                                        }\n                                    />\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n            :\n                <NoAddress dashboardURL={dashboardURL} openAddressModal={openAddressModal} />\n            }\n        </div>\n    )\n}\n\nAccountAddress.propTypes = {\n    addresses: PropTypes.array,\n    dashboardURL: PropTypes.string,\n    defaultAddress: PropTypes.object,\n    isEditting: PropTypes.bool,\n    openAddressModal: PropTypes.func,\n    openRemoveAddressModal: PropTypes.func,\n    pageMeta: PropTypes.object,\n    setAddressID: PropTypes.func,\n    setIsEditing: PropTypes.func,\n}\n\nAccountAddress.initAction = initialize\n\nconst mapStateToProps = createPropsSelector({\n    addresses: getAddresses,\n    defaultAddress: getDefaultAddress,\n    dashboardURL: getAccountURL,\n    pageMeta: getAddressPageMeta\n})\n\nconst mapDispatchToProps = {\n    openAddressModal: () => openModal(ACCOUNT_ADDRESS_MODAL, UI_NAME.address),\n    openRemoveAddressModal: () => openModal(ACCOUNT_REMOVE_ADDRESS_MODAL, UI_NAME.removeSavedAddress),\n    setAddressID,\n    setIsEditing,\n    removeAddress: IntegrationManager.account.deleteAddress\n}\n\nexport default template(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(AccountAddress)\n)\n"],"sourceRoot":""}