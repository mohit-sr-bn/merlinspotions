{"version":3,"sources":["webpack:///./app/containers/account-dashboard/selectors.js","webpack:///./app/containers/account-dashboard/container.jsx"],"names":["getAccountDashboard","createSelector","getUi","_ref","accountDashboard","getAccountDashboardPageMeta","createGetSelector","Immutable","Map","DashboardLinks","_ref$link","link","text","href","onClick","react_default","a","createElement","list_tile_default","className","endAction","icon_default","name","propTypes","PropTypes","shape","string","AccountDashboard","_ref2","addressUrl","accountInfoUrl","wishlistUrl","orderListUrl","pageMeta","signOut","links","isRunningInAstro","push","page_meta","list_default","map","idx","container_DashboardLinks","key","bool","object","func","initAction","initialize","mapStateToProps","createPropsSelector","getAccountAddressURL","getAccountInfoURL","getAccountOrderListURL","getWishlistURL","mapDispatchToProps","template","connect"],"mappings":"oQAUaA,EAAsBC,yBAC/BC,IACA,SAAAC,GAAA,OAAAA,EAAEC,mBAGOC,EAA8BC,4BACvCN,EACA,WACAO,IAAUC,wBCURC,EAAiB,SAAAN,GAAmC,IAAAO,EAAAP,EAAjCQ,KAAOC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,QACxC,OACIC,EAAAC,EAAAC,cAACC,EAAAF,GACGG,UAAU,4BACVN,KAAMA,EACNC,QAASA,EACTM,UAAWL,EAAAC,EAAAC,cAACI,EAAAL,GAAKM,KAAK,mBAEtBP,EAAAC,EAAAC,cAAA,WAAML,KAKlBH,EAAec,WACXZ,KAAMa,IAAUC,OACZZ,KAAMW,IAAUE,OAChBd,KAAMY,IAAUE,UAKxB,IAAMC,EAAmB,SAAAC,GAQnB,IAPFC,EAOED,EAPFC,WACAC,EAMEF,EANFE,eACAC,EAKEH,EALFG,YACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,SACAC,EAEEN,EAFFM,QAGMC,IAEEvB,KAAM,sBACNC,KAAMiB,IAGNlB,KAAM,eACNC,KAAMgB,IAGNjB,KAAM,YACNC,KAAMmB,IAGNpB,KAAM,eACNC,KAAMkB,IAGNnB,KAAM,mBACNC,KAAM,wBAYd,OAhCEe,EADFQ,kBA0BID,EAAME,MACFzB,KAAM,WACNC,KAAM,IACNC,QAASoB,IAKbnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAACqB,EAAA,EAAaL,GAEdlB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4DAAd,gBAIAJ,EAAAC,EAAAC,cAACsB,EAAAvB,GAAKG,UAAU,sDACXgB,EAAMK,IAAI,SAAC7B,EAAM8B,GAAP,OACP1B,EAAAC,EAAAC,cAACyB,GAAe/B,KAAMA,EAAMgC,IAAKF,SAOrDd,EAAiBJ,WACbO,eAAgBN,IAAUE,OAC1BG,WAAYL,IAAUE,OACtBU,iBAAkBZ,IAAUoB,KAC5BZ,aAAcR,IAAUE,OACxBO,SAAUT,IAAUqB,OACpBX,QAASV,IAAUsB,KACnBf,YAAaP,IAAUE,QAG3BC,EAAiBoB,WAAaC,IAE9B,IAAMC,EAAkBC,+BACpBrB,WAAYsB,IACZrB,eAAgBsB,IAChBpB,aAAcqB,IACdpB,SAAU5B,EACV0B,YAAauB,IACblB,uBAGEmB,GACFrB,aAGWsB,sBAASC,kBACpBR,EACAM,EAFoBE,CAGtB9B","file":"account-dashboard.js","sourcesContent":["/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport {createSelector} from 'reselect'\nimport {createGetSelector} from 'reselect-immutable-helpers'\nimport Immutable from 'immutable'\n\nimport {getUi} from '../../store/selectors'\n\nexport const getAccountDashboard = createSelector(\n    getUi,\n    ({accountDashboard}) => accountDashboard\n)\n\nexport const getAccountDashboardPageMeta = createGetSelector(\n    getAccountDashboard,\n    'pageMeta',\n    Immutable.Map()\n)\n","/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */\n/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport template from '../../template'\nimport PageMeta from '../../components/page-meta'\n\nimport ListTile from 'progressive-web-sdk/dist/components/list-tile'\nimport List from 'progressive-web-sdk/dist/components/list'\nimport Icon from 'progressive-web-sdk/dist/components/icon'\n\nimport {\n    getAccountAddressURL,\n    getAccountInfoURL,\n    getAccountOrderListURL,\n    getWishlistURL,\n    isRunningInAstro\n} from '../app/selectors'\n\nimport {getAccountDashboardPageMeta} from './selectors'\nimport {initialize} from './actions'\nimport {signOut} from '../app/actions'\n\nconst DashboardLinks = ({link: {text, href, onClick}}) => {\n    return (\n        <ListTile\n            className=\"t-account-dashboard__link\"\n            href={href}\n            onClick={onClick}\n            endAction={<Icon name=\"chevron-right\" />}\n        >\n            <div>{text}</div>\n        </ListTile>\n    )\n}\n\nDashboardLinks.propTypes = {\n    link: PropTypes.shape({\n        href: PropTypes.string,\n        text: PropTypes.string\n    })\n}\n\n\nconst AccountDashboard = ({\n    addressUrl,\n    accountInfoUrl,\n    wishlistUrl,\n    orderListUrl,\n    pageMeta,\n    signOut,\n    isRunningInAstro\n}) => {\n    const links = [\n        {\n            text: 'Account Information',\n            href: accountInfoUrl\n        },\n        {\n            text: 'Address Book',\n            href: addressUrl\n        },\n        {\n            text: 'My Orders',\n            href: orderListUrl\n        },\n        {\n            text: 'My Wish List',\n            href: wishlistUrl\n        },\n        {\n            text: 'My Subscriptions',\n            href: '/newsletter/manage/'\n        }\n    ]\n\n    if (isRunningInAstro) {\n        links.push({\n            text: 'Sign Out',\n            href: '#',\n            onClick: signOut\n        })\n    }\n\n    return (\n        <div className=\"t-account-dashboard\">\n            <PageMeta {...pageMeta} />\n\n            <h1 className=\"t-account-dashboard__title u-padding-md u-text-uppercase\">\n                My Dashboard\n            </h1>\n\n            <List className=\"u-bg-color-neutral-00 u-border-bottom u-border-top\">\n                {links.map((link, idx) =>\n                    <DashboardLinks link={link} key={idx} />\n                )}\n            </List>\n        </div>\n    )\n}\n\nAccountDashboard.propTypes = {\n    accountInfoUrl: PropTypes.string,\n    addressUrl: PropTypes.string,\n    isRunningInAstro: PropTypes.bool,\n    orderListUrl: PropTypes.string,\n    pageMeta: PropTypes.object,\n    signOut: PropTypes.func,\n    wishlistUrl: PropTypes.string\n}\n\nAccountDashboard.initAction = initialize\n\nconst mapStateToProps = createPropsSelector({\n    addressUrl: getAccountAddressURL,\n    accountInfoUrl: getAccountInfoURL,\n    orderListUrl: getAccountOrderListURL,\n    pageMeta: getAccountDashboardPageMeta,\n    wishlistUrl: getWishlistURL,\n    isRunningInAstro\n})\n\nconst mapDispatchToProps = {\n    signOut\n}\n\nexport default template(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AccountDashboard))\n"],"sourceRoot":""}