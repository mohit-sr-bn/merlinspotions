#!/usr/bin/env node
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

/* eslint-disable import/no-commonjs */
const fs = require('fs')

/**
 * Surface some useful information from the HTML and JSON reports generated by Lighthouse
 * Use by 'npm run test:check-lighthouse-score <path_of_lighthouse_report>.json
 */

let failure = false

/* eslint-disable no-undef */

/**
* Verify the Lighthouse score
*/
const checkLighthouse = function(jsonResults) {
    const actualLighthouseScore = 100 * jsonResults.categories.pwa.score
    const url = jsonResults.requestedUrl
    console.log(`\nLighthouse score check of: \n${url}`)
    // min_lighthouse_score can be adjusted in CI
    const minimumLighthouseScore = parseInt(process.env.min_lighthouse_score || process.env.npm_package_config_min_lighthouse_score)

    if (actualLighthouseScore < minimumLighthouseScore) {
        failure = true
        throw new Error(`Lighthouse score is lower than required! ${actualLighthouseScore} < ${minimumLighthouseScore}`)
    } else {
        console.log(`Lighthouse score is fine (${actualLighthouseScore})`)
    }
}

/**
* Verify time to first interactive
*/
const checkFirstInteractive = function(jsonResults) {
    const actualValue = jsonResults.audits.interactive.rawValue
    // max_first_interactive can be adjusted in CI or in package.json
    // Baseline threshold should be 10000
    const maxFirstInteractive = parseInt(process.env.max_first_interactive || process.env.npm_package_config_max_first_interactive)
    if (actualValue > maxFirstInteractive) {
        failure = true
        throw new Error(`Time to first interactive exceeds the target of ${maxFirstInteractive} ms. Actual value: ${actualValue} ms`)
    } else {
        console.log(`Time to first interactive is (${actualValue} ms)`)
    }
}

try {
    const reportsDir = process.argv[2]
    const jsonResults = JSON.parse(fs.readFileSync(`${reportsDir}`, 'utf8'))
    checkLighthouse(jsonResults)
    checkFirstInteractive(jsonResults)
} catch (e) {
    if (e.code === 'ENOENT') {
        console.log(`Lighthouse json not found. Please specify lighthouse path 'npm run check-lighthouse-score <path_of_report_json>'`)
    } else {
        console.log(e)
    }
    failure = true
}

if (failure) {
    process.exit(1)
} else {
    process.exit(0)
}
